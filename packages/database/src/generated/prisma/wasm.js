
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  emailVerified: 'emailVerified',
  name: 'name',
  image: 'image',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  username: 'username',
  avatar: 'avatar',
  bio: 'bio',
  phone: 'phone',
  website: 'website',
  location: 'location',
  timezone: 'timezone',
  userType: 'userType',
  isActive: 'isActive',
  isVerified: 'isVerified',
  onboardingCompleted: 'onboardingCompleted',
  onboardingStep: 'onboardingStep',
  credibilityScore: 'credibilityScore',
  verificationLevel: 'verificationLevel',
  isKycVerified: 'isKycVerified',
  kycDocuments: 'kycDocuments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastActiveAt: 'lastActiveAt'
};

exports.Prisma.FounderProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyExperience: 'companyExperience',
  previousExits: 'previousExits',
  linkedinProfile: 'linkedinProfile',
  industryPreferences: 'industryPreferences',
  locationPreferences: 'locationPreferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvestorProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  investorType: 'investorType',
  firmName: 'firmName',
  investmentRange: 'investmentRange',
  minInvestment: 'minInvestment',
  maxInvestment: 'maxInvestment',
  preferredStages: 'preferredStages',
  preferredIndustries: 'preferredIndustries',
  geographicFocus: 'geographicFocus',
  investmentThesis: 'investmentThesis',
  valueAddServices: 'valueAddServices',
  portfolioSize: 'portfolioSize',
  successfulExits: 'successfulExits',
  averageCheckSize: 'averageCheckSize',
  isAccredited: 'isAccredited',
  accreditationProof: 'accreditationProof',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobTitle: 'jobTitle',
  experience: 'experience',
  currentSalary: 'currentSalary',
  salaryExpectation: 'salaryExpectation',
  availabilityType: 'availabilityType',
  hoursPerWeek: 'hoursPerWeek',
  startDate: 'startDate',
  acceptsEquity: 'acceptsEquity',
  acceptsCash: 'acceptsCash',
  acceptsDeferred: 'acceptsDeferred',
  minEquityPercentage: 'minEquityPercentage',
  remotePreference: 'remotePreference',
  rolePreferences: 'rolePreferences',
  industryPreferences: 'industryPreferences',
  portfolioUrl: 'portfolioUrl',
  linkedinUrl: 'linkedinUrl',
  githubUrl: 'githubUrl',
  achievements: 'achievements',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  previousOwnerId: 'previousOwnerId',
  name: 'name',
  description: 'description',
  tagline: 'tagline',
  logo: 'logo',
  website: 'website',
  stage: 'stage',
  industry: 'industry',
  tags: 'tags',
  revenueModel: 'revenueModel',
  targetMarket: 'targetMarket',
  competitiveEdge: 'competitiveEdge',
  fundingGoal: 'fundingGoal',
  fundingRaised: 'fundingRaised',
  valuationCap: 'valuationCap',
  teamSize: 'teamSize',
  isHiring: 'isHiring',
  status: 'status',
  isActive: 'isActive',
  isPublic: 'isPublic',
  isFeatured: 'isFeatured',
  location: 'location',
  isRemoteFriendly: 'isRemoteFriendly',
  viewCount: 'viewCount',
  likeCount: 'likeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  launchedAt: 'launchedAt',
  transferredAt: 'transferredAt'
};

exports.Prisma.ProjectMemberScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  userId: 'userId',
  role: 'role',
  title: 'title',
  permissions: 'permissions',
  isCoFounder: 'isCoFounder',
  isInvestor: 'isInvestor',
  isMember: 'isMember',
  compensationType: 'compensationType',
  salaryAmount: 'salaryAmount',
  equityPercentage: 'equityPercentage',
  profitSharePercent: 'profitSharePercent',
  status: 'status',
  canPost: 'canPost',
  canComment: 'canComment',
  canViewProject: 'canViewProject',
  isBlocked: 'isBlocked',
  blockedAt: 'blockedAt',
  blockedBy: 'blockedBy',
  blockReason: 'blockReason',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt'
};

exports.Prisma.ProjectOwnershipTransferScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  fromOwnerId: 'fromOwnerId',
  toOwnerId: 'toOwnerId',
  reason: 'reason',
  notes: 'notes',
  status: 'status',
  requestedAt: 'requestedAt',
  acceptedAt: 'acceptedAt',
  rejectedAt: 'rejectedAt',
  completedAt: 'completedAt',
  requiresAcceptance: 'requiresAcceptance',
  acceptanceToken: 'acceptanceToken',
  expiresAt: 'expiresAt',
  metadata: 'metadata'
};

exports.Prisma.ProjectBlockedMemberScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  userId: 'userId',
  blockedBy: 'blockedBy',
  reason: 'reason',
  notes: 'notes',
  blockPost: 'blockPost',
  blockComment: 'blockComment',
  blockView: 'blockView',
  blockedAt: 'blockedAt',
  unblockedAt: 'unblockedAt',
  unblockedBy: 'unblockedBy',
  isActive: 'isActive'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  content: 'content',
  type: 'type',
  projectId: 'projectId',
  teamId: 'teamId',
  attachments: 'attachments',
  visibility: 'visibility',
  isPinned: 'isPinned',
  isEdited: 'isEdited',
  likeCount: 'likeCount',
  commentCount: 'commentCount',
  shareCount: 'shareCount',
  viewCount: 'viewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  editedAt: 'editedAt'
};

exports.Prisma.PostLikeScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.PostCommentScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  parentId: 'parentId',
  content: 'content',
  upvotes: 'upvotes',
  downvotes: 'downvotes',
  isEdited: 'isEdited',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  editedAt: 'editedAt'
};

exports.Prisma.PostCommentVoteScalarFieldEnum = {
  id: 'id',
  commentId: 'commentId',
  userId: 'userId',
  voteType: 'voteType',
  createdAt: 'createdAt'
};

exports.Prisma.PostShareScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  comment: 'comment',
  shareType: 'shareType',
  createdAt: 'createdAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  actorType: 'actorType',
  action: 'action',
  category: 'category',
  severity: 'severity',
  entityType: 'entityType',
  entityId: 'entityId',
  projectId: 'projectId',
  teamId: 'teamId',
  title: 'title',
  description: 'description',
  metadata: 'metadata',
  oldValue: 'oldValue',
  newValue: 'newValue',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  visibility: 'visibility',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  name: 'name',
  description: 'description',
  avatar: 'avatar',
  teamType: 'teamType',
  industry: 'industry',
  skills: 'skills',
  status: 'status',
  isActive: 'isActive',
  isHiring: 'isHiring',
  size: 'size',
  maxSize: 'maxSize',
  location: 'location',
  isRemote: 'isRemote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  userId: 'userId',
  role: 'role',
  title: 'title',
  status: 'status',
  permissions: 'permissions',
  compensationType: 'compensationType',
  salaryAmount: 'salaryAmount',
  equityPercentage: 'equityPercentage',
  hourlyRate: 'hourlyRate',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt'
};

exports.Prisma.ProjectTeamScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  teamId: 'teamId',
  role: 'role',
  status: 'status',
  assignedAt: 'assignedAt'
};

exports.Prisma.InvestmentScalarFieldEnum = {
  id: 'id',
  investorId: 'investorId',
  projectId: 'projectId',
  amount: 'amount',
  investmentType: 'investmentType',
  equityPercent: 'equityPercent',
  valuation: 'valuation',
  liquidationPref: 'liquidationPref',
  antidilution: 'antidilution',
  boardSeat: 'boardSeat',
  status: 'status',
  stage: 'stage',
  dueDiligenceCompleted: 'dueDiligenceCompleted',
  legalDocsComplete: 'legalDocsComplete',
  proposedAt: 'proposedAt',
  acceptedAt: 'acceptedAt',
  completedAt: 'completedAt',
  notes: 'notes'
};

exports.Prisma.RequestScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  targetType: 'targetType',
  projectId: 'projectId',
  teamId: 'teamId',
  proposalId: 'proposalId',
  role: 'role',
  message: 'message',
  proposedTerms: 'proposedTerms',
  status: 'status',
  response: 'response',
  respondedAt: 'respondedAt',
  createdAt: 'createdAt',
  roleApplied: 'roleApplied'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  projectId: 'projectId',
  teamId: 'teamId',
  role: 'role',
  message: 'message',
  terms: 'terms',
  expiresAt: 'expiresAt',
  response: 'response',
  respondedAt: 'respondedAt',
  createdAt: 'createdAt',
  targetType: 'targetType',
  status: 'status'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  giverId: 'giverId',
  receiverId: 'receiverId',
  contextType: 'contextType',
  projectId: 'projectId',
  teamId: 'teamId',
  proposalId: 'proposalId',
  rating: 'rating',
  title: 'title',
  content: 'content',
  workQuality: 'workQuality',
  communication: 'communication',
  reliability: 'reliability',
  leadership: 'leadership',
  technicalSkills: 'technicalSkills',
  isVerified: 'isVerified',
  isPublic: 'isPublic',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  linkedinProfile: 'linkedinProfile',
  websiteUrl: 'websiteUrl',
  companyEmail: 'companyEmail',
  status: 'status',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description'
};

exports.Prisma.UserSkillScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  skillId: 'skillId',
  proficiency: 'proficiency',
  yearsOfExp: 'yearsOfExp',
  isVerified: 'isVerified'
};

exports.Prisma.SkillEndorsementScalarFieldEnum = {
  id: 'id',
  userSkillId: 'userSkillId',
  endorserId: 'endorserId',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.InterestScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description'
};

exports.Prisma.UserInterestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  interestId: 'interestId'
};

exports.Prisma.ConnectionScalarFieldEnum = {
  id: 'id',
  requesterId: 'requesterId',
  receiverId: 'receiverId',
  status: 'status',
  message: 'message',
  requestedAt: 'requestedAt',
  acceptedAt: 'acceptedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  content: 'content',
  isRead: 'isRead',
  readAt: 'readAt',
  attachments: 'attachments',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  projectId: 'projectId',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectCommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  projectId: 'projectId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProposalCommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  proposalId: 'proposalId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProposalLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  proposalId: 'proposalId',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  content: 'content',
  relatedId: 'relatedId',
  relatedType: 'relatedType',
  isRead: 'isRead',
  readAt: 'readAt',
  createdAt: 'createdAt'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profileVisibility: 'profileVisibility',
  showEmail: 'showEmail',
  showPhone: 'showPhone',
  allowMessages: 'allowMessages',
  allowConnections: 'allowConnections',
  emailNotifications: 'emailNotifications',
  pushNotifications: 'pushNotifications',
  newInvitationEmail: 'newInvitationEmail',
  newMessageEmail: 'newMessageEmail',
  projectUpdateEmail: 'projectUpdateEmail',
  investmentUpdateEmail: 'investmentUpdateEmail',
  newConnectionEmail: 'newConnectionEmail',
  weeklyDigestEmail: 'weeklyDigestEmail',
  marketingEmails: 'marketingEmails',
  showInSearch: 'showInSearch',
  showInRecommendations: 'showInRecommendations',
  theme: 'theme',
  language: 'language',
  timezone: 'timezone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  newRequestEmail: 'newRequestEmail'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectAnalyticsScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  viewCount: 'viewCount',
  uniqueViews: 'uniqueViews',
  likeCount: 'likeCount',
  commentCount: 'commentCount',
  shareCount: 'shareCount',
  acceptedApps: 'acceptedApps',
  investmentRequests: 'investmentRequests',
  totalFunding: 'totalFunding',
  date: 'date',
  RequestCount: 'RequestCount'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.ProposalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdBy: 'createdBy',
  category: 'category',
  projectId: 'projectId',
  teamId: 'teamId',
  title: 'title',
  shortSummary: 'shortSummary',
  detailedDesc: 'detailedDesc',
  industry: 'industry',
  keywords: 'keywords',
  status: 'status',
  visibility: 'visibility',
  featured: 'featured',
  views: 'views',
  bookmarks: 'bookmarks',
  slug: 'slug',
  metaDescription: 'metaDescription',
  tags: 'tags',
  language: 'language',
  currency: 'currency',
  timezone: 'timezone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  expiresAt: 'expiresAt',
  metadata: 'metadata',
  intent: 'intent'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  proposalId: 'proposalId',
  projectId: 'projectId',
  teamId: 'teamId',
  investmentId: 'investmentId',
  verificationRequestId: 'verificationRequestId',
  filename: 'filename',
  url: 'url',
  mimeType: 'mimeType',
  size: 'size',
  type: 'type',
  description: 'description',
  language: 'language',
  version: 'version',
  isPrimary: 'isPrimary',
  checksum: 'checksum',
  views: 'views',
  downloads: 'downloads',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BudgetScalarFieldEnum = {
  id: 'id',
  minAmount: 'minAmount',
  maxAmount: 'maxAmount',
  currency: 'currency',
  description: 'description',
  proposalId: 'proposalId'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  country: 'country',
  countryCode: 'countryCode',
  region: 'region',
  city: 'city',
  remote: 'remote',
  hybrid: 'hybrid',
  willRelocate: 'willRelocate',
  timeZones: 'timeZones',
  proposalId: 'proposalId'
};

exports.Prisma.TimelineScalarFieldEnum = {
  id: 'id',
  startDate: 'startDate',
  endDate: 'endDate',
  duration: 'duration',
  commitment: 'commitment',
  availability: 'availability',
  urgency: 'urgency',
  proposalId: 'proposalId'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  website: 'website',
  linkedin: 'linkedin',
  twitter: 'twitter',
  github: 'github',
  telegram: 'telegram',
  discord: 'discord',
  preferredContact: 'preferredContact',
  publicProfile: 'publicProfile',
  proposalId: 'proposalId'
};

exports.Prisma.MembershipProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  roleTitle: 'roleTitle',
  department: 'department',
  customRole: 'customRole',
  keyResponsibilities: 'keyResponsibilities',
  requiredSkills: 'requiredSkills',
  preferredSkills: 'preferredSkills',
  experienceLevel: 'experienceLevel',
  yearsExperience: 'yearsExperience',
  compensationType: 'compensationType',
  salaryRange: 'salaryRange',
  equityRange: 'equityRange',
  benefits: 'benefits',
  timeCommitment: 'timeCommitment',
  hoursPerWeek: 'hoursPerWeek',
  startDate: 'startDate',
  duration: 'duration',
  workArrangement: 'workArrangement',
  whatOffered: 'whatOffered',
  whatExpected: 'whatExpected',
  projectStage: 'projectStage',
  teamSize: 'teamSize',
  companyValues: 'companyValues',
  teamCulture: 'teamCulture',
  currentPosition: 'currentPosition',
  portfolioUrl: 'portfolioUrl',
  availability: 'availability',
  permissions: 'permissions',
  decisionAuthority: 'decisionAuthority',
  proposalId: 'proposalId'
};

exports.Prisma.InvestorProposalScalarFieldEnum = {
  id: 'id',
  fundingNeeded: 'fundingNeeded',
  fundingType: 'fundingType',
  stage: 'stage',
  currentRevenue: 'currentRevenue',
  projectedRevenue: 'projectedRevenue',
  customers: 'customers',
  monthlyUsers: 'monthlyUsers',
  growthRate: 'growthRate',
  useOfFunds: 'useOfFunds',
  keyMetrics: 'keyMetrics',
  teamSize: 'teamSize',
  foundedDate: 'foundedDate',
  previousFunding: 'previousFunding',
  equityOffered: 'equityOffered',
  boardSeat: 'boardSeat',
  expectedROI: 'expectedROI',
  exitStrategy: 'exitStrategy',
  minInvestment: 'minInvestment',
  maxInvestment: 'maxInvestment',
  investorKind: 'investorKind',
  proposalId: 'proposalId'
};

exports.Prisma.MentorProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  guidanceAreas: 'guidanceAreas',
  specificChallenges: 'specificChallenges',
  currentStage: 'currentStage',
  preferredMentorBg: 'preferredMentorBg',
  expertiseAreas: 'expertiseAreas',
  yearsExperience: 'yearsExperience',
  industriesServed: 'industriesServed',
  successStories: 'successStories',
  menteesCriteria: 'menteesCriteria',
  preferredEngage: 'preferredEngage',
  sessionFrequency: 'sessionFrequency',
  compensationExp: 'compensationExp',
  proposalId: 'proposalId'
};

exports.Prisma.TeamProposalScalarFieldEnum = {
  id: 'id',
  hiringOrSeeking: 'hiringOrSeeking',
  roleTitle: 'roleTitle',
  department: 'department',
  seniority: 'seniority',
  mustHaveSkills: 'mustHaveSkills',
  niceToHaveSkills: 'niceToHaveSkills',
  certifications: 'certifications',
  languagesRequired: 'languagesRequired',
  workArrangement: 'workArrangement',
  compensation: 'compensation',
  salaryRange: 'salaryRange',
  benefits: 'benefits',
  companySize: 'companySize',
  companyStage: 'companyStage',
  teamCulture: 'teamCulture',
  proposalId: 'proposalId'
};

exports.Prisma.CoFounderProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  roleTitle: 'roleTitle',
  keyResponsibilities: 'keyResponsibilities',
  decisionAreas: 'decisionAreas',
  equityOffered: 'equityOffered',
  equityExpected: 'equityExpected',
  vestingSchedule: 'vestingSchedule',
  timeCommitment: 'timeCommitment',
  requiredSkills: 'requiredSkills',
  preferredBackground: 'preferredBackground',
  mustHaveExperience: 'mustHaveExperience',
  personalityTraits: 'personalityTraits',
  businessStage: 'businessStage',
  currentTeamSize: 'currentTeamSize',
  businessModel: 'businessModel',
  targetMarket: 'targetMarket',
  workStyle: 'workStyle',
  companyValues: 'companyValues',
  conflictResolution: 'conflictResolution',
  proposalId: 'proposalId'
};

exports.Prisma.PartnerProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  partnershipType: 'partnershipType',
  valueOffered: 'valueOffered',
  valueExpected: 'valueExpected',
  mutualBenefits: 'mutualBenefits',
  partnershipModel: 'partnershipModel',
  revenueSharing: 'revenueSharing',
  exclusivity: 'exclusivity',
  duration: 'duration',
  partnerCriteria: 'partnerCriteria',
  minimumRequirements: 'minimumRequirements',
  idealPartnerProfile: 'idealPartnerProfile',
  currentPartners: 'currentPartners',
  marketReach: 'marketReach',
  customerBase: 'customerBase',
  annualRevenue: 'annualRevenue',
  proposalId: 'proposalId'
};

exports.Prisma.CustomerProposalScalarFieldEnum = {
  id: 'id',
  sellingOrBuying: 'sellingOrBuying',
  productService: 'productService',
  category: 'category',
  description: 'description',
  pricingModel: 'pricingModel',
  priceRange: 'priceRange',
  availability: 'availability',
  deliveryTime: 'deliveryTime',
  targetAudience: 'targetAudience',
  customerBenefits: 'customerBenefits',
  uniqueSellingProp: 'uniqueSellingProp',
  requirements: 'requirements',
  budgetRange: 'budgetRange',
  decisionCriteria: 'decisionCriteria',
  timeframe: 'timeframe',
  marketSize: 'marketSize',
  competitors: 'competitors',
  previousClients: 'previousClients',
  testimonials: 'testimonials',
  supportIncluded: 'supportIncluded',
  warrantyTerms: 'warrantyTerms',
  paymentTerms: 'paymentTerms',
  proposalId: 'proposalId'
};

exports.Prisma.PlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  displayName: 'displayName',
  description: 'description',
  slug: 'slug',
  planType: 'planType',
  billingPeriod: 'billingPeriod',
  price: 'price',
  currency: 'currency',
  trialDays: 'trialDays',
  isActive: 'isActive',
  isFeatured: 'isFeatured',
  sortOrder: 'sortOrder',
  cappedAmount: 'cappedAmount',
  creditAmount: 'creditAmount',
  stripePriceId: 'stripePriceId',
  paypalPlanId: 'paypalPlanId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  planId: 'planId',
  subId: 'subId',
  status: 'status',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  cancelReason: 'cancelReason',
  canceledAt: 'canceledAt',
  endedAt: 'endedAt',
  trialStart: 'trialStart',
  trialEnd: 'trialEnd',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditPackageScalarFieldEnum = {
  id: 'id',
  name: 'name',
  displayName: 'displayName',
  packageType: 'packageType',
  description: 'description',
  creditAmount: 'creditAmount',
  price: 'price',
  currency: 'currency',
  bonusCredits: 'bonusCredits',
  isActive: 'isActive',
  isFeatured: 'isFeatured',
  sortOrder: 'sortOrder',
  validityDays: 'validityDays',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditPurchaseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  packageId: 'packageId',
  orderId: 'orderId',
  creditAmount: 'creditAmount',
  bonusCredits: 'bonusCredits',
  totalCredits: 'totalCredits',
  price: 'price',
  currency: 'currency',
  status: 'status',
  expiresAt: 'expiresAt',
  purchasedAt: 'purchasedAt',
  metadata: 'metadata'
};

exports.Prisma.FeatureScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  maxProjects: 'maxProjects',
  maxTeams: 'maxTeams',
  maxProposals: 'maxProposals',
  maxRequests: 'maxRequests',
  maxStorageGB: 'maxStorageGB',
  maxCredits: 'maxCredits',
  planId: 'planId',
  packageId: 'packageId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  purchaseId: 'purchaseId',
  userId: 'userId',
  billingType: 'billingType',
  amount: 'amount',
  adjustedAmount: 'adjustedAmount',
  billingPeriodStart: 'billingPeriodStart',
  billingPeriodEnd: 'billingPeriodEnd',
  currency: 'currency',
  status: 'status',
  paymentMethod: 'paymentMethod',
  paymentGateway: 'paymentGateway',
  failureReason: 'failureReason',
  receiptUrl: 'receiptUrl',
  refundId: 'refundId',
  refundReason: 'refundReason',
  intentId: 'intentId',
  chargeId: 'chargeId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  processedAt: 'processedAt'
};

exports.Prisma.BillingEventScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  creditPurchaseId: 'creditPurchaseId',
  type: 'type',
  amount: 'amount',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  promotionId: 'promotionId',
  discountId: 'discountId',
  status: 'status',
  appliedAmount: 'appliedAmount',
  failureReason: 'failureReason',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PromotionScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  type: 'type',
  value: 'value',
  unit: 'unit',
  validFrom: 'validFrom',
  validUntil: 'validUntil',
  maxUses: 'maxUses',
  usedCount: 'usedCount',
  isActive: 'isActive',
  appliedToAll: 'appliedToAll',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DiscountScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  type: 'type',
  value: 'value',
  unit: 'unit',
  validFrom: 'validFrom',
  validUntil: 'validUntil',
  maxUses: 'maxUses',
  usedCount: 'usedCount',
  isActive: 'isActive',
  appliedToAll: 'appliedToAll',
  minimumAmount: 'minimumAmount',
  maximumAmount: 'maximumAmount',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DiscountToPlanScalarFieldEnum = {
  discountId: 'discountId',
  planId: 'planId'
};

exports.Prisma.DiscountToPackageScalarFieldEnum = {
  discountId: 'discountId',
  packageId: 'packageId'
};

exports.Prisma.DiscountToUserScalarFieldEnum = {
  discountId: 'discountId',
  userId: 'userId'
};

exports.Prisma.PromotionToUserScalarFieldEnum = {
  promotionId: 'promotionId',
  userId: 'userId'
};

exports.Prisma.PromotionToPlanScalarFieldEnum = {
  promotionId: 'promotionId',
  planId: 'planId'
};

exports.Prisma.PromotionToPackageScalarFieldEnum = {
  promotionId: 'promotionId',
  packageId: 'packageId'
};

exports.Prisma.UsageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  subscriptionId: 'subscriptionId',
  creditPurchaseId: 'creditPurchaseId',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  metadata: 'metadata',
  maxProjects: 'maxProjects',
  remainingProjects: 'remainingProjects',
  maxTeams: 'maxTeams',
  remainingTeams: 'remainingTeams',
  maxProposals: 'maxProposals',
  remainingProposals: 'remainingProposals',
  maxRequests: 'maxRequests',
  remainingRequests: 'remainingRequests',
  maxStorageGB: 'maxStorageGB',
  remainingStorageGB: 'remainingStorageGB',
  maxCredits: 'maxCredits',
  remainingCredits: 'remainingCredits'
};

exports.Prisma.UserQuotaScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  subscriptionId: 'subscriptionId',
  maxProjects: 'maxProjects',
  maxTeams: 'maxTeams',
  maxProposals: 'maxProposals',
  maxRequests: 'maxRequests',
  maxConnections: 'maxConnections',
  maxMessages: 'maxMessages',
  maxStorageGB: 'maxStorageGB',
  maxCredits: 'maxCredits',
  projectsOwned: 'projectsOwned',
  teamsOwned: 'teamsOwned',
  proposalsCreated: 'proposalsCreated',
  requestsSent: 'requestsSent',
  connectionsCount: 'connectionsCount',
  messagesSent: 'messagesSent',
  storageUsedGB: 'storageUsedGB',
  totalProjectsCreated: 'totalProjectsCreated',
  totalTeamsCreated: 'totalTeamsCreated',
  totalProposalsCreated: 'totalProposalsCreated',
  totalRequestsSent: 'totalRequestsSent',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  lastResetAt: 'lastResetAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookLogScalarFieldEnum = {
  id: 'id',
  topic: 'topic',
  userId: 'userId',
  payload: 'payload',
  createdAt: 'createdAt'
};

exports.Prisma.WebhookQueueScalarFieldEnum = {
  id: 'id',
  topic: 'topic',
  userId: 'userId',
  payload: 'payload',
  status: 'status',
  attempts: 'attempts',
  error: 'error',
  createdAt: 'createdAt',
  processedAt: 'processedAt',
  nextRetryAt: 'nextRetryAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.AttachmentType = exports.$Enums.AttachmentType = {
  DOCUMENT: 'DOCUMENT',
  IMAGE: 'IMAGE',
  VIDEO: 'VIDEO',
  AUDIO: 'AUDIO',
  LINK: 'LINK',
  OTHER: 'OTHER'
};

exports.Visibility = exports.$Enums.Visibility = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  MEMBERS_ONLY: 'MEMBERS_ONLY'
};

exports.Urgency = exports.$Enums.Urgency = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.ContactMethod = exports.$Enums.ContactMethod = {
  EMAIL: 'EMAIL',
  PHONE: 'PHONE',
  LINKEDIN: 'LINKEDIN',
  TELEGRAM: 'TELEGRAM',
  DISCORD: 'DISCORD'
};

exports.InvestorKind = exports.$Enums.InvestorKind = {
  ANGEL: 'ANGEL',
  VC: 'VC',
  STRATEGIC: 'STRATEGIC',
  CROWDFUNDING: 'CROWDFUNDING',
  GOVERNMENT: 'GOVERNMENT',
  FAMILY_OFFICE: 'FAMILY_OFFICE'
};

exports.MentorDirection = exports.$Enums.MentorDirection = {
  SEEKING_MENTOR: 'SEEKING_MENTOR',
  OFFERING_MENTORSHIP: 'OFFERING_MENTORSHIP'
};

exports.MentorCompensation = exports.$Enums.MentorCompensation = {
  FREE: 'FREE',
  EQUITY: 'EQUITY',
  ADVISORY_SHARES: 'ADVISORY_SHARES',
  PAID: 'PAID',
  BARTER: 'BARTER'
};

exports.TeamDirection = exports.$Enums.TeamDirection = {
  HIRING: 'HIRING',
  SEEKING_POSITION: 'SEEKING_POSITION'
};

exports.WorkArrangement = exports.$Enums.WorkArrangement = {
  REMOTE: 'REMOTE',
  ONSITE: 'ONSITE',
  HYBRID: 'HYBRID'
};

exports.SeniorityLevel = exports.$Enums.SeniorityLevel = {
  INTERN: 'INTERN',
  JUNIOR: 'JUNIOR',
  MID_LEVEL: 'MID_LEVEL',
  SENIOR: 'SENIOR',
  LEAD: 'LEAD',
  PRINCIPAL: 'PRINCIPAL',
  DIRECTOR: 'DIRECTOR',
  VP: 'VP',
  C_LEVEL: 'C_LEVEL'
};

exports.CompanySize = exports.$Enums.CompanySize = {
  STARTUP_1_10: 'STARTUP_1_10',
  SMALL_11_50: 'SMALL_11_50',
  MEDIUM_51_200: 'MEDIUM_51_200',
  LARGE_201_1000: 'LARGE_201_1000',
  ENTERPRISE_1000_PLUS: 'ENTERPRISE_1000_PLUS'
};

exports.CofounderDirection = exports.$Enums.CofounderDirection = {
  SEEKING_COFOUNDER: 'SEEKING_COFOUNDER',
  OFFERING_COFOUNDING: 'OFFERING_COFOUNDING'
};

exports.PartnerDirection = exports.$Enums.PartnerDirection = {
  SEEKING_PARTNER: 'SEEKING_PARTNER',
  OFFERING_PARTNERSHIP: 'OFFERING_PARTNERSHIP'
};

exports.PartnershipModel = exports.$Enums.PartnershipModel = {
  REVENUE_SHARE: 'REVENUE_SHARE',
  FIXED_FEE: 'FIXED_FEE',
  COMMISSION_BASED: 'COMMISSION_BASED',
  EQUITY_BASED: 'EQUITY_BASED',
  BARTER: 'BARTER',
  JOINT_VENTURE: 'JOINT_VENTURE'
};

exports.ExclusivityType = exports.$Enums.ExclusivityType = {
  EXCLUSIVE: 'EXCLUSIVE',
  NON_EXCLUSIVE: 'NON_EXCLUSIVE',
  SEMI_EXCLUSIVE: 'SEMI_EXCLUSIVE'
};

exports.CustomerDirection = exports.$Enums.CustomerDirection = {
  SELLING: 'SELLING',
  BUYING: 'BUYING'
};

exports.UserType = exports.$Enums.UserType = {
  FOUNDER: 'FOUNDER',
  INVESTOR: 'INVESTOR',
  MEMBER: 'MEMBER',
  HYBRID: 'HYBRID'
};

exports.VerificationLevel = exports.$Enums.VerificationLevel = {
  UNVERIFIED: 'UNVERIFIED',
  EMAIL_VERIFIED: 'EMAIL_VERIFIED',
  PHONE_VERIFIED: 'PHONE_VERIFIED',
  IDENTITY_VERIFIED: 'IDENTITY_VERIFIED',
  BUSINESS_VERIFIED: 'BUSINESS_VERIFIED',
  PREMIUM_VERIFIED: 'PREMIUM_VERIFIED'
};

exports.InvestorType = exports.$Enums.InvestorType = {
  ANGEL: 'ANGEL',
  VC_FUND: 'VC_FUND',
  FAMILY_OFFICE: 'FAMILY_OFFICE',
  CORPORATE_VC: 'CORPORATE_VC',
  CROWDFUNDING: 'CROWDFUNDING',
  GOVERNMENT: 'GOVERNMENT',
  OTHER: 'OTHER'
};

exports.Commitment = exports.$Enums.Commitment = {
  PART_TIME: 'PART_TIME',
  FULL_TIME: 'FULL_TIME',
  CONTRACT: 'CONTRACT',
  FLEXIBLE: 'FLEXIBLE'
};

exports.FundingType = exports.$Enums.FundingType = {
  EQUITY: 'EQUITY',
  DEBT: 'DEBT',
  GRANT: 'GRANT',
  SAFE: 'SAFE',
  CONVERTIBLE_NOTE: 'CONVERTIBLE_NOTE',
  REVENUE_SHARE: 'REVENUE_SHARE'
};

exports.StartupStage = exports.$Enums.StartupStage = {
  IDEA: 'IDEA',
  MVP: 'MVP',
  BETA: 'BETA',
  LAUNCHED: 'LAUNCHED',
  GROWTH: 'GROWTH',
  SCALE: 'SCALE'
};

exports.EngagementType = exports.$Enums.EngagementType = {
  ONE_OFF: 'ONE_OFF',
  ONGOING: 'ONGOING',
  MENTORSHIP: 'MENTORSHIP',
  CONSULTING: 'CONSULTING'
};

exports.PartnershipType = exports.$Enums.PartnershipType = {
  STRATEGIC: 'STRATEGIC',
  TECHNOLOGY: 'TECHNOLOGY',
  DISTRIBUTION: 'DISTRIBUTION',
  MARKETING: 'MARKETING',
  JOINT_VENTURE: 'JOINT_VENTURE'
};

exports.PartnershipDuration = exports.$Enums.PartnershipDuration = {
  SHORT_TERM: 'SHORT_TERM',
  MID_TERM: 'MID_TERM',
  LONG_TERM: 'LONG_TERM'
};

exports.PricingModel = exports.$Enums.PricingModel = {
  FIXED: 'FIXED',
  HOURLY: 'HOURLY',
  SUBSCRIPTION: 'SUBSCRIPTION',
  TIERED: 'TIERED',
  USAGE_BASED: 'USAGE_BASED'
};

exports.Availability = exports.$Enums.Availability = {
  IMMEDIATE: 'IMMEDIATE',
  WITHIN_WEEK: 'WITHIN_WEEK',
  WITHIN_MONTH: 'WITHIN_MONTH',
  NEGOTIABLE: 'NEGOTIABLE'
};

exports.ProjectStage = exports.$Enums.ProjectStage = {
  IDEA: 'IDEA',
  MVP: 'MVP',
  BETA: 'BETA',
  LAUNCHED: 'LAUNCHED',
  GROWTH: 'GROWTH',
  SCALE: 'SCALE',
  EXIT: 'EXIT'
};

exports.TeamType = exports.$Enums.TeamType = {
  DEVELOPMENT: 'DEVELOPMENT',
  MARKETING: 'MARKETING',
  SALES: 'SALES',
  DESIGN: 'DESIGN',
  ADVISORY: 'ADVISORY',
  GENERAL: 'GENERAL'
};

exports.CompensationType = exports.$Enums.CompensationType = {
  CASH_ONLY: 'CASH_ONLY',
  EQUITY_ONLY: 'EQUITY_ONLY',
  CASH_AND_EQUITY: 'CASH_AND_EQUITY',
  DEFERRED_CASH: 'DEFERRED_CASH',
  PROFIT_SHARING: 'PROFIT_SHARING',
  HOURLY_RATE: 'HOURLY_RATE',
  PROJECT_BASED: 'PROJECT_BASED',
  REVENUE_SHARE: 'REVENUE_SHARE'
};

exports.MemberStatus = exports.$Enums.MemberStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  ON_LEAVE: 'ON_LEAVE',
  TERMINATED: 'TERMINATED'
};

exports.AvailabilityType = exports.$Enums.AvailabilityType = {
  FULL_TIME: 'FULL_TIME',
  PART_TIME: 'PART_TIME',
  CONTRACT: 'CONTRACT',
  CONSULTANT: 'CONSULTANT',
  INTERN: 'INTERN'
};

exports.RemotePreference = exports.$Enums.RemotePreference = {
  REMOTE_ONLY: 'REMOTE_ONLY',
  HYBRID: 'HYBRID',
  ON_SITE: 'ON_SITE',
  FLEXIBLE: 'FLEXIBLE'
};

exports.InvestmentType = exports.$Enums.InvestmentType = {
  EQUITY: 'EQUITY',
  CONVERTIBLE_NOTE: 'CONVERTIBLE_NOTE',
  SAFE: 'SAFE',
  DEBT: 'DEBT',
  REVENUE_SHARE: 'REVENUE_SHARE',
  GRANT: 'GRANT'
};

exports.InvestmentStatus = exports.$Enums.InvestmentStatus = {
  PROPOSED: 'PROPOSED',
  UNDER_REVIEW: 'UNDER_REVIEW',
  DUE_DILIGENCE: 'DUE_DILIGENCE',
  ACCEPTED: 'ACCEPTED',
  COMPLETED: 'COMPLETED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED'
};

exports.InvestmentStage = exports.$Enums.InvestmentStage = {
  INITIAL: 'INITIAL',
  SERIES_A: 'SERIES_A',
  SERIES_B: 'SERIES_B',
  SERIES_C: 'SERIES_C',
  BRIDGE: 'BRIDGE',
  MEZZANINE: 'MEZZANINE'
};

exports.ProposalType = exports.$Enums.ProposalType = {
  INVESTMENT: 'INVESTMENT',
  MENTORSHIP: 'MENTORSHIP',
  TEAM: 'TEAM',
  COFOUNDER: 'COFOUNDER',
  PARTNERSHIP: 'PARTNERSHIP',
  CUSTOMER: 'CUSTOMER',
  MEMBERSHIP: 'MEMBERSHIP'
};

exports.RoleType = exports.$Enums.RoleType = {
  INVESTOR: 'INVESTOR',
  MENTOR: 'MENTOR',
  TEAM: 'TEAM',
  COFOUNDER: 'COFOUNDER',
  PARTNER: 'PARTNER',
  CUSTOMER: 'CUSTOMER',
  MEMBER: 'MEMBER'
};

exports.ProposalStatus = exports.$Enums.ProposalStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.ProjectStatus = exports.$Enums.ProjectStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.TeamStatus = exports.$Enums.TeamStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.RequestTargetType = exports.$Enums.RequestTargetType = {
  PROJECT: 'PROJECT',
  TEAM: 'TEAM',
  INVESTMENT: 'INVESTMENT',
  COLLABORATION: 'COLLABORATION'
};

exports.RequestStatus = exports.$Enums.RequestStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  WITHDRAWN: 'WITHDRAWN',
  EXPIRED: 'EXPIRED'
};

exports.ReviewContextType = exports.$Enums.ReviewContextType = {
  PROJECT: 'PROJECT',
  TEAM: 'TEAM',
  INVESTMENT: 'INVESTMENT',
  GENERAL: 'GENERAL',
  PROPOSAL: 'PROPOSAL'
};

exports.VerificationType = exports.$Enums.VerificationType = {
  IDENTITY: 'IDENTITY',
  EDUCATION: 'EDUCATION',
  WORK_EXPERIENCE: 'WORK_EXPERIENCE',
  COMPANY: 'COMPANY',
  INVESTOR_ACCREDITATION: 'INVESTOR_ACCREDITATION',
  TECHNICAL_SKILLS: 'TECHNICAL_SKILLS'
};

exports.VerificationStatus = exports.$Enums.VerificationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED'
};

exports.ProficiencyLevel = exports.$Enums.ProficiencyLevel = {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED',
  EXPERT: 'EXPERT'
};

exports.ConnectionStatus = exports.$Enums.ConnectionStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  BLOCKED: 'BLOCKED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  REQUEST_RECEIVED: 'REQUEST_RECEIVED',
  REQUEST_STATUS: 'REQUEST_STATUS',
  INVITATION_RECEIVED: 'INVITATION_RECEIVED',
  INVITATION_STATUS: 'INVITATION_STATUS',
  MESSAGE_RECEIVED: 'MESSAGE_RECEIVED',
  CONNECTION_REQUEST: 'CONNECTION_REQUEST',
  PROJECT_UPDATE: 'PROJECT_UPDATE',
  INVESTMENT_UPDATE: 'INVESTMENT_UPDATE',
  MILESTONE_COMPLETED: 'MILESTONE_COMPLETED',
  TEAM_INVITATION: 'TEAM_INVITATION',
  REVIEW_RECEIVED: 'REVIEW_RECEIVED',
  VERIFICATION_STATUS: 'VERIFICATION_STATUS',
  SYSTEM_ANNOUNCEMENT: 'SYSTEM_ANNOUNCEMENT',
  USAGE_ALERT: 'USAGE_ALERT',
  FEATURE_UPDATE: 'FEATURE_UPDATE',
  BILLING: 'BILLING',
  MAINTENANCE: 'MAINTENANCE',
  PAYMENT: 'PAYMENT',
  SUBSCRIPTION: 'SUBSCRIPTION',
  USAGE_OVER_LIMIT: 'USAGE_OVER_LIMIT',
  USAGE_APPROACHING_LIMIT: 'USAGE_APPROACHING_LIMIT',
  PACKAGE_EXPIRED: 'PACKAGE_EXPIRED',
  SUBSCRIPTION_EXPIRED: 'SUBSCRIPTION_EXPIRED'
};

exports.ProfileVisibility = exports.$Enums.ProfileVisibility = {
  PUBLIC: 'PUBLIC',
  CONNECTIONS_ONLY: 'CONNECTIONS_ONLY',
  PRIVATE: 'PRIVATE'
};

exports.ActivityType = exports.$Enums.ActivityType = {
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  PROFILE_UPDATE: 'PROFILE_UPDATE',
  PROJECT_CREATE: 'PROJECT_CREATE',
  PROJECT_UPDATE: 'PROJECT_UPDATE',
  REQUEST_SEND: 'REQUEST_SEND',
  INVESTMENT_PROPOSE: 'INVESTMENT_PROPOSE',
  MESSAGE_SEND: 'MESSAGE_SEND',
  CONNECTION_REQUEST: 'CONNECTION_REQUEST',
  REVIEW_GIVE: 'REVIEW_GIVE'
};

exports.ProposalIntent = exports.$Enums.ProposalIntent = {
  SEEKING: 'SEEKING',
  OFFERING: 'OFFERING'
};

exports.PostType = exports.$Enums.PostType = {
  UPDATE: 'UPDATE',
  ANNOUNCEMENT: 'ANNOUNCEMENT',
  MILESTONE: 'MILESTONE',
  MEDIA: 'MEDIA',
  POLL: 'POLL',
  ARTICLE: 'ARTICLE',
  ACHIEVEMENT: 'ACHIEVEMENT'
};

exports.PostVisibility = exports.$Enums.PostVisibility = {
  PUBLIC: 'PUBLIC',
  CONNECTIONS: 'CONNECTIONS',
  TEAM: 'TEAM',
  PRIVATE: 'PRIVATE'
};

exports.VoteType = exports.$Enums.VoteType = {
  UPVOTE: 'UPVOTE',
  DOWNVOTE: 'DOWNVOTE'
};

exports.ShareType = exports.$Enums.ShareType = {
  INTERNAL: 'INTERNAL',
  EXTERNAL: 'EXTERNAL',
  EMBED: 'EMBED'
};

exports.ActorType = exports.$Enums.ActorType = {
  USER: 'USER',
  SYSTEM: 'SYSTEM',
  BOT: 'BOT',
  ADMIN: 'ADMIN'
};

exports.LogAction = exports.$Enums.LogAction = {
  USER_LOGIN: 'USER_LOGIN',
  USER_LOGOUT: 'USER_LOGOUT',
  USER_REGISTER: 'USER_REGISTER',
  USER_UPDATE: 'USER_UPDATE',
  USER_DELETE: 'USER_DELETE',
  PROJECT_CREATE: 'PROJECT_CREATE',
  PROJECT_UPDATE: 'PROJECT_UPDATE',
  PROJECT_DELETE: 'PROJECT_DELETE',
  PROJECT_PUBLISH: 'PROJECT_PUBLISH',
  PROJECT_ARCHIVE: 'PROJECT_ARCHIVE',
  PROJECT_TRANSFER: 'PROJECT_TRANSFER',
  TEAM_CREATE: 'TEAM_CREATE',
  TEAM_UPDATE: 'TEAM_UPDATE',
  TEAM_DELETE: 'TEAM_DELETE',
  MEMBER_ADD: 'MEMBER_ADD',
  MEMBER_REMOVE: 'MEMBER_REMOVE',
  MEMBER_BLOCK: 'MEMBER_BLOCK',
  MEMBER_UNBLOCK: 'MEMBER_UNBLOCK',
  MEMBER_ROLE_CHANGE: 'MEMBER_ROLE_CHANGE',
  INVESTMENT_PROPOSE: 'INVESTMENT_PROPOSE',
  INVESTMENT_ACCEPT: 'INVESTMENT_ACCEPT',
  INVESTMENT_REJECT: 'INVESTMENT_REJECT',
  PROPOSAL_CREATE: 'PROPOSAL_CREATE',
  PROPOSAL_UPDATE: 'PROPOSAL_UPDATE',
  PROPOSAL_DELETE: 'PROPOSAL_DELETE',
  PROPOSAL_PUBLISH: 'PROPOSAL_PUBLISH',
  SYSTEM_MAINTENANCE: 'SYSTEM_MAINTENANCE',
  SYSTEM_UPDATE: 'SYSTEM_UPDATE',
  SYSTEM_ALERT: 'SYSTEM_ALERT',
  SECURITY_LOGIN_FAILED: 'SECURITY_LOGIN_FAILED',
  SECURITY_PASSWORD_CHANGE: 'SECURITY_PASSWORD_CHANGE',
  SECURITY_2FA_ENABLE: 'SECURITY_2FA_ENABLE',
  SECURITY_SUSPICIOUS_ACTIVITY: 'SECURITY_SUSPICIOUS_ACTIVITY'
};

exports.LogCategory = exports.$Enums.LogCategory = {
  USER: 'USER',
  PROJECT: 'PROJECT',
  TEAM: 'TEAM',
  INVESTMENT: 'INVESTMENT',
  PROPOSAL: 'PROPOSAL',
  SYSTEM: 'SYSTEM',
  SECURITY: 'SECURITY',
  NOTIFICATION: 'NOTIFICATION',
  PAYMENT: 'PAYMENT',
  CONTENT: 'CONTENT'
};

exports.LogSeverity = exports.$Enums.LogSeverity = {
  INFO: 'INFO',
  WARNING: 'WARNING',
  ERROR: 'ERROR',
  CRITICAL: 'CRITICAL'
};

exports.LogVisibility = exports.$Enums.LogVisibility = {
  PUBLIC: 'PUBLIC',
  TEAM: 'TEAM',
  ADMIN: 'ADMIN',
  PRIVATE: 'PRIVATE'
};

exports.MembershipDirection = exports.$Enums.MembershipDirection = {
  SEEKING_MEMBERSHIP: 'SEEKING_MEMBERSHIP',
  OFFERING_MEMBERSHIP: 'OFFERING_MEMBERSHIP'
};

exports.TransferStatus = exports.$Enums.TransferStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

exports.Permission = exports.$Enums.Permission = {
  VIEW_PROJECT: 'VIEW_PROJECT',
  EDIT_PROJECT: 'EDIT_PROJECT',
  DELETE_PROJECT: 'DELETE_PROJECT',
  MANAGE_MEMBERS: 'MANAGE_MEMBERS',
  MANAGE_FINANCES: 'MANAGE_FINANCES',
  MANAGE_INVESTORS: 'MANAGE_INVESTORS',
  VIEW_ANALYTICS: 'VIEW_ANALYTICS',
  EDIT_PROFILE: 'EDIT_PROFILE',
  MANAGE_REQUESTS: 'MANAGE_REQUESTS',
  MANAGE_INVITATIONS: 'MANAGE_INVITATIONS',
  CREATE_UPDATES: 'CREATE_UPDATES',
  MANAGE_MILESTONES: 'MANAGE_MILESTONES',
  ADMIN_ACCESS: 'ADMIN_ACCESS',
  TRANSFER_OWNERSHIP: 'TRANSFER_OWNERSHIP',
  BLOCK_MEMBERS: 'BLOCK_MEMBERS',
  MANAGE_PERMISSIONS: 'MANAGE_PERMISSIONS'
};

exports.PlanType = exports.$Enums.PlanType = {
  FREE: 'FREE',
  BASIC: 'BASIC',
  PROFESSIONAL: 'PROFESSIONAL',
  BUSINESS: 'BUSINESS',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

exports.BillingPeriod = exports.$Enums.BillingPeriod = {
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY',
  YEARLY: 'YEARLY',
  LIFETIME: 'LIFETIME'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  TRIALING: 'TRIALING',
  PAST_DUE: 'PAST_DUE',
  CANCELED: 'CANCELED',
  UNPAID: 'UNPAID',
  PAUSED: 'PAUSED',
  EXPIRED: 'EXPIRED',
  ON_HOLD: 'ON_HOLD'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SUCCEEDED: 'SUCCEEDED',
  FAILED: 'FAILED',
  CANCELED: 'CANCELED',
  REFUNDED: 'REFUNDED',
  EXPIRED: 'EXPIRED',
  DENIED: 'DENIED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  BANK_TRANSFER: 'BANK_TRANSFER',
  E_WALLET: 'E_WALLET',
  CRYPTO: 'CRYPTO',
  CASH: 'CASH',
  OTHER: 'OTHER'
};

exports.PaymentGateway = exports.$Enums.PaymentGateway = {
  PAYPAL: 'PAYPAL',
  STRIPE: 'STRIPE',
  BRAINTREE: 'BRAINTREE',
  ADYEN: 'ADYEN',
  RAZORPAY: 'RAZORPAY',
  SQUARE: 'SQUARE',
  AUTHORIZE_NET: 'AUTHORIZE_NET',
  OTHER: 'OTHER'
};

exports.Interval = exports.$Enums.Interval = {
  EVERY_30_DAYS: 'EVERY_30_DAYS',
  ANNUAL: 'ANNUAL'
};

exports.PromotionUnit = exports.$Enums.PromotionUnit = {
  PERCENTAGE: 'PERCENTAGE',
  AMOUNT: 'AMOUNT',
  CREDITS: 'CREDITS',
  DAYS: 'DAYS',
  REQUESTS: 'REQUESTS',
  TOKENS: 'TOKENS'
};

exports.DiscountUnit = exports.$Enums.DiscountUnit = {
  PERCENTAGE: 'PERCENTAGE',
  AMOUNT: 'AMOUNT',
  CREDITS: 'CREDITS',
  REQUESTS: 'REQUESTS',
  TOKENS: 'TOKENS'
};

exports.BillingType = exports.$Enums.BillingType = {
  SUBSCRIPTION: 'SUBSCRIPTION',
  PAY_AS_YOU_GO: 'PAY_AS_YOU_GO',
  ONE_TIME: 'ONE_TIME'
};

exports.PackageType = exports.$Enums.PackageType = {
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  LARGE: 'LARGE',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

exports.PurchaseStatus = exports.$Enums.PurchaseStatus = {
  ACTIVE: 'ACTIVE',
  CANCELLED: 'CANCELLED',
  FROZEN: 'FROZEN',
  EXPIRED: 'EXPIRED'
};

exports.BillingEventType = exports.$Enums.BillingEventType = {
  PROMOTION: 'PROMOTION',
  DISCOUNT: 'DISCOUNT',
  CREDIT: 'CREDIT',
  REFUND: 'REFUND',
  ADJUSTMENT: 'ADJUSTMENT'
};

exports.BillingEventStatus = exports.$Enums.BillingEventStatus = {
  PENDING: 'PENDING',
  APPLIED: 'APPLIED',
  FAILED: 'FAILED',
  REVERSED: 'REVERSED',
  EXPIRED: 'EXPIRED'
};

exports.PromotionType = exports.$Enums.PromotionType = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED_AMOUNT: 'FIXED_AMOUNT',
  FREE_TRIAL: 'FREE_TRIAL',
  USAGE_BOOST: 'USAGE_BOOST',
  CREDIT_BONUS: 'CREDIT_BONUS',
  TIME_EXTENSION: 'TIME_EXTENSION',
  TIER_UPGRADE: 'TIER_UPGRADE',
  EARLY_ADAPTER: 'EARLY_ADAPTER'
};

exports.DiscountType = exports.$Enums.DiscountType = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED_AMOUNT: 'FIXED_AMOUNT',
  VOLUME: 'VOLUME',
  LOYALTY: 'LOYALTY',
  SEASONAL: 'SEASONAL',
  REFERRAL: 'REFERRAL',
  EARLY_ADAPTER: 'EARLY_ADAPTER',
  BUNDLE: 'BUNDLE'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  Session: 'Session',
  User: 'User',
  FounderProfile: 'FounderProfile',
  InvestorProfile: 'InvestorProfile',
  MemberProfile: 'MemberProfile',
  Project: 'Project',
  ProjectMember: 'ProjectMember',
  ProjectOwnershipTransfer: 'ProjectOwnershipTransfer',
  ProjectBlockedMember: 'ProjectBlockedMember',
  Post: 'Post',
  PostLike: 'PostLike',
  PostComment: 'PostComment',
  PostCommentVote: 'PostCommentVote',
  PostShare: 'PostShare',
  ActivityLog: 'ActivityLog',
  Team: 'Team',
  TeamMember: 'TeamMember',
  ProjectTeam: 'ProjectTeam',
  Investment: 'Investment',
  Request: 'Request',
  Invitation: 'Invitation',
  Review: 'Review',
  VerificationRequest: 'VerificationRequest',
  Skill: 'Skill',
  UserSkill: 'UserSkill',
  SkillEndorsement: 'SkillEndorsement',
  Interest: 'Interest',
  UserInterest: 'UserInterest',
  Connection: 'Connection',
  Message: 'Message',
  ProjectLike: 'ProjectLike',
  ProjectComment: 'ProjectComment',
  ProposalComment: 'ProposalComment',
  ProposalLike: 'ProposalLike',
  Notification: 'Notification',
  UserSettings: 'UserSettings',
  UserActivity: 'UserActivity',
  ProjectAnalytics: 'ProjectAnalytics',
  VerificationToken: 'VerificationToken',
  Proposal: 'Proposal',
  Attachment: 'Attachment',
  Budget: 'Budget',
  Location: 'Location',
  Timeline: 'Timeline',
  Contact: 'Contact',
  MembershipProposal: 'MembershipProposal',
  InvestorProposal: 'InvestorProposal',
  MentorProposal: 'MentorProposal',
  TeamProposal: 'TeamProposal',
  CoFounderProposal: 'CoFounderProposal',
  PartnerProposal: 'PartnerProposal',
  CustomerProposal: 'CustomerProposal',
  Plan: 'Plan',
  Subscription: 'Subscription',
  CreditPackage: 'CreditPackage',
  CreditPurchase: 'CreditPurchase',
  Feature: 'Feature',
  Payment: 'Payment',
  BillingEvent: 'BillingEvent',
  Promotion: 'Promotion',
  Discount: 'Discount',
  DiscountToPlan: 'DiscountToPlan',
  DiscountToPackage: 'DiscountToPackage',
  DiscountToUser: 'DiscountToUser',
  PromotionToUser: 'PromotionToUser',
  PromotionToPlan: 'PromotionToPlan',
  PromotionToPackage: 'PromotionToPackage',
  Usage: 'Usage',
  UserQuota: 'UserQuota',
  WebhookLog: 'WebhookLog',
  WebhookQueue: 'WebhookQueue'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\DELL\\Omnibus\\xovira\\packages\\database\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\DELL\\Omnibus\\xovira\\packages\\database\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            String  @map(\"user_id\")\n  type              String\n  provider          String\n  providerAccountId String  @map(\"provider_account_id\")\n  refresh_token     String?\n  access_token      String?\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  session_state     String?\n  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@map(\"accounts\")\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique @map(\"session_token\")\n  userId       String   @map(\"user_id\")\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel User {\n  id                   String                @id @default(cuid())\n  email                String                @unique\n  emailVerified        DateTime?             @map(\"email_verified\")\n  name                 String?\n  image                String?\n  password             String?\n  firstName            String?               @map(\"first_name\")\n  lastName             String?               @map(\"last_name\")\n  username             String?               @unique\n  avatar               String?\n  bio                  String?\n  phone                String?\n  website              String?\n  location             String?\n  timezone             String?               @default(\"UTC\")\n  userType             UserType              @default(FOUNDER) @map(\"user_type\")\n  isActive             Boolean               @default(true) @map(\"is_active\")\n  isVerified           Boolean               @default(false) @map(\"is_verified\")\n  onboardingCompleted  Boolean               @default(false) @map(\"onboarding_completed\")\n  onboardingStep       Int                   @default(0) @map(\"onboarding_step\")\n  credibilityScore     Float                 @default(0) @map(\"credibility_score\")\n  verificationLevel    VerificationLevel     @default(UNVERIFIED) @map(\"verification_level\")\n  isKycVerified        Boolean               @default(false) @map(\"is_kyc_verified\")\n  kycDocuments         String[]              @map(\"kyc_documents\")\n  createdAt            DateTime              @default(now()) @map(\"created_at\")\n  updatedAt            DateTime              @updatedAt @map(\"updated_at\")\n  lastActiveAt         DateTime?             @map(\"last_active_at\")\n  accounts             Account[]\n  activityLogs         ActivityLog[]\n  receivedConnections  Connection[]          @relation(\"ConnectionReceiver\")\n  connections          Connection[]          @relation(\"ConnectionRequester\")\n  founderProfile       FounderProfile?\n  investments          Investment[]\n  investorProfile      InvestorProfile?\n  receivedInvitations  Invitation[]          @relation(\"InvitationReceiver\")\n  sentInvitations      Invitation[]          @relation(\"InvitationSender\")\n  memberProfile        MemberProfile?\n  receivedMessages     Message[]             @relation(\"MessageReceiver\")\n  sentMessages         Message[]             @relation(\"MessageSender\")\n  notifications        Notification[]\n  postCommentVotes     PostCommentVote[]\n  postComments         PostComment[]\n  postLikes            PostLike[]\n  postShares           PostShare[]\n  posts                Post[]\n  projectComments      ProjectComment[]\n  projectLikes         ProjectLike[]\n  participatedProjects ProjectMember[]\n  ownedProjects        Project[]             @relation(\"ProjectOwner\")\n  proposalComments     ProposalComment[]\n  proposalLikes        ProposalLike[]\n  proposals            Proposal[]\n  receivedRequests     Request[]             @relation(\"RequestReceiver\")\n  sentRequests         Request[]             @relation(\"RequestSender\")\n  givenReviews         Review[]              @relation(\"ReviewGiver\")\n  receivedReviews      Review[]              @relation(\"ReviewReceiver\")\n  sessions             Session[]\n  skillEndorsements    SkillEndorsement[]    @relation(\"SkillEndorser\")\n  teamMemberships      TeamMember[]          @relation(\"TeamMemberUser\")\n  ownedTeams           Team[]                @relation(\"TeamOwner\")\n  activities           UserActivity[]\n  interests            UserInterest[]\n  settings             UserSettings?\n  skills               UserSkill[]\n  verificationRequests VerificationRequest[]\n\n  transfersFrom       ProjectOwnershipTransfer[] @relation(\"TransferFrom\")\n  transfersTo         ProjectOwnershipTransfer[] @relation(\"TransferTo\")\n  blockedFromProjects ProjectBlockedMember[]     @relation(\"BlockedUser\")\n  blockedUsers        ProjectBlockedMember[]     @relation(\"BlockerUser\")\n\n  subscriptions   Subscription[]   @relation(\"userSubscriptions\")\n  creditPurchases CreditPurchase[] @relation(\"userCreditPurchases\")\n\n  payments Payment[] @relation(\"userPayments\")\n\n  discounts  DiscountToUser[]  @relation(\"userDiscounts\")\n  promotions PromotionToUser[] @relation(\"userPromotions\")\n\n  usages Usage[]    @relation(\"userUsages\")\n  quota  UserQuota?\n\n  @@map(\"users\")\n}\n\nmodel FounderProfile {\n  id                  String   @id @default(cuid())\n  userId              String   @unique @map(\"user_id\")\n  companyExperience   Int?     @map(\"company_experience\")\n  previousExits       String[] @map(\"previous_exits\")\n  linkedinProfile     String?  @map(\"linkedin_profile\")\n  industryPreferences String[] @map(\"industry_preferences\")\n  locationPreferences String[] @map(\"location_preferences\")\n  createdAt           DateTime @default(now()) @map(\"created_at\")\n  updatedAt           DateTime @updatedAt @map(\"updated_at\")\n  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"founder_profiles\")\n}\n\nmodel InvestorProfile {\n  id                  String         @id @default(cuid())\n  userId              String         @unique @map(\"user_id\")\n  investorType        InvestorType   @map(\"investor_type\")\n  firmName            String?        @map(\"firm_name\")\n  investmentRange     String?        @map(\"investment_range\")\n  minInvestment       Float?         @map(\"min_investment\")\n  maxInvestment       Float?         @map(\"max_investment\")\n  preferredStages     ProjectStage[] @map(\"preferred_stages\")\n  preferredIndustries String[]       @map(\"preferred_industries\")\n  geographicFocus     String[]       @map(\"geographic_focus\")\n  investmentThesis    String?        @map(\"investment_thesis\")\n  valueAddServices    String[]       @map(\"value_add_services\")\n  portfolioSize       Int?           @default(0) @map(\"portfolio_size\")\n  successfulExits     Int?           @default(0) @map(\"successful_exits\")\n  averageCheckSize    Float?         @map(\"average_check_size\")\n  isAccredited        Boolean        @default(false) @map(\"is_accredited\")\n  accreditationProof  String?        @map(\"accreditation_proof\")\n  createdAt           DateTime       @default(now()) @map(\"created_at\")\n  updatedAt           DateTime       @updatedAt @map(\"updated_at\")\n  user                User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"investor_profiles\")\n}\n\nmodel MemberProfile {\n  id                  String           @id @default(cuid())\n  userId              String           @unique @map(\"user_id\")\n  jobTitle            String?          @map(\"job_title\")\n  experience          Int?\n  currentSalary       Float?           @map(\"current_salary\")\n  salaryExpectation   Float?           @map(\"salary_expectation\")\n  availabilityType    AvailabilityType @default(FULL_TIME) @map(\"availability_type\")\n  hoursPerWeek        Int?             @map(\"hours_per_week\")\n  startDate           DateTime?        @map(\"start_date\")\n  acceptsEquity       Boolean          @default(true) @map(\"accepts_equity\")\n  acceptsCash         Boolean          @default(true) @map(\"accepts_cash\")\n  acceptsDeferred     Boolean          @default(false) @map(\"accepts_deferred\")\n  minEquityPercentage Float?           @map(\"min_equity_percentage\")\n  remotePreference    RemotePreference @default(HYBRID) @map(\"remote_preference\")\n  rolePreferences     String[]         @map(\"role_preferences\")\n  industryPreferences String[]         @map(\"industry_preferences\")\n  portfolioUrl        String?          @map(\"portfolio_url\")\n  linkedinUrl         String?          @map(\"linkedin_url\")\n  githubUrl           String?          @map(\"github_url\")\n  achievements        String[]\n  createdAt           DateTime         @default(now()) @map(\"created_at\")\n  updatedAt           DateTime         @updatedAt @map(\"updated_at\")\n  user                User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"member_profiles\")\n}\n\nmodel Project {\n  id               String        @id @default(cuid())\n  ownerId          String        @map(\"owner_id\")\n  previousOwnerId  String?       @map(\"previous_owner_id\") // Track ownership history\n  name             String\n  description      String\n  tagline          String?\n  logo             String?\n  website          String?\n  stage            ProjectStage?\n  industry         String[]\n  tags             String[]\n  revenueModel     String[]      @map(\"revenue_model\")\n  targetMarket     String?       @map(\"target_market\")\n  competitiveEdge  String?       @map(\"competitive_edge\")\n  fundingGoal      Float?        @map(\"funding_goal\")\n  fundingRaised    Float?        @default(0) @map(\"funding_raised\")\n  valuationCap     Float?        @map(\"valuation_cap\")\n  teamSize         Int           @default(1) @map(\"team_size\")\n  isHiring         Boolean       @default(false) @map(\"is_hiring\")\n  status           ProjectStatus @default(DRAFT)\n  isActive         Boolean       @default(true) @map(\"is_active\")\n  isPublic         Boolean       @default(true) @map(\"is_public\")\n  isFeatured       Boolean       @default(false) @map(\"is_featured\")\n  location         String?\n  isRemoteFriendly Boolean       @default(true) @map(\"is_remote_friendly\")\n  viewCount        Int           @default(0) @map(\"view_count\")\n  likeCount        Int           @default(0) @map(\"like_count\")\n  createdAt        DateTime      @default(now()) @map(\"created_at\")\n  updatedAt        DateTime      @updatedAt @map(\"updated_at\")\n  launchedAt       DateTime?     @map(\"launched_at\")\n  transferredAt    DateTime?     @map(\"transferred_at\") // Track when ownership was transferred\n\n  activityLogs       ActivityLog[]\n  attachments        Attachment[]               @relation(\"ProjectAttachments\")\n  investments        Investment[]\n  invitations        Invitation[]\n  posts              Post[]\n  analytics          ProjectAnalytics[]\n  comments           ProjectComment[]\n  likes              ProjectLike[]\n  members            ProjectMember[]\n  teams              ProjectTeam[]\n  owner              User                       @relation(\"ProjectOwner\", fields: [ownerId], references: [id], onDelete: Cascade)\n  proposals          Proposal[]\n  requests           Request[]\n  reviews            Review[]\n  ownershipTransfers ProjectOwnershipTransfer[] // Track all transfers\n  blockedMembers     ProjectBlockedMember[] // Track blocked members\n\n  @@map(\"projects\")\n}\n\nmodel ProjectMember {\n  id                 String           @id @default(cuid())\n  projectId          String           @map(\"project_id\")\n  userId             String           @map(\"user_id\")\n  role               String\n  title              String?\n  permissions        Permission[]\n  isCoFounder        Boolean          @default(false) @map(\"is_cofounder\")\n  isInvestor         Boolean          @default(false) @map(\"is_investor\")\n  isMember           Boolean          @default(false) @map(\"is_member\")\n  compensationType   CompensationType @map(\"compensation_type\")\n  salaryAmount       Float?           @map(\"salary_amount\")\n  equityPercentage   Float?           @map(\"equity_percentage\")\n  profitSharePercent Float?           @map(\"profit_share_percent\")\n  status             MemberStatus     @default(ACTIVE)\n\n  // Member restrictions\n  canPost        Boolean   @default(true) @map(\"can_post\")\n  canComment     Boolean   @default(true) @map(\"can_comment\")\n  canViewProject Boolean   @default(true) @map(\"can_view_project\")\n  isBlocked      Boolean   @default(false) @map(\"is_blocked\")\n  blockedAt      DateTime? @map(\"blocked_at\")\n  blockedBy      String?   @map(\"blocked_by\") // User ID who blocked\n  blockReason    String?   @map(\"block_reason\")\n\n  joinedAt DateTime  @default(now()) @map(\"joined_at\")\n  leftAt   DateTime? @map(\"left_at\")\n\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, userId])\n  @@index([isBlocked])\n  @@index([status])\n  @@map(\"project_members\")\n}\n\n// New model to track project ownership transfers\nmodel ProjectOwnershipTransfer {\n  id          String         @id @default(cuid())\n  projectId   String         @map(\"project_id\")\n  fromOwnerId String         @map(\"from_owner_id\")\n  toOwnerId   String         @map(\"to_owner_id\")\n  reason      String? // Optional reason for transfer\n  notes       String? // Additional notes\n  status      TransferStatus @default(PENDING)\n\n  // Transfer request details\n  requestedAt DateTime  @default(now()) @map(\"requested_at\")\n  acceptedAt  DateTime? @map(\"accepted_at\")\n  rejectedAt  DateTime? @map(\"rejected_at\")\n  completedAt DateTime? @map(\"completed_at\")\n\n  // Optional: Require new owner acceptance\n  requiresAcceptance Boolean   @default(true) @map(\"requires_acceptance\")\n  acceptanceToken    String?   @unique @map(\"acceptance_token\")\n  expiresAt          DateTime? @map(\"expires_at\")\n\n  metadata Json?\n\n  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  fromOwner User    @relation(\"TransferFrom\", fields: [fromOwnerId], references: [id])\n  toOwner   User    @relation(\"TransferTo\", fields: [toOwnerId], references: [id])\n\n  @@index([projectId])\n  @@index([fromOwnerId])\n  @@index([toOwnerId])\n  @@index([status])\n  @@map(\"project_ownership_transfers\")\n}\n\n// Track blocked members separately for audit trail\nmodel ProjectBlockedMember {\n  id        String  @id @default(cuid())\n  projectId String  @map(\"project_id\")\n  userId    String  @map(\"user_id\")\n  blockedBy String  @map(\"blocked_by\")\n  reason    String?\n  notes     String?\n\n  // What they're blocked from\n  blockPost    Boolean @default(true) @map(\"block_post\")\n  blockComment Boolean @default(true) @map(\"block_comment\")\n  blockView    Boolean @default(false) @map(\"block_view\")\n\n  blockedAt   DateTime  @default(now()) @map(\"blocked_at\")\n  unblockedAt DateTime? @map(\"unblocked_at\")\n  unblockedBy String?   @map(\"unblocked_by\")\n  isActive    Boolean   @default(true) @map(\"is_active\")\n\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user    User    @relation(\"BlockedUser\", fields: [userId], references: [id], onDelete: Cascade)\n  blocker User    @relation(\"BlockerUser\", fields: [blockedBy], references: [id])\n\n  @@unique([projectId, userId, isActive])\n  @@index([projectId])\n  @@index([userId])\n  @@index([isActive])\n  @@map(\"project_blocked_members\")\n}\n\nmodel Post {\n  id           String         @id @default(dbgenerated(\"gen_random_uuid()\"))\n  userId       String         @map(\"user_id\")\n  content      String\n  type         PostType       @default(UPDATE)\n  projectId    String?        @map(\"project_id\")\n  teamId       String?        @map(\"team_id\")\n  attachments  String[]\n  visibility   PostVisibility @default(PUBLIC)\n  isPinned     Boolean        @default(false) @map(\"is_pinned\")\n  isEdited     Boolean        @default(false) @map(\"is_edited\")\n  likeCount    Int            @default(0) @map(\"like_count\")\n  commentCount Int            @default(0) @map(\"comment_count\")\n  shareCount   Int            @default(0) @map(\"share_count\")\n  viewCount    Int            @default(0) @map(\"view_count\")\n  createdAt    DateTime       @default(now()) @map(\"created_at\")\n  updatedAt    DateTime       @updatedAt @map(\"updated_at\")\n  editedAt     DateTime?      @map(\"edited_at\")\n  comments     PostComment[]\n  likes        PostLike[]\n  shares       PostShare[]\n  project      Project?       @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  team         Team?          @relation(fields: [teamId], references: [id], onDelete: Cascade)\n  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([projectId])\n  @@index([teamId])\n  @@index([createdAt])\n  @@index([visibility, createdAt])\n  @@map(\"posts\")\n}\n\nmodel PostLike {\n  id        String   @id @default(cuid())\n  postId    String   @map(\"post_id\")\n  userId    String   @map(\"user_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([postId, userId])\n  @@index([userId])\n  @@map(\"post_likes\")\n}\n\nmodel PostComment {\n  id        String            @id @default(cuid())\n  postId    String            @map(\"post_id\")\n  userId    String            @map(\"user_id\")\n  parentId  String?           @map(\"parent_id\")\n  content   String\n  upvotes   Int               @default(0)\n  downvotes Int               @default(0)\n  isEdited  Boolean           @default(false) @map(\"is_edited\")\n  createdAt DateTime          @default(now()) @map(\"created_at\")\n  updatedAt DateTime          @updatedAt @map(\"updated_at\")\n  editedAt  DateTime?         @map(\"edited_at\")\n  votes     PostCommentVote[]\n  parent    PostComment?      @relation(\"CommentReplies\", fields: [parentId], references: [id], onDelete: Cascade)\n  replies   PostComment[]     @relation(\"CommentReplies\")\n  post      Post              @relation(fields: [postId], references: [id], onDelete: Cascade)\n  user      User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([postId])\n  @@index([userId])\n  @@index([parentId])\n  @@index([createdAt])\n  @@map(\"post_comments\")\n}\n\nmodel PostCommentVote {\n  id        String      @id @default(cuid())\n  commentId String      @map(\"comment_id\")\n  userId    String      @map(\"user_id\")\n  voteType  VoteType    @map(\"vote_type\")\n  createdAt DateTime    @default(now()) @map(\"created_at\")\n  comment   PostComment @relation(fields: [commentId], references: [id], onDelete: Cascade)\n  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([commentId, userId])\n  @@index([userId])\n  @@map(\"post_comment_votes\")\n}\n\nmodel PostShare {\n  id        String    @id @default(cuid())\n  postId    String    @map(\"post_id\")\n  userId    String    @map(\"user_id\")\n  comment   String?\n  shareType ShareType @default(INTERNAL) @map(\"share_type\")\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)\n  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([postId])\n  @@index([userId])\n  @@map(\"post_shares\")\n}\n\nmodel ActivityLog {\n  id          String        @id @default(cuid())\n  userId      String?       @map(\"user_id\")\n  actorType   ActorType     @default(USER) @map(\"actor_type\")\n  action      LogAction\n  category    LogCategory\n  severity    LogSeverity   @default(INFO)\n  entityType  String?       @map(\"entity_type\")\n  entityId    String?       @map(\"entity_id\")\n  projectId   String?       @map(\"project_id\")\n  teamId      String?       @map(\"team_id\")\n  title       String        @db.VarChar(200)\n  description String?\n  metadata    Json?\n  oldValue    Json?         @map(\"old_value\")\n  newValue    Json?         @map(\"new_value\")\n  ipAddress   String?       @map(\"ip_address\")\n  userAgent   String?       @map(\"user_agent\")\n  visibility  LogVisibility @default(PRIVATE)\n  isRead      Boolean       @default(false) @map(\"is_read\")\n  createdAt   DateTime      @default(now()) @map(\"created_at\")\n  project     Project?      @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  team        Team?         @relation(fields: [teamId], references: [id], onDelete: Cascade)\n  user        User?         @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([projectId])\n  @@index([teamId])\n  @@index([action, category])\n  @@index([createdAt])\n  @@index([entityType, entityId])\n  @@map(\"activity_logs\")\n}\n\nmodel Team {\n  id           String        @id @default(cuid())\n  ownerId      String        @map(\"owner_id\")\n  name         String\n  description  String\n  avatar       String?\n  teamType     TeamType\n  industry     String[]\n  skills       String[]\n  status       TeamStatus    @default(DRAFT)\n  isActive     Boolean       @default(true) @map(\"is_active\")\n  isHiring     Boolean       @default(false) @map(\"is_hiring\")\n  size         Int           @default(1)\n  maxSize      Int?          @map(\"max_size\")\n  location     String?\n  isRemote     Boolean       @default(true) @map(\"is_remote\")\n  createdAt    DateTime      @default(now()) @map(\"created_at\")\n  updatedAt    DateTime      @updatedAt @map(\"updated_at\")\n  activityLogs ActivityLog[]\n  attachments  Attachment[]  @relation(\"TeamAttachments\")\n  invitations  Invitation[]\n  posts        Post[]\n  projects     ProjectTeam[]\n  Requests     Request[]\n  reviews      Review[]\n  members      TeamMember[]  @relation(\"TeamMemberTeam\")\n  owner        User          @relation(\"TeamOwner\", fields: [ownerId], references: [id], onDelete: Cascade)\n\n  @@map(\"teams\")\n}\n\nmodel TeamMember {\n  id               String            @id @default(cuid())\n  teamId           String            @map(\"team_id\")\n  userId           String            @map(\"user_id\")\n  role             String\n  title            String?\n  status           MemberStatus      @default(ACTIVE)\n  permissions      Permission[]\n  compensationType CompensationType? @map(\"compensation_type\")\n  salaryAmount     Float?            @map(\"salary_amount\")\n  equityPercentage Float?            @map(\"equity_percentage\")\n  hourlyRate       Float?            @map(\"hourly_rate\")\n  joinedAt         DateTime          @default(now()) @map(\"joined_at\")\n  leftAt           DateTime?         @map(\"left_at\")\n  team             Team              @relation(\"TeamMemberTeam\", fields: [teamId], references: [id], onDelete: Cascade)\n  user             User              @relation(\"TeamMemberUser\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([teamId, userId])\n  @@map(\"team_members\")\n}\n\nmodel ProjectTeam {\n  id         String   @id @default(cuid())\n  projectId  String   @map(\"project_id\")\n  teamId     String   @map(\"team_id\")\n  role       String\n  status     String   @default(\"active\")\n  assignedAt DateTime @default(now()) @map(\"assigned_at\")\n  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  team       Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, teamId])\n  @@map(\"project_teams\")\n}\n\nmodel Investment {\n  id                    String           @id @default(cuid())\n  investorId            String           @map(\"investor_id\")\n  projectId             String           @map(\"project_id\")\n  amount                Float\n  investmentType        InvestmentType   @map(\"investment_type\")\n  equityPercent         Float?           @map(\"equity_percent\")\n  valuation             Float?\n  liquidationPref       Float?           @default(1) @map(\"liquidation_pref\")\n  antidilution          Boolean          @default(false)\n  boardSeat             Boolean          @default(false) @map(\"board_seat\")\n  status                InvestmentStatus @default(PROPOSED)\n  stage                 InvestmentStage  @default(INITIAL)\n  dueDiligenceCompleted Boolean          @default(false) @map(\"due_diligence_completed\")\n  legalDocsComplete     Boolean          @default(false) @map(\"legal_docs_complete\")\n  proposedAt            DateTime         @default(now()) @map(\"proposed_at\")\n  acceptedAt            DateTime?        @map(\"accepted_at\")\n  completedAt           DateTime?        @map(\"completed_at\")\n  notes                 String?\n  attachments           Attachment[]     @relation(\"InvestmentAttachments\")\n  investor              User             @relation(fields: [investorId], references: [id], onDelete: Cascade)\n  project               Project          @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@map(\"investments\")\n}\n\nmodel Request {\n  id            String            @id @default(cuid())\n  senderId      String            @map(\"sender_id\")\n  receiverId    String            @map(\"receiver_id\")\n  targetType    RequestTargetType @map(\"target_type\")\n  projectId     String?           @map(\"project_id\")\n  teamId        String?           @map(\"team_id\")\n  proposalId    String?           @map(\"proposal_id\")\n  role          String?\n  message       String\n  proposedTerms Json?             @map(\"proposed_terms\")\n  status        RequestStatus     @default(PENDING)\n  response      String?\n  respondedAt   DateTime?         @map(\"responded_at\")\n  createdAt     DateTime          @default(now()) @map(\"created_at\")\n  roleApplied   RoleType?         @map(\"role_applied\")\n  project       Project?          @relation(fields: [projectId], references: [id])\n  proposal      Proposal?         @relation(fields: [proposalId], references: [id])\n  receiver      User              @relation(\"RequestReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  sender        User              @relation(\"RequestSender\", fields: [senderId], references: [id], onDelete: Cascade)\n  team          Team?             @relation(fields: [teamId], references: [id])\n\n  @@map(\"requests\")\n}\n\nmodel Invitation {\n  id          String            @id @default(cuid())\n  senderId    String            @map(\"sender_id\")\n  receiverId  String            @map(\"receiver_id\")\n  projectId   String?           @map(\"project_id\")\n  teamId      String?           @map(\"team_id\")\n  role        String?\n  message     String\n  terms       Json?\n  expiresAt   DateTime?         @map(\"expires_at\")\n  response    String?\n  respondedAt DateTime?         @map(\"responded_at\")\n  createdAt   DateTime          @default(now()) @map(\"created_at\")\n  targetType  RequestTargetType @map(\"target_type\")\n  status      RequestStatus     @default(PENDING)\n  project     Project?          @relation(fields: [projectId], references: [id])\n  receiver    User              @relation(\"InvitationReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  sender      User              @relation(\"InvitationSender\", fields: [senderId], references: [id], onDelete: Cascade)\n  team        Team?             @relation(fields: [teamId], references: [id])\n\n  @@map(\"invitations\")\n}\n\nmodel Review {\n  id              String            @id @default(cuid())\n  giverId         String            @map(\"giver_id\")\n  receiverId      String            @map(\"receiver_id\")\n  contextType     ReviewContextType @map(\"context_type\")\n  projectId       String?           @map(\"project_id\")\n  teamId          String?           @map(\"team_id\")\n  proposalId      String?           @map(\"proposal_id\")\n  rating          Int\n  title           String?\n  content         String\n  workQuality     Int?              @map(\"work_quality\")\n  communication   Int?\n  reliability     Int?\n  leadership      Int?\n  technicalSkills Int?              @map(\"technical_skills\")\n  isVerified      Boolean           @default(false) @map(\"is_verified\")\n  isPublic        Boolean           @default(true) @map(\"is_public\")\n  createdAt       DateTime          @default(now()) @map(\"created_at\")\n  updatedAt       DateTime          @updatedAt @map(\"updated_at\")\n  giver           User              @relation(\"ReviewGiver\", fields: [giverId], references: [id], onDelete: Cascade)\n  project         Project?          @relation(fields: [projectId], references: [id])\n  proposal        Proposal?         @relation(fields: [proposalId], references: [id])\n  receiver        User              @relation(\"ReviewReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  team            Team?             @relation(fields: [teamId], references: [id])\n\n  @@unique([giverId, receiverId, contextType, projectId, teamId, proposalId])\n  @@map(\"reviews\")\n}\n\nmodel VerificationRequest {\n  id              String             @id @default(cuid())\n  userId          String             @map(\"user_id\")\n  type            VerificationType\n  linkedinProfile String?            @map(\"linkedin_profile\")\n  websiteUrl      String?            @map(\"website_url\")\n  companyEmail    String?            @map(\"company_email\")\n  status          VerificationStatus @default(PENDING)\n  reviewedBy      String?            @map(\"reviewed_by\")\n  reviewedAt      DateTime?          @map(\"reviewed_at\")\n  rejectionReason String?            @map(\"rejection_reason\")\n  createdAt       DateTime           @default(now()) @map(\"created_at\")\n  attachments     Attachment[]       @relation(\"VerificationAttachments\")\n  user            User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"verification_requests\")\n}\n\nmodel Skill {\n  id          String      @id @default(cuid())\n  name        String      @unique\n  category    String\n  description String?\n  userSkills  UserSkill[]\n\n  @@map(\"skills\")\n}\n\nmodel UserSkill {\n  id           String             @id @default(cuid())\n  userId       String             @map(\"user_id\")\n  skillId      String             @map(\"skill_id\")\n  proficiency  ProficiencyLevel\n  yearsOfExp   Int?               @map(\"years_of_exp\")\n  isVerified   Boolean            @default(false) @map(\"is_verified\")\n  endorsements SkillEndorsement[]\n  skill        Skill              @relation(fields: [skillId], references: [id], onDelete: Cascade)\n  user         User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, skillId])\n  @@map(\"user_skills\")\n}\n\nmodel SkillEndorsement {\n  id          String    @id @default(cuid())\n  userSkillId String    @map(\"user_skill_id\")\n  endorserId  String    @map(\"endorser_id\")\n  comment     String?\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  endorser    User      @relation(\"SkillEndorser\", fields: [endorserId], references: [id], onDelete: Cascade)\n  userSkill   UserSkill @relation(fields: [userSkillId], references: [id], onDelete: Cascade)\n\n  @@unique([userSkillId, endorserId])\n  @@map(\"skill_endorsements\")\n}\n\nmodel Interest {\n  id            String         @id @default(cuid())\n  name          String         @unique\n  category      String\n  description   String?\n  userInterests UserInterest[]\n\n  @@map(\"interests\")\n}\n\nmodel UserInterest {\n  id         String   @id @default(cuid())\n  userId     String   @map(\"user_id\")\n  interestId String   @map(\"interest_id\")\n  interest   Interest @relation(fields: [interestId], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, interestId])\n  @@map(\"user_interests\")\n}\n\nmodel Connection {\n  id          String           @id @default(cuid())\n  requesterId String           @map(\"requester_id\")\n  receiverId  String           @map(\"receiver_id\")\n  status      ConnectionStatus @default(PENDING)\n  message     String?\n  requestedAt DateTime         @default(now()) @map(\"requested_at\")\n  acceptedAt  DateTime?        @map(\"accepted_at\")\n  receiver    User             @relation(\"ConnectionReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  requester   User             @relation(\"ConnectionRequester\", fields: [requesterId], references: [id], onDelete: Cascade)\n\n  @@unique([requesterId, receiverId])\n  @@map(\"connections\")\n}\n\nmodel Message {\n  id          String    @id @default(cuid())\n  senderId    String    @map(\"sender_id\")\n  receiverId  String    @map(\"receiver_id\")\n  content     String\n  isRead      Boolean   @default(false) @map(\"is_read\")\n  readAt      DateTime? @map(\"read_at\")\n  attachments String[]\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  receiver    User      @relation(\"MessageReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  sender      User      @relation(\"MessageSender\", fields: [senderId], references: [id], onDelete: Cascade)\n\n  @@map(\"messages\")\n}\n\nmodel ProjectLike {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  projectId String   @map(\"project_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, projectId])\n  @@map(\"project_likes\")\n}\n\nmodel ProjectComment {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  projectId String   @map(\"project_id\")\n  content   String\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"project_comments\")\n}\n\nmodel ProposalComment {\n  id         String   @id @default(cuid())\n  userId     String   @map(\"user_id\")\n  proposalId String   @map(\"proposal_id\")\n  content    String\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"proposal_comments\")\n}\n\nmodel ProposalLike {\n  id         String   @id @default(cuid())\n  userId     String   @map(\"user_id\")\n  proposalId String   @map(\"proposal_id\")\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, proposalId])\n  @@map(\"proposal_likes\")\n}\n\nmodel Notification {\n  id          String           @id @default(cuid())\n  userId      String           @map(\"user_id\")\n  type        NotificationType\n  title       String\n  content     String\n  relatedId   String?          @map(\"related_id\")\n  relatedType String?          @map(\"related_type\")\n  isRead      Boolean          @default(false) @map(\"is_read\")\n  readAt      DateTime?        @map(\"read_at\")\n  createdAt   DateTime         @default(now()) @map(\"created_at\")\n  user        User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notifications\")\n}\n\nmodel UserSettings {\n  id                    String            @id @default(cuid())\n  userId                String            @unique @map(\"user_id\")\n  profileVisibility     ProfileVisibility @default(PUBLIC) @map(\"profile_visibility\")\n  showEmail             Boolean           @default(false) @map(\"show_email\")\n  showPhone             Boolean           @default(false) @map(\"show_phone\")\n  allowMessages         Boolean           @default(true) @map(\"allow_messages\")\n  allowConnections      Boolean           @default(true) @map(\"allow_connections\")\n  emailNotifications    Boolean           @default(true) @map(\"email_notifications\")\n  pushNotifications     Boolean           @default(true) @map(\"push_notifications\")\n  newInvitationEmail    Boolean           @default(true) @map(\"new_invitation_email\")\n  newMessageEmail       Boolean           @default(true) @map(\"new_message_email\")\n  projectUpdateEmail    Boolean           @default(true) @map(\"project_update_email\")\n  investmentUpdateEmail Boolean           @default(true) @map(\"investment_update_email\")\n  newConnectionEmail    Boolean           @default(true) @map(\"new_connection_email\")\n  weeklyDigestEmail     Boolean           @default(true) @map(\"weekly_digest_email\")\n  marketingEmails       Boolean           @default(false) @map(\"marketing_emails\")\n  showInSearch          Boolean           @default(true) @map(\"show_in_search\")\n  showInRecommendations Boolean           @default(true) @map(\"show_in_recommendations\")\n  theme                 String            @default(\"system\")\n  language              String            @default(\"en\")\n  timezone              String            @default(\"UTC\")\n  createdAt             DateTime          @default(now()) @map(\"created_at\")\n  updatedAt             DateTime          @updatedAt @map(\"updated_at\")\n  newRequestEmail       Boolean           @default(true) @map(\"new_request_email\")\n  user                  User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_settings\")\n}\n\nmodel UserActivity {\n  id        String       @id @default(cuid())\n  userId    String       @map(\"user_id\")\n  action    ActivityType\n  details   Json?\n  ipAddress String?      @map(\"ip_address\")\n  userAgent String?      @map(\"user_agent\")\n  createdAt DateTime     @default(now()) @map(\"created_at\")\n  user      User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_activities\")\n}\n\nmodel ProjectAnalytics {\n  id                 String   @id @default(cuid())\n  projectId          String   @map(\"project_id\")\n  viewCount          Int      @default(0) @map(\"view_count\")\n  uniqueViews        Int      @default(0) @map(\"unique_views\")\n  likeCount          Int      @default(0) @map(\"like_count\")\n  commentCount       Int      @default(0) @map(\"comment_count\")\n  shareCount         Int      @default(0) @map(\"share_count\")\n  acceptedApps       Int      @default(0) @map(\"accepted_apps\")\n  investmentRequests Int      @default(0) @map(\"investment_requests\")\n  totalFunding       Float    @default(0) @map(\"total_funding\")\n  date               DateTime @default(now())\n  RequestCount       Int      @default(0) @map(\"request_count\")\n  project            Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, date])\n  @@map(\"project_analytics\")\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n  @@map(\"verification_tokens\")\n}\n\nmodel Proposal {\n  id              String                   @id @default(cuid())\n  userId          String                   @map(\"user_id\")\n  createdBy       String                   @db.VarChar(255)\n  category        ProposalType\n  projectId       String?                  @map(\"project_id\")\n  teamId          String?                  @map(\"team_id\")\n  title           String                   @db.VarChar(200)\n  shortSummary    String                   @db.VarChar(500)\n  detailedDesc    String\n  industry        String[]\n  keywords        String[]\n  status          ProposalStatus           @default(DRAFT)\n  visibility      Visibility               @default(PUBLIC)\n  featured        Boolean                  @default(false)\n  views           Int                      @default(0)\n  bookmarks       Int                      @default(0)\n  slug            String?\n  metaDescription String?                  @db.VarChar(160)\n  tags            String[]\n  language        String                   @default(\"en\") @db.VarChar(5)\n  currency        String                   @default(\"USD\") @db.VarChar(3)\n  timezone        String?                  @db.VarChar(50)\n  createdAt       DateTime                 @default(now()) @map(\"created_at\")\n  updatedAt       DateTime                 @updatedAt @map(\"updated_at\")\n  expiresAt       DateTime?\n  metadata        Json?\n  searchVector    Unsupported(\"tsvector\")?\n  intent          ProposalIntent\n  attachments     Attachment[]\n  budget          Budget?\n  cofounder       CoFounderProposal?\n  contact         Contact?\n  customer        CustomerProposal?\n  investor        InvestorProposal?\n  location        Location?\n  mentor          MentorProposal?\n  partner         PartnerProposal?\n  membership      MembershipProposal? // New relation\n  comments        ProposalComment[]\n  likes           ProposalLike[]\n  project         Project?                 @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user            User                     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  Requests        Request[]\n  reviews         Review[]\n  team            TeamProposal?\n  timeline        Timeline?\n\n  @@index([userId])\n  @@index([projectId])\n  @@index([teamId])\n  @@index([category, intent, status, createdAt])\n  @@index([industry])\n  @@index([slug])\n  @@map(\"proposals\")\n}\n\nmodel Attachment {\n  id                    String               @id @default(cuid())\n  proposalId            String?              @map(\"proposal_id\")\n  projectId             String?              @map(\"project_id\")\n  teamId                String?              @map(\"team_id\")\n  investmentId          String?              @map(\"investment_id\")\n  verificationRequestId String?              @map(\"verification_request_id\")\n  filename              String               @db.VarChar(255)\n  url                   String\n  mimeType              String               @db.VarChar(100)\n  size                  Int\n  type                  AttachmentType\n  description           String?              @db.VarChar(500)\n  language              String?              @db.VarChar(5)\n  version               Int                  @default(1)\n  isPrimary             Boolean              @default(false)\n  checksum              String?              @db.VarChar(64)\n  views                 Int                  @default(0)\n  downloads             Int                  @default(0)\n  createdAt             DateTime             @default(now()) @map(\"created_at\")\n  updatedAt             DateTime             @updatedAt @map(\"updated_at\")\n  investment            Investment?          @relation(\"InvestmentAttachments\", fields: [investmentId], references: [id], onDelete: Cascade)\n  project               Project?             @relation(\"ProjectAttachments\", fields: [projectId], references: [id], onDelete: Cascade)\n  proposal              Proposal?            @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  team                  Team?                @relation(\"TeamAttachments\", fields: [teamId], references: [id], onDelete: Cascade)\n  verificationRequest   VerificationRequest? @relation(\"VerificationAttachments\", fields: [verificationRequestId], references: [id], onDelete: Cascade)\n\n  @@index([proposalId])\n  @@index([type])\n  @@map(\"attachments\")\n}\n\nmodel Budget {\n  id          String   @id @default(cuid())\n  minAmount   Float?\n  maxAmount   Float?\n  currency    String   @default(\"USD\") @db.VarChar(3)\n  description String?\n  proposalId  String   @unique @map(\"proposal_id\")\n  proposal    Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"budgets\")\n}\n\nmodel Location {\n  id           String   @id @default(cuid())\n  country      String   @db.VarChar(100)\n  countryCode  String   @db.VarChar(2)\n  region       String?  @db.VarChar(100)\n  city         String?  @db.VarChar(100)\n  remote       Boolean  @default(false)\n  hybrid       Boolean  @default(false)\n  willRelocate Boolean  @default(false)\n  timeZones    String[]\n  proposalId   String   @unique @map(\"proposal_id\")\n  proposal     Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"locations\")\n}\n\nmodel Timeline {\n  id           String     @id @default(cuid())\n  startDate    DateTime?\n  endDate      DateTime?\n  duration     String?\n  commitment   Commitment\n  availability String?\n  urgency      Urgency    @default(MEDIUM)\n  proposalId   String     @unique @map(\"proposal_id\")\n  proposal     Proposal   @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"timelines\")\n}\n\nmodel Contact {\n  id               String        @id @default(cuid())\n  name             String        @db.VarChar(100)\n  email            String        @db.VarChar(255)\n  phone            String?       @db.VarChar(20)\n  website          String?       @db.VarChar(255)\n  linkedin         String?       @db.VarChar(255)\n  twitter          String?       @db.VarChar(255)\n  github           String?       @db.VarChar(255)\n  telegram         String?       @db.VarChar(100)\n  discord          String?       @db.VarChar(100)\n  preferredContact ContactMethod @default(EMAIL) @map(\"preferred_contact\")\n  publicProfile    Boolean       @default(true) @map(\"public_profile\")\n  proposalId       String        @unique @map(\"proposal_id\")\n  proposal         Proposal      @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"contacts\")\n}\n\nmodel MembershipProposal {\n  id                String              @id @default(cuid())\n  seekingOrOffering MembershipDirection @map(\"seeking_or_offering\")\n  roleTitle         String              @map(\"role_title\") @db.VarChar(100)\n  department        String?             @db.VarChar(50)\n  customRole        String?             @map(\"custom_role\") @db.VarChar(100) // For non-standard roles\n\n  // Role details\n  keyResponsibilities String[]        @map(\"key_responsibilities\")\n  requiredSkills      String[]        @map(\"required_skills\")\n  preferredSkills     String[]        @map(\"preferred_skills\")\n  experienceLevel     SeniorityLevel? @map(\"experience_level\")\n  yearsExperience     Int?            @map(\"years_experience\")\n\n  // Compensation\n  compensationType CompensationType? @map(\"compensation_type\")\n  salaryRange      Json?             @map(\"salary_range\")\n  equityRange      Json?             @map(\"equity_range\")\n  benefits         String[]\n\n  // Commitment\n  timeCommitment Commitment? @map(\"time_commitment\")\n  hoursPerWeek   Int?        @map(\"hours_per_week\")\n  startDate      DateTime?   @map(\"start_date\")\n  duration       String? // e.g., \"6 months\", \"1 year\", \"indefinite\"\n\n  // Work arrangement\n  workArrangement WorkArrangement @default(HYBRID) @map(\"work_arrangement\")\n\n  // What's offered/expected\n  whatOffered  String? @map(\"what_offered\") // What the member brings\n  whatExpected String? @map(\"what_expected\") // What they expect from project\n\n  // Project/Company info (for offering side)\n  projectStage  StartupStage? @map(\"project_stage\")\n  teamSize      Int?          @map(\"team_size\")\n  companyValues String[]      @map(\"company_values\")\n  teamCulture   String?       @map(\"team_culture\")\n\n  // Member profile (for seeking side)\n  currentPosition String?       @map(\"current_position\")\n  portfolioUrl    String?       @map(\"portfolio_url\")\n  availability    Availability?\n\n  // Permissions offered\n  permissions       Permission[]\n  decisionAuthority String[]     @map(\"decision_authority\")\n\n  proposalId String   @unique @map(\"proposal_id\")\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"membership_proposals\")\n}\n\nmodel InvestorProposal {\n  id               String         @id @default(cuid())\n  fundingNeeded    Float?         @map(\"funding_needed\")\n  fundingType      FundingType?   @map(\"funding_type\")\n  stage            StartupStage?  @map(\"startup_stage\")\n  currentRevenue   Float?         @map(\"current_revenue\")\n  projectedRevenue Float?         @map(\"projected_revenue\")\n  customers        Int?\n  monthlyUsers     Int?           @map(\"monthly_users\")\n  growthRate       Float?         @map(\"growth_rate\")\n  useOfFunds       String?        @map(\"use_of_funds\")\n  keyMetrics       Json?          @map(\"key_metrics\")\n  teamSize         Int?           @map(\"team_size\")\n  foundedDate      DateTime?      @map(\"founded_date\")\n  previousFunding  Float?         @map(\"previous_funding\")\n  equityOffered    Float?         @map(\"equity_offered\")\n  boardSeat        Boolean        @default(false) @map(\"board_seat\")\n  expectedROI      Float?         @map(\"expected_roi\")\n  exitStrategy     String?        @map(\"exit_strategy\")\n  minInvestment    Float?         @map(\"min_investment\")\n  maxInvestment    Float?         @map(\"max_investment\")\n  investorKind     InvestorKind[] @map(\"investor_kind\")\n  proposalId       String         @unique @map(\"proposal_id\")\n  proposal         Proposal       @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"investor_proposals\")\n}\n\nmodel MentorProposal {\n  id                 String             @id @default(cuid())\n  seekingOrOffering  MentorDirection    @map(\"seeking_or_offering\")\n  guidanceAreas      String[]           @map(\"guidance_areas\")\n  specificChallenges String?            @map(\"specific_challenges\")\n  currentStage       StartupStage?      @map(\"current_stage\")\n  preferredMentorBg  String[]           @map(\"preferred_mentor_bg\")\n  expertiseAreas     String[]           @map(\"expertise_areas\")\n  yearsExperience    Int?               @map(\"years_experience\")\n  industriesServed   String[]           @map(\"industries_served\")\n  successStories     String?            @map(\"success_stories\")\n  menteesCriteria    String?            @map(\"mentees_criteria\")\n  preferredEngage    EngagementType?    @map(\"preferred_engage\")\n  sessionFrequency   String?            @map(\"session_frequency\")\n  compensationExp    MentorCompensation @default(FREE) @map(\"compensation_exp\")\n  proposalId         String             @unique @map(\"proposal_id\")\n  proposal           Proposal           @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"mentor_proposals\")\n}\n\nmodel TeamProposal {\n  id                String            @id @default(cuid())\n  hiringOrSeeking   TeamDirection     @map(\"hiring_or_seeking\")\n  roleTitle         String            @map(\"role_title\") @db.VarChar(100)\n  department        String?           @db.VarChar(50)\n  seniority         SeniorityLevel?   @map(\"seniority_level\")\n  mustHaveSkills    String[]          @map(\"must_have_skills\")\n  niceToHaveSkills  String[]          @map(\"nice_to_have_skills\")\n  certifications    String[]\n  languagesRequired String[]          @map(\"languages_required\")\n  workArrangement   WorkArrangement   @default(HYBRID) @map(\"work_arrangement\")\n  compensation      CompensationType? @map(\"compensation_type\")\n  salaryRange       Json?             @map(\"salary_range\")\n  benefits          String[]\n  companySize       CompanySize?      @map(\"company_size\")\n  companyStage      StartupStage?     @map(\"company_stage\")\n  teamCulture       String?           @map(\"team_culture\")\n  proposalId        String            @unique @map(\"proposal_id\")\n  proposal          Proposal          @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"team_proposals\")\n}\n\nmodel CoFounderProposal {\n  id                  String             @id @default(cuid())\n  seekingOrOffering   CofounderDirection @map(\"seeking_or_offering\")\n  roleTitle           String             @map(\"role_title\") @db.VarChar(100)\n  keyResponsibilities String[]           @map(\"key_responsibilities\")\n  decisionAreas       String[]           @map(\"decision_areas\")\n  equityOffered       Float?             @map(\"equity_offered\")\n  equityExpected      Float?             @map(\"equity_expected\")\n  vestingSchedule     String?            @map(\"vesting_schedule\")\n  timeCommitment      String             @map(\"time_commitment\")\n  requiredSkills      String[]           @map(\"required_skills\")\n  preferredBackground String[]           @map(\"preferred_background\")\n  mustHaveExperience  String[]           @map(\"must_have_experience\")\n  personalityTraits   String[]           @map(\"personality_traits\")\n  businessStage       StartupStage?      @map(\"business_stage\")\n  currentTeamSize     Int?               @map(\"current_team_size\")\n  businessModel       String?            @map(\"business_model\")\n  targetMarket        String?            @map(\"target_market\")\n  workStyle           String?            @map(\"work_style\")\n  companyValues       String[]           @map(\"company_values\")\n  conflictResolution  String?            @map(\"conflict_resolution\")\n  proposalId          String             @unique @map(\"proposal_id\")\n  proposal            Proposal           @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"cofounder_proposals\")\n}\n\nmodel PartnerProposal {\n  id                  String               @id @default(cuid())\n  seekingOrOffering   PartnerDirection     @map(\"seeking_or_offering\")\n  partnershipType     PartnershipType      @map(\"partnership_type\")\n  valueOffered        String               @map(\"value_offered\")\n  valueExpected       String               @map(\"value_expected\")\n  mutualBenefits      String[]             @map(\"mutual_benefits\")\n  partnershipModel    PartnershipModel?    @map(\"partnership_model\")\n  revenueSharing      Float?               @map(\"revenue_sharing\")\n  exclusivity         ExclusivityType      @default(NON_EXCLUSIVE)\n  duration            PartnershipDuration? @map(\"partnership_duration\")\n  partnerCriteria     String?              @map(\"partner_criteria\")\n  minimumRequirements String[]             @map(\"minimum_requirements\")\n  idealPartnerProfile String?              @map(\"ideal_partner_profile\")\n  currentPartners     Int?                 @map(\"current_partners\")\n  marketReach         String[]             @map(\"market_reach\")\n  customerBase        Int?                 @map(\"customer_base\")\n  annualRevenue       Float?               @map(\"annual_revenue\")\n  proposalId          String               @unique @map(\"proposal_id\")\n  proposal            Proposal             @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"partner_proposals\")\n}\n\nmodel CustomerProposal {\n  id                String            @id @default(cuid())\n  sellingOrBuying   CustomerDirection @map(\"selling_or_buying\")\n  productService    String            @map(\"product_service\") @db.VarChar(200)\n  category          String?           @db.VarChar(100)\n  description       String\n  pricingModel      PricingModel?     @map(\"pricing_model\")\n  priceRange        Json?             @map(\"price_range\")\n  availability      Availability?\n  deliveryTime      String?           @map(\"delivery_time\")\n  targetAudience    String?           @map(\"target_audience\")\n  customerBenefits  String[]          @map(\"customer_benefits\")\n  uniqueSellingProp String?           @map(\"unique_selling_prop\")\n  requirements      String[]\n  budgetRange       Json?             @map(\"budget_range\")\n  decisionCriteria  String[]          @map(\"decision_criteria\")\n  timeframe         String?\n  marketSize        String?           @map(\"market_size\")\n  competitors       String[]\n  previousClients   Int?              @map(\"previous_clients\")\n  testimonials      String?\n  supportIncluded   String[]          @map(\"support_included\")\n  warrantyTerms     String?           @map(\"warranty_terms\")\n  paymentTerms      String?           @map(\"payment_terms\") @db.VarChar(100)\n  proposalId        String            @unique @map(\"proposal_id\")\n  proposal          Proposal          @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"customer_proposals\")\n}\n\n// ============================================\n// SUBSCRIPTION & BILLING MODELS\n// ============================================\n\nmodel Plan {\n  id            String        @id @default(cuid())\n  name          String        @unique\n  displayName   String        @map(\"display_name\")\n  description   String?\n  slug          String        @unique\n  planType      PlanType      @map(\"plan_type\")\n  billingPeriod BillingPeriod @map(\"billing_period\")\n  price         Float\n  currency      String        @default(\"USD\") @db.VarChar(3)\n  trialDays     Int           @default(0) @map(\"trial_days\")\n  isActive      Boolean       @default(true) @map(\"is_active\")\n  isFeatured    Boolean       @default(false) @map(\"is_featured\")\n  sortOrder     Int           @default(0) @map(\"sort_order\")\n  cappedAmount  Int?\n  creditAmount  Int?\n\n  stripePriceId String? @unique @map(\"stripe_price_id\")\n  paypalPlanId  String? @unique @map(\"paypal_plan_id\")\n\n  // Relations\n  feature       Feature?          @relation(\"planFeature\")\n  subscriptions Subscription[]    @relation(\"planSubscriptions\")\n  discounts     DiscountToPlan[]  @relation(\"planDiscounts\")\n  promotions    PromotionToPlan[] @relation(\"planPromotions\")\n\n  metadata  Json?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"plans\")\n}\n\nmodel Subscription {\n  id                 String             @id @default(cuid())\n  userId             String             @map(\"user_id\")\n  planId             String             @map(\"plan_id\")\n  subId              String?            @unique @map(\"sub_id\")\n  status             SubscriptionStatus @default(ACTIVE)\n  currentPeriodStart DateTime           @map(\"current_period_start\")\n  currentPeriodEnd   DateTime           @map(\"current_period_end\")\n  cancelAtPeriodEnd  Boolean            @default(false) @map(\"cancel_at_period_end\")\n  cancelReason       String?\n  canceledAt         DateTime?          @map(\"canceled_at\")\n  endedAt            DateTime?          @map(\"ended_at\")\n  trialStart         DateTime?          @map(\"trial_start\")\n  trialEnd           DateTime?          @map(\"trial_end\")\n  metadata           Json?\n  createdAt          DateTime           @default(now()) @map(\"created_at\")\n  updatedAt          DateTime           @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user          User           @relation(\"userSubscriptions\", fields: [userId], references: [id], onDelete: Cascade)\n  plan          Plan           @relation(\"planSubscriptions\", fields: [planId], references: [id], onDelete: Cascade)\n  payments      Payment[]      @relation(\"subscriptionPayment\")\n  billingEvents BillingEvent[] @relation(\"subscriptionBillingEvents\")\n  usage         Usage?         @relation(\"subscriptionUsage\")\n\n  @@index([userId])\n  @@index([planId])\n  @@index([status])\n  @@index([currentPeriodEnd])\n  @@map(\"subscriptions\")\n}\n\nmodel CreditPackage {\n  id           String      @id @default(cuid())\n  name         String      @unique\n  displayName  String      @map(\"display_name\")\n  packageType  PackageType @map(\"package_type\")\n  description  String?\n  creditAmount Int         @map(\"credit_amount\")\n  price        Float\n  currency     String      @default(\"USD\") @db.VarChar(3)\n  bonusCredits Int         @default(0) @map(\"bonus_credits\")\n  isActive     Boolean     @default(true) @map(\"is_active\")\n  isFeatured   Boolean     @default(false) @map(\"is_featured\")\n  sortOrder    Int         @default(0) @map(\"sort_order\")\n  validityDays Int?        @map(\"validity_days\")\n\n  // Relations\n  feature    Feature?             @relation(\"packageFeature\")\n  discounts  DiscountToPackage[]  @relation(\"packageDiscounts\")\n  promotions PromotionToPackage[] @relation(\"packagePromotions\")\n  purchases  CreditPurchase[]     @relation(\"packagePurchases\")\n\n  metadata  Json?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"credit_packages\")\n}\n\nmodel CreditPurchase {\n  id           String         @id @default(cuid())\n  userId       String         @map(\"user_id\")\n  packageId    String         @map(\"package_id\")\n  orderId      String?        @unique @map(\"order_id\")\n  creditAmount Int            @map(\"credit_amount\")\n  bonusCredits Int            @default(0) @map(\"bonus_credits\")\n  totalCredits Int            @map(\"total_credits\")\n  price        Float\n  currency     String         @default(\"USD\") @db.VarChar(3)\n  status       PurchaseStatus @default(ACTIVE)\n  expiresAt    DateTime?      @map(\"expires_at\")\n  purchasedAt  DateTime       @default(now()) @map(\"purchased_at\")\n  metadata     Json?\n\n  // Relations\n  user          User           @relation(\"userCreditPurchases\", fields: [userId], references: [id], onDelete: Cascade)\n  package       CreditPackage  @relation(\"packagePurchases\", fields: [packageId], references: [id], onDelete: Cascade)\n  payment       Payment?       @relation(\"purchasePayment\")\n  billingEvents BillingEvent[] @relation(\"purchaseBillingEvents\")\n  usage         Usage?         @relation(\"purchaseUsage\")\n\n  @@index([userId])\n  @@map(\"credit_purchases\")\n}\n\nmodel Feature {\n  id           String   @id @default(cuid())\n  name         String\n  description  String[]\n  maxProjects  Int      @default(0) @map(\"max_projects\")\n  maxTeams     Int      @default(0) @map(\"max_teams\")\n  maxProposals Int      @default(0) @map(\"max_proposals\")\n  maxRequests  Int      @default(0) @map(\"max_requests\")\n  maxStorageGB Float    @default(0) @map(\"max_storage_gb\")\n  maxCredits   Int      @default(0) @map(\"max_credits\")\n\n  // Relations\n  planId    String?        @unique @map(\"plan_id\")\n  plan      Plan?          @relation(\"planFeature\", fields: [planId], references: [id], onDelete: Cascade)\n  packageId String?        @unique @map(\"package_id\")\n  package   CreditPackage? @relation(\"packageFeature\", fields: [packageId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"features\")\n}\n\nmodel Payment {\n  id             String  @id @default(cuid())\n  subscriptionId String? @unique @map(\"subscription_id\")\n  purchaseId     String? @unique @map(\"purchase_id\")\n  userId         String  @map(\"user_id\")\n\n  billingType    BillingType\n  amount         Float\n  adjustedAmount Float?\n\n  billingPeriodStart DateTime?\n  billingPeriodEnd   DateTime?\n\n  currency      String        @default(\"USD\") @db.VarChar(3)\n  status        PaymentStatus @default(PENDING)\n  paymentMethod PaymentMethod @map(\"payment_method\")\n\n  paymentGateway PaymentGateway? @map(\"payment_gateway\")\n\n  failureReason String? @map(\"failure_reason\")\n  receiptUrl    String? @map(\"receipt_url\")\n\n  refundId     String?\n  refundReason String?\n\n  intentId String?\n  chargeId String?\n\n  metadata    Json?\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  processedAt DateTime? @map(\"processed_at\")\n\n  // Relations\n  user         User            @relation(\"userPayments\", fields: [userId], references: [id], onDelete: Cascade)\n  subscription Subscription?   @relation(\"subscriptionPayment\", fields: [subscriptionId], references: [id], onDelete: Cascade)\n  purchase     CreditPurchase? @relation(\"purchasePayment\", fields: [purchaseId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([status])\n  @@index([subscriptionId])\n  @@index([purchaseId])\n  @@map(\"payments\")\n}\n\nmodel BillingEvent {\n  id               String             @id @default(cuid())\n  subscriptionId   String?\n  creditPurchaseId String?\n  type             BillingEventType\n  amount           Float\n  description      String?\n  startDate        DateTime           @default(now())\n  endDate          DateTime?\n  promotionId      String?\n  discountId       String?\n  status           BillingEventStatus @default(PENDING)\n  appliedAmount    Float?\n  failureReason    String?\n  metadata         Json?\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  creditPurchase   CreditPurchase?    @relation(\"purchaseBillingEvents\", fields: [creditPurchaseId], references: [id])\n  discount         Discount?          @relation(\"discountBillingEvents\", fields: [discountId], references: [id])\n  promotion        Promotion?         @relation(\"promotionBillingEvents\", fields: [promotionId], references: [id])\n  subscription     Subscription?      @relation(\"subscriptionBillingEvents\", fields: [subscriptionId], references: [id])\n\n  @@index([subscriptionId])\n  @@index([creditPurchaseId])\n  @@index([status])\n  @@index([startDate, endDate])\n  @@map(\"billing_events\")\n}\n\nmodel Promotion {\n  id            String               @id @default(cuid())\n  code          String\n  name          String\n  description   String?\n  type          PromotionType\n  value         Float\n  unit          PromotionUnit\n  validFrom     DateTime             @default(now())\n  validUntil    DateTime?\n  maxUses       Int?\n  usedCount     Int                  @default(0)\n  isActive      Boolean              @default(true)\n  appliedToAll  Boolean              @default(false)\n  metadata      Json?\n  createdAt     DateTime             @default(now())\n  updatedAt     DateTime             @updatedAt\n  billingEvents BillingEvent[]       @relation(\"promotionBillingEvents\")\n  packages      PromotionToPackage[] @relation(\"promotionPackages\")\n  plans         PromotionToPlan[]    @relation(\"promotionPlans\")\n  users         PromotionToUser[]    @relation(\"promotionUsers\")\n\n  @@index([isActive])\n  @@index([validFrom, validUntil])\n  @@map(\"promotion\")\n}\n\nmodel Discount {\n  id            String              @id @default(cuid())\n  code          String\n  name          String\n  description   String?\n  type          DiscountType\n  value         Float\n  unit          DiscountUnit\n  validFrom     DateTime            @default(now())\n  validUntil    DateTime?\n  maxUses       Int?\n  usedCount     Int                 @default(0)\n  isActive      Boolean             @default(true)\n  appliedToAll  Boolean             @default(false)\n  minimumAmount Float?\n  maximumAmount Float?\n  metadata      Json?\n  createdAt     DateTime            @default(now())\n  updatedAt     DateTime            @updatedAt\n  billingEvents BillingEvent[]      @relation(\"discountBillingEvents\")\n  packages      DiscountToPackage[] @relation(\"discountPackages\")\n  plans         DiscountToPlan[]    @relation(\"discountPlans\")\n  users         DiscountToUser[]    @relation(\"discountUsers\")\n\n  @@index([isActive])\n  @@index([validFrom, validUntil])\n  @@map(\"discount\")\n}\n\nmodel DiscountToPlan {\n  discountId String\n  planId     String\n  discount   Discount @relation(\"discountPlans\", fields: [discountId], references: [id], onDelete: Cascade)\n  plan       Plan     @relation(\"planDiscounts\", fields: [planId], references: [id], onDelete: Cascade)\n\n  @@id([discountId, planId])\n  @@index([planId])\n  @@map(\"discount_to_plan\")\n}\n\nmodel DiscountToPackage {\n  discountId    String\n  packageId     String\n  discount      Discount      @relation(\"discountPackages\", fields: [discountId], references: [id], onDelete: Cascade)\n  creditPackage CreditPackage @relation(\"packageDiscounts\", fields: [packageId], references: [id], onDelete: Cascade)\n\n  @@id([discountId, packageId])\n  @@index([packageId])\n  @@map(\"discount_to_package\")\n}\n\nmodel DiscountToUser {\n  discountId String\n  userId     String\n  discount   Discount @relation(\"discountUsers\", fields: [discountId], references: [id], onDelete: Cascade)\n  user       User     @relation(\"userDiscounts\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([discountId, userId])\n  @@index([userId])\n  @@map(\"discount_to_user\")\n}\n\nmodel PromotionToUser {\n  promotionId String\n  userId      String\n  promotion   Promotion @relation(\"promotionUsers\", fields: [promotionId], references: [id], onDelete: Cascade)\n  user        User      @relation(\"userPromotions\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([promotionId, userId])\n  @@index([userId])\n  @@map(\"promotion_to_user\")\n}\n\nmodel PromotionToPlan {\n  promotionId String\n  planId      String\n  plan        Plan      @relation(\"planPromotions\", fields: [planId], references: [id], onDelete: Cascade)\n  promotion   Promotion @relation(\"promotionPlans\", fields: [promotionId], references: [id], onDelete: Cascade)\n\n  @@id([promotionId, planId])\n  @@index([planId])\n  @@map(\"promotion_to_plan\")\n}\n\nmodel PromotionToPackage {\n  promotionId   String\n  packageId     String\n  creditPackage CreditPackage @relation(\"packagePromotions\", fields: [packageId], references: [id], onDelete: Cascade)\n  promotion     Promotion     @relation(\"promotionPackages\", fields: [promotionId], references: [id], onDelete: Cascade)\n\n  @@id([promotionId, packageId])\n  @@index([packageId])\n  @@map(\"promotion_to_package\")\n}\n\n// ============================================\n// USAGE TRACKING & QUOTA MANAGEMENT\n// ============================================\n\nmodel Usage {\n  id               String   @id @default(cuid())\n  userId           String\n  subscriptionId   String?  @unique @map(\"subscription_id\")\n  creditPurchaseId String?  @unique @map(\"credit_purchase_id\")\n  date             DateTime @default(now())\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @default(now())\n  metadata         Json?\n\n  maxProjects        Int   @default(0) @map(\"max_projects\")\n  remainingProjects  Int   @default(0) @map(\"remaining_projects\")\n  maxTeams           Int   @default(0) @map(\"max_teams\")\n  remainingTeams     Int   @default(0) @map(\"remaining_teams\")\n  maxProposals       Int   @default(0) @map(\"max_proposals\")\n  remainingProposals Int   @default(0) @map(\"remaining_proposals\")\n  maxRequests        Int   @default(0) @map(\"max_requests\")\n  remainingRequests  Int   @default(0) @map(\"remaining_requests\")\n  maxStorageGB       Float @default(0) @map(\"max_storage_gb\")\n  remainingStorageGB Float @default(0) @map(\"remaining_storage_gb\")\n  maxCredits         Int   @default(0) @map(\"max_credits\")\n  remainingCredits   Int   @default(0) @map(\"remaining_credits\")\n\n  user           User            @relation(\"userUsages\", fields: [userId], references: [id], onDelete: Cascade)\n  subscription   Subscription?   @relation(\"subscriptionUsage\", fields: [subscriptionId], references: [id], onDelete: Cascade)\n  creditPurchase CreditPurchase? @relation(\"purchaseUsage\", fields: [creditPurchaseId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([createdAt])\n  @@index([updatedAt])\n  @@map(\"usage\")\n}\n\nmodel UserQuota {\n  id             String  @id @default(cuid())\n  userId         String  @unique @map(\"user_id\")\n  subscriptionId String? @map(\"subscription_id\")\n\n  // Current Period Limits (from active subscription/plan)\n  maxProjects    Int   @default(0) @map(\"max_projects\")\n  maxTeams       Int   @default(0) @map(\"max_teams\")\n  maxProposals   Int   @default(0) @map(\"max_proposals\")\n  maxRequests    Int   @default(0) @map(\"max_requests\")\n  maxConnections Int   @default(0) @map(\"max_connections\")\n  maxMessages    Int   @default(0) @map(\"max_messages\")\n  maxStorageGB   Float @default(0) @map(\"max_storage_gb\")\n  maxCredits     Int   @default(0) @map(\"max_credits\")\n\n  // Current Usage Counters\n  projectsOwned    Int   @default(0) @map(\"projects_owned\")\n  teamsOwned       Int   @default(0) @map(\"teams_owned\")\n  proposalsCreated Int   @default(0) @map(\"proposals_created\")\n  requestsSent     Int   @default(0) @map(\"requests_sent\")\n  connectionsCount Int   @default(0) @map(\"connections_count\")\n  messagesSent     Int   @default(0) @map(\"messages_sent\")\n  storageUsedGB    Float @default(0) @map(\"storage_used_gb\")\n\n  // Lifetime counters (never reset)\n  totalProjectsCreated  Int @default(0) @map(\"total_projects_created\")\n  totalTeamsCreated     Int @default(0) @map(\"total_teams_created\")\n  totalProposalsCreated Int @default(0) @map(\"total_proposals_created\")\n  totalRequestsSent     Int @default(0) @map(\"total_requests_sent\")\n\n  // Period tracking\n  currentPeriodStart DateTime? @map(\"current_period_start\")\n  currentPeriodEnd   DateTime? @map(\"current_period_end\")\n  lastResetAt        DateTime? @map(\"last_reset_at\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_quotas\")\n}\n\nmodel WebhookLog {\n  id        String   @id @default(cuid())\n  topic     String // Event type (e.g., BILLING.SUBSCRIPTION.ACTIVATED)\n  userId    String // User ID associated with the webhook\n  payload   Json // Full webhook payload\n  createdAt DateTime @default(now())\n\n  @@index([userId])\n  @@index([topic])\n  @@index([createdAt])\n  @@map(\"webhook_logs\")\n}\n\nmodel WebhookQueue {\n  id          String    @id @default(cuid())\n  topic       String // Event type\n  userId      String // User ID\n  payload     Json // Full webhook payload\n  status      String    @default(\"pending\") // pending, processing, processed, failed\n  attempts    Int       @default(0)\n  error       String? // Error message if failed\n  createdAt   DateTime  @default(now())\n  processedAt DateTime? // When successfully processed\n  nextRetryAt DateTime? // When to retry if failed\n\n  @@index([status, attempts])\n  @@index([userId])\n  @@index([status, nextRetryAt])\n  @@index([createdAt])\n  @@map(\"webhook_queue\")\n}\n\nenum AttachmentType {\n  DOCUMENT\n  IMAGE\n  VIDEO\n  AUDIO\n  LINK\n  OTHER\n}\n\nenum Visibility {\n  PUBLIC\n  PRIVATE\n  MEMBERS_ONLY\n}\n\nenum Urgency {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum ContactMethod {\n  EMAIL\n  PHONE\n  LINKEDIN\n  TELEGRAM\n  DISCORD\n}\n\nenum InvestorKind {\n  ANGEL\n  VC\n  STRATEGIC\n  CROWDFUNDING\n  GOVERNMENT\n  FAMILY_OFFICE\n}\n\nenum MentorDirection {\n  SEEKING_MENTOR\n  OFFERING_MENTORSHIP\n}\n\nenum MentorCompensation {\n  FREE\n  EQUITY\n  ADVISORY_SHARES\n  PAID\n  BARTER\n}\n\nenum TeamDirection {\n  HIRING\n  SEEKING_POSITION\n}\n\nenum WorkArrangement {\n  REMOTE\n  ONSITE\n  HYBRID\n}\n\nenum SeniorityLevel {\n  INTERN\n  JUNIOR\n  MID_LEVEL\n  SENIOR\n  LEAD\n  PRINCIPAL\n  DIRECTOR\n  VP\n  C_LEVEL\n}\n\nenum CompanySize {\n  STARTUP_1_10\n  SMALL_11_50\n  MEDIUM_51_200\n  LARGE_201_1000\n  ENTERPRISE_1000_PLUS\n}\n\nenum CofounderDirection {\n  SEEKING_COFOUNDER\n  OFFERING_COFOUNDING\n}\n\nenum PartnerDirection {\n  SEEKING_PARTNER\n  OFFERING_PARTNERSHIP\n}\n\nenum PartnershipModel {\n  REVENUE_SHARE\n  FIXED_FEE\n  COMMISSION_BASED\n  EQUITY_BASED\n  BARTER\n  JOINT_VENTURE\n}\n\nenum ExclusivityType {\n  EXCLUSIVE\n  NON_EXCLUSIVE\n  SEMI_EXCLUSIVE\n}\n\nenum CustomerDirection {\n  SELLING\n  BUYING\n}\n\nenum UserType {\n  FOUNDER\n  INVESTOR\n  MEMBER\n  HYBRID\n}\n\nenum VerificationLevel {\n  UNVERIFIED\n  EMAIL_VERIFIED\n  PHONE_VERIFIED\n  IDENTITY_VERIFIED\n  BUSINESS_VERIFIED\n  PREMIUM_VERIFIED\n}\n\nenum InvestorType {\n  ANGEL\n  VC_FUND\n  FAMILY_OFFICE\n  CORPORATE_VC\n  CROWDFUNDING\n  GOVERNMENT\n  OTHER\n}\n\nenum Commitment {\n  PART_TIME\n  FULL_TIME\n  CONTRACT\n  FLEXIBLE\n}\n\nenum FundingType {\n  EQUITY\n  DEBT\n  GRANT\n  SAFE\n  CONVERTIBLE_NOTE\n  REVENUE_SHARE\n}\n\nenum StartupStage {\n  IDEA\n  MVP\n  BETA\n  LAUNCHED\n  GROWTH\n  SCALE\n}\n\nenum EngagementType {\n  ONE_OFF\n  ONGOING\n  MENTORSHIP\n  CONSULTING\n}\n\nenum PartnershipType {\n  STRATEGIC\n  TECHNOLOGY\n  DISTRIBUTION\n  MARKETING\n  JOINT_VENTURE\n}\n\nenum PartnershipDuration {\n  SHORT_TERM\n  MID_TERM\n  LONG_TERM\n}\n\nenum PricingModel {\n  FIXED\n  HOURLY\n  SUBSCRIPTION\n  TIERED\n  USAGE_BASED\n}\n\nenum Availability {\n  IMMEDIATE\n  WITHIN_WEEK\n  WITHIN_MONTH\n  NEGOTIABLE\n}\n\nenum ProjectStage {\n  IDEA\n  MVP\n  BETA\n  LAUNCHED\n  GROWTH\n  SCALE\n  EXIT\n}\n\nenum TeamType {\n  DEVELOPMENT\n  MARKETING\n  SALES\n  DESIGN\n  ADVISORY\n  GENERAL\n}\n\nenum CompensationType {\n  CASH_ONLY\n  EQUITY_ONLY\n  CASH_AND_EQUITY\n  DEFERRED_CASH\n  PROFIT_SHARING\n  HOURLY_RATE\n  PROJECT_BASED\n  REVENUE_SHARE\n}\n\nenum MemberStatus {\n  ACTIVE\n  INACTIVE\n  ON_LEAVE\n  TERMINATED\n}\n\nenum AvailabilityType {\n  FULL_TIME\n  PART_TIME\n  CONTRACT\n  CONSULTANT\n  INTERN\n}\n\nenum RemotePreference {\n  REMOTE_ONLY\n  HYBRID\n  ON_SITE\n  FLEXIBLE\n}\n\nenum InvestmentType {\n  EQUITY\n  CONVERTIBLE_NOTE\n  SAFE\n  DEBT\n  REVENUE_SHARE\n  GRANT\n}\n\nenum InvestmentStatus {\n  PROPOSED\n  UNDER_REVIEW\n  DUE_DILIGENCE\n  ACCEPTED\n  COMPLETED\n  REJECTED\n  CANCELLED\n}\n\nenum InvestmentStage {\n  INITIAL\n  SERIES_A\n  SERIES_B\n  SERIES_C\n  BRIDGE\n  MEZZANINE\n}\n\nenum ProposalType {\n  INVESTMENT\n  MENTORSHIP\n  TEAM\n  COFOUNDER\n  PARTNERSHIP\n  CUSTOMER\n  MEMBERSHIP\n}\n\nenum RoleType {\n  INVESTOR\n  MENTOR\n  TEAM\n  COFOUNDER\n  PARTNER\n  CUSTOMER\n  MEMBER\n}\n\nenum ProposalStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum ProjectStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum TeamStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum RequestTargetType {\n  PROJECT\n  TEAM\n  INVESTMENT\n  COLLABORATION\n}\n\nenum RequestStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n  WITHDRAWN\n  EXPIRED\n}\n\nenum ReviewContextType {\n  PROJECT\n  TEAM\n  INVESTMENT\n  GENERAL\n  PROPOSAL\n}\n\nenum VerificationType {\n  IDENTITY\n  EDUCATION\n  WORK_EXPERIENCE\n  COMPANY\n  INVESTOR_ACCREDITATION\n  TECHNICAL_SKILLS\n}\n\nenum VerificationStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  EXPIRED\n}\n\nenum ProficiencyLevel {\n  BEGINNER\n  INTERMEDIATE\n  ADVANCED\n  EXPERT\n}\n\nenum ConnectionStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n  BLOCKED\n}\n\nenum NotificationType {\n  REQUEST_RECEIVED\n  REQUEST_STATUS\n  INVITATION_RECEIVED\n  INVITATION_STATUS\n  MESSAGE_RECEIVED\n  CONNECTION_REQUEST\n  PROJECT_UPDATE\n  INVESTMENT_UPDATE\n  MILESTONE_COMPLETED\n  TEAM_INVITATION\n  REVIEW_RECEIVED\n  VERIFICATION_STATUS\n  SYSTEM_ANNOUNCEMENT\n  USAGE_ALERT\n  FEATURE_UPDATE\n  BILLING\n  MAINTENANCE\n  PAYMENT\n  SUBSCRIPTION\n  USAGE_OVER_LIMIT\n  USAGE_APPROACHING_LIMIT\n  PACKAGE_EXPIRED\n  SUBSCRIPTION_EXPIRED\n}\n\nenum ProfileVisibility {\n  PUBLIC\n  CONNECTIONS_ONLY\n  PRIVATE\n}\n\nenum ActivityType {\n  LOGIN\n  LOGOUT\n  PROFILE_UPDATE\n  PROJECT_CREATE\n  PROJECT_UPDATE\n  REQUEST_SEND\n  INVESTMENT_PROPOSE\n  MESSAGE_SEND\n  CONNECTION_REQUEST\n  REVIEW_GIVE\n}\n\nenum ProposalIntent {\n  SEEKING\n  OFFERING\n}\n\nenum PostType {\n  UPDATE\n  ANNOUNCEMENT\n  MILESTONE\n  MEDIA\n  POLL\n  ARTICLE\n  ACHIEVEMENT\n}\n\nenum PostVisibility {\n  PUBLIC\n  CONNECTIONS\n  TEAM\n  PRIVATE\n}\n\nenum VoteType {\n  UPVOTE\n  DOWNVOTE\n}\n\nenum ShareType {\n  INTERNAL\n  EXTERNAL\n  EMBED\n}\n\nenum ActorType {\n  USER\n  SYSTEM\n  BOT\n  ADMIN\n}\n\nenum LogAction {\n  USER_LOGIN\n  USER_LOGOUT\n  USER_REGISTER\n  USER_UPDATE\n  USER_DELETE\n  PROJECT_CREATE\n  PROJECT_UPDATE\n  PROJECT_DELETE\n  PROJECT_PUBLISH\n  PROJECT_ARCHIVE\n  PROJECT_TRANSFER // New action\n  TEAM_CREATE\n  TEAM_UPDATE\n  TEAM_DELETE\n  MEMBER_ADD\n  MEMBER_REMOVE\n  MEMBER_BLOCK // New action\n  MEMBER_UNBLOCK // New action\n  MEMBER_ROLE_CHANGE\n  INVESTMENT_PROPOSE\n  INVESTMENT_ACCEPT\n  INVESTMENT_REJECT\n  PROPOSAL_CREATE\n  PROPOSAL_UPDATE\n  PROPOSAL_DELETE\n  PROPOSAL_PUBLISH\n  SYSTEM_MAINTENANCE\n  SYSTEM_UPDATE\n  SYSTEM_ALERT\n  SECURITY_LOGIN_FAILED\n  SECURITY_PASSWORD_CHANGE\n  SECURITY_2FA_ENABLE\n  SECURITY_SUSPICIOUS_ACTIVITY\n}\n\nenum LogCategory {\n  USER\n  PROJECT\n  TEAM\n  INVESTMENT\n  PROPOSAL\n  SYSTEM\n  SECURITY\n  NOTIFICATION\n  PAYMENT\n  CONTENT\n}\n\nenum LogSeverity {\n  INFO\n  WARNING\n  ERROR\n  CRITICAL\n}\n\nenum LogVisibility {\n  PUBLIC\n  TEAM\n  ADMIN\n  PRIVATE\n}\n\nenum MembershipDirection {\n  SEEKING_MEMBERSHIP // Looking to join a project\n  OFFERING_MEMBERSHIP // Project offering a position\n}\n\nenum TransferStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n  COMPLETED\n  CANCELLED\n  EXPIRED\n}\n\nenum Permission {\n  VIEW_PROJECT\n  EDIT_PROJECT\n  DELETE_PROJECT\n  MANAGE_MEMBERS\n  MANAGE_FINANCES\n  MANAGE_INVESTORS\n  VIEW_ANALYTICS\n  EDIT_PROFILE\n  MANAGE_REQUESTS\n  MANAGE_INVITATIONS\n  CREATE_UPDATES\n  MANAGE_MILESTONES\n  ADMIN_ACCESS\n  TRANSFER_OWNERSHIP // New permission\n  BLOCK_MEMBERS // New permission\n  MANAGE_PERMISSIONS // New permission\n}\n\nenum PlanType {\n  FREE\n  BASIC\n  PROFESSIONAL\n  BUSINESS\n  ENTERPRISE\n  CUSTOM\n}\n\nenum BillingPeriod {\n  MONTHLY\n  QUARTERLY\n  YEARLY\n  LIFETIME\n}\n\nenum SubscriptionStatus {\n  ACTIVE\n  TRIALING\n  PAST_DUE\n  CANCELED\n  UNPAID\n  PAUSED\n  EXPIRED\n  ON_HOLD\n}\n\nenum PaymentStatus {\n  PENDING\n  PROCESSING\n  SUCCEEDED\n  FAILED\n  CANCELED\n  REFUNDED\n  EXPIRED\n  DENIED\n}\n\nenum PaymentMethod {\n  CREDIT_CARD\n  DEBIT_CARD\n  BANK_TRANSFER\n  E_WALLET // e.g. PayPal balance, Apple Pay, Google Pay\n  CRYPTO // e.g. Bitcoin, USDT, ETH\n  CASH // e.g. cash on delivery or in-person\n  OTHER\n}\n\nenum PaymentGateway {\n  PAYPAL\n  STRIPE\n  BRAINTREE\n  ADYEN\n  RAZORPAY\n  SQUARE\n  AUTHORIZE_NET\n  OTHER\n}\n\nenum Interval {\n  EVERY_30_DAYS\n  ANNUAL\n}\n\nenum PromotionUnit {\n  PERCENTAGE\n  AMOUNT\n  CREDITS\n  DAYS\n  REQUESTS\n  TOKENS\n}\n\nenum DiscountUnit {\n  PERCENTAGE\n  AMOUNT\n  CREDITS\n  REQUESTS\n  TOKENS\n}\n\nenum BillingType {\n  SUBSCRIPTION\n  PAY_AS_YOU_GO\n  ONE_TIME\n}\n\nenum PackageType {\n  SMALL\n  MEDIUM\n  LARGE\n  ENTERPRISE\n  CUSTOM\n}\n\nenum PurchaseStatus {\n  ACTIVE\n  CANCELLED\n  FROZEN\n  EXPIRED\n}\n\nenum BillingEventType {\n  PROMOTION\n  DISCOUNT\n  CREDIT\n  REFUND\n  ADJUSTMENT\n}\n\nenum BillingEventStatus {\n  PENDING\n  APPLIED\n  FAILED\n  REVERSED\n  EXPIRED\n}\n\nenum PromotionType {\n  PERCENTAGE\n  FIXED_AMOUNT\n  FREE_TRIAL\n  USAGE_BOOST\n  CREDIT_BONUS\n  TIME_EXTENSION\n  TIER_UPGRADE\n  EARLY_ADAPTER\n}\n\nenum DiscountType {\n  PERCENTAGE\n  FIXED_AMOUNT\n  VOLUME\n  LOYALTY\n  SEASONAL\n  REFERRAL\n  EARLY_ADAPTER\n  BUNDLE\n}\n",
  "inlineSchemaHash": "576a3befeaea525860dbf274dad88c3a600dd828b4815a5dec886786efaa414f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_account_id\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"accounts\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_token\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"email_verified\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userType\",\"kind\":\"enum\",\"type\":\"UserType\",\"dbName\":\"user_type\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"onboardingCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"onboarding_completed\"},{\"name\":\"onboardingStep\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"onboarding_step\"},{\"name\":\"credibilityScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"credibility_score\"},{\"name\":\"verificationLevel\",\"kind\":\"enum\",\"type\":\"VerificationLevel\",\"dbName\":\"verification_level\"},{\"name\":\"isKycVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_kyc_verified\"},{\"name\":\"kycDocuments\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"kyc_documents\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"lastActiveAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_active_at\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"receivedConnections\",\"kind\":\"object\",\"type\":\"Connection\",\"relationName\":\"ConnectionReceiver\"},{\"name\":\"connections\",\"kind\":\"object\",\"type\":\"Connection\",\"relationName\":\"ConnectionRequester\"},{\"name\":\"founderProfile\",\"kind\":\"object\",\"type\":\"FounderProfile\",\"relationName\":\"FounderProfileToUser\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"Investment\",\"relationName\":\"InvestmentToUser\"},{\"name\":\"investorProfile\",\"kind\":\"object\",\"type\":\"InvestorProfile\",\"relationName\":\"InvestorProfileToUser\"},{\"name\":\"receivedInvitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationReceiver\"},{\"name\":\"sentInvitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationSender\"},{\"name\":\"memberProfile\",\"kind\":\"object\",\"type\":\"MemberProfile\",\"relationName\":\"MemberProfileToUser\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReceiver\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageSender\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"postCommentVotes\",\"kind\":\"object\",\"type\":\"PostCommentVote\",\"relationName\":\"PostCommentVoteToUser\"},{\"name\":\"postComments\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostCommentToUser\"},{\"name\":\"postLikes\",\"kind\":\"object\",\"type\":\"PostLike\",\"relationName\":\"PostLikeToUser\"},{\"name\":\"postShares\",\"kind\":\"object\",\"type\":\"PostShare\",\"relationName\":\"PostShareToUser\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUser\"},{\"name\":\"projectComments\",\"kind\":\"object\",\"type\":\"ProjectComment\",\"relationName\":\"ProjectCommentToUser\"},{\"name\":\"projectLikes\",\"kind\":\"object\",\"type\":\"ProjectLike\",\"relationName\":\"ProjectLikeToUser\"},{\"name\":\"participatedProjects\",\"kind\":\"object\",\"type\":\"ProjectMember\",\"relationName\":\"ProjectMemberToUser\"},{\"name\":\"ownedProjects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectOwner\"},{\"name\":\"proposalComments\",\"kind\":\"object\",\"type\":\"ProposalComment\",\"relationName\":\"ProposalCommentToUser\"},{\"name\":\"proposalLikes\",\"kind\":\"object\",\"type\":\"ProposalLike\",\"relationName\":\"ProposalLikeToUser\"},{\"name\":\"proposals\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToUser\"},{\"name\":\"receivedRequests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestReceiver\"},{\"name\":\"sentRequests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestSender\"},{\"name\":\"givenReviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewGiver\"},{\"name\":\"receivedReviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewReceiver\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"skillEndorsements\",\"kind\":\"object\",\"type\":\"SkillEndorsement\",\"relationName\":\"SkillEndorser\"},{\"name\":\"teamMemberships\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberUser\"},{\"name\":\"ownedTeams\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamOwner\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"UserActivity\",\"relationName\":\"UserToUserActivity\"},{\"name\":\"interests\",\"kind\":\"object\",\"type\":\"UserInterest\",\"relationName\":\"UserToUserInterest\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSettings\",\"relationName\":\"UserToUserSettings\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"verificationRequests\",\"kind\":\"object\",\"type\":\"VerificationRequest\",\"relationName\":\"UserToVerificationRequest\"},{\"name\":\"transfersFrom\",\"kind\":\"object\",\"type\":\"ProjectOwnershipTransfer\",\"relationName\":\"TransferFrom\"},{\"name\":\"transfersTo\",\"kind\":\"object\",\"type\":\"ProjectOwnershipTransfer\",\"relationName\":\"TransferTo\"},{\"name\":\"blockedFromProjects\",\"kind\":\"object\",\"type\":\"ProjectBlockedMember\",\"relationName\":\"BlockedUser\"},{\"name\":\"blockedUsers\",\"kind\":\"object\",\"type\":\"ProjectBlockedMember\",\"relationName\":\"BlockerUser\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"userSubscriptions\"},{\"name\":\"creditPurchases\",\"kind\":\"object\",\"type\":\"CreditPurchase\",\"relationName\":\"userCreditPurchases\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"userPayments\"},{\"name\":\"discounts\",\"kind\":\"object\",\"type\":\"DiscountToUser\",\"relationName\":\"userDiscounts\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"PromotionToUser\",\"relationName\":\"userPromotions\"},{\"name\":\"usages\",\"kind\":\"object\",\"type\":\"Usage\",\"relationName\":\"userUsages\"},{\"name\":\"quota\",\"kind\":\"object\",\"type\":\"UserQuota\",\"relationName\":\"UserToUserQuota\"}],\"dbName\":\"users\"},\"FounderProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"companyExperience\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"company_experience\"},{\"name\":\"previousExits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"previous_exits\"},{\"name\":\"linkedinProfile\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"linkedin_profile\"},{\"name\":\"industryPreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"industry_preferences\"},{\"name\":\"locationPreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"location_preferences\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FounderProfileToUser\"}],\"dbName\":\"founder_profiles\"},\"InvestorProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"investorType\",\"kind\":\"enum\",\"type\":\"InvestorType\",\"dbName\":\"investor_type\"},{\"name\":\"firmName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"firm_name\"},{\"name\":\"investmentRange\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investment_range\"},{\"name\":\"minInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_investment\"},{\"name\":\"maxInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_investment\"},{\"name\":\"preferredStages\",\"kind\":\"enum\",\"type\":\"ProjectStage\",\"dbName\":\"preferred_stages\"},{\"name\":\"preferredIndustries\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_industries\"},{\"name\":\"geographicFocus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"geographic_focus\"},{\"name\":\"investmentThesis\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investment_thesis\"},{\"name\":\"valueAddServices\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"value_add_services\"},{\"name\":\"portfolioSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"portfolio_size\"},{\"name\":\"successfulExits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"successful_exits\"},{\"name\":\"averageCheckSize\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"average_check_size\"},{\"name\":\"isAccredited\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_accredited\"},{\"name\":\"accreditationProof\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"accreditation_proof\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvestorProfileToUser\"}],\"dbName\":\"investor_profiles\"},\"MemberProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"jobTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"job_title\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentSalary\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"current_salary\"},{\"name\":\"salaryExpectation\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"salary_expectation\"},{\"name\":\"availabilityType\",\"kind\":\"enum\",\"type\":\"AvailabilityType\",\"dbName\":\"availability_type\"},{\"name\":\"hoursPerWeek\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"hours_per_week\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"acceptsEquity\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"accepts_equity\"},{\"name\":\"acceptsCash\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"accepts_cash\"},{\"name\":\"acceptsDeferred\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"accepts_deferred\"},{\"name\":\"minEquityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_equity_percentage\"},{\"name\":\"remotePreference\",\"kind\":\"enum\",\"type\":\"RemotePreference\",\"dbName\":\"remote_preference\"},{\"name\":\"rolePreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_preferences\"},{\"name\":\"industryPreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"industry_preferences\"},{\"name\":\"portfolioUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"portfolio_url\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"linkedin_url\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"github_url\"},{\"name\":\"achievements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberProfileToUser\"}],\"dbName\":\"member_profiles\"},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"owner_id\"},{\"name\":\"previousOwnerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"previous_owner_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"ProjectStage\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revenueModel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"revenue_model\"},{\"name\":\"targetMarket\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"target_market\"},{\"name\":\"competitiveEdge\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"competitive_edge\"},{\"name\":\"fundingGoal\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"funding_goal\"},{\"name\":\"fundingRaised\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"funding_raised\"},{\"name\":\"valuationCap\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"valuation_cap\"},{\"name\":\"teamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"team_size\"},{\"name\":\"isHiring\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_hiring\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProjectStatus\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRemoteFriendly\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_remote_friendly\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"launchedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"launched_at\"},{\"name\":\"transferredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"transferred_at\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToProject\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"ProjectAttachments\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"Investment\",\"relationName\":\"InvestmentToProject\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToProject\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToProject\"},{\"name\":\"analytics\",\"kind\":\"object\",\"type\":\"ProjectAnalytics\",\"relationName\":\"ProjectToProjectAnalytics\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ProjectComment\",\"relationName\":\"ProjectToProjectComment\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"ProjectLike\",\"relationName\":\"ProjectToProjectLike\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"ProjectMember\",\"relationName\":\"ProjectToProjectMember\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"ProjectTeam\",\"relationName\":\"ProjectToProjectTeam\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectOwner\"},{\"name\":\"proposals\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProjectToProposal\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"ProjectToRequest\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProjectToReview\"},{\"name\":\"ownershipTransfers\",\"kind\":\"object\",\"type\":\"ProjectOwnershipTransfer\",\"relationName\":\"ProjectToProjectOwnershipTransfer\"},{\"name\":\"blockedMembers\",\"kind\":\"object\",\"type\":\"ProjectBlockedMember\",\"relationName\":\"ProjectToProjectBlockedMember\"}],\"dbName\":\"projects\"},\"ProjectMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"isCoFounder\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_cofounder\"},{\"name\":\"isInvestor\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_investor\"},{\"name\":\"isMember\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_member\"},{\"name\":\"compensationType\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"salary_amount\"},{\"name\":\"equityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_percentage\"},{\"name\":\"profitSharePercent\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"profit_share_percent\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"MemberStatus\"},{\"name\":\"canPost\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"can_post\"},{\"name\":\"canComment\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"can_comment\"},{\"name\":\"canViewProject\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"can_view_project\"},{\"name\":\"isBlocked\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_blocked\"},{\"name\":\"blockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"blocked_at\"},{\"name\":\"blockedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"blocked_by\"},{\"name\":\"blockReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"block_reason\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"left_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectMemberToUser\"}],\"dbName\":\"project_members\"},\"ProjectOwnershipTransfer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"fromOwnerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"from_owner_id\"},{\"name\":\"toOwnerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"to_owner_id\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransferStatus\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"requested_at\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"accepted_at\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"rejected_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"requiresAcceptance\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"requires_acceptance\"},{\"name\":\"acceptanceToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"acceptance_token\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectOwnershipTransfer\"},{\"name\":\"fromOwner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransferFrom\"},{\"name\":\"toOwner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransferTo\"}],\"dbName\":\"project_ownership_transfers\"},\"ProjectBlockedMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"blockedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"blocked_by\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blockPost\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"block_post\"},{\"name\":\"blockComment\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"block_comment\"},{\"name\":\"blockView\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"block_view\"},{\"name\":\"blockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"blocked_at\"},{\"name\":\"unblockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"unblocked_at\"},{\"name\":\"unblockedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"unblocked_by\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectBlockedMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlockedUser\"},{\"name\":\"blocker\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlockerUser\"}],\"dbName\":\"project_blocked_members\"},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PostType\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"PostVisibility\"},{\"name\":\"isPinned\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_pinned\"},{\"name\":\"isEdited\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_edited\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"commentCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"comment_count\"},{\"name\":\"shareCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"share_count\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"editedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"edited_at\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostToPostComment\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"PostLike\",\"relationName\":\"PostToPostLike\"},{\"name\":\"shares\",\"kind\":\"object\",\"type\":\"PostShare\",\"relationName\":\"PostToPostShare\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"PostToProject\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"PostToTeam\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostToUser\"}],\"dbName\":\"posts\"},\"PostLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"post_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostLikeToUser\"}],\"dbName\":\"post_likes\"},\"PostComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"post_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"parent_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"upvotes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"downvotes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isEdited\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_edited\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"editedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"edited_at\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"PostCommentVote\",\"relationName\":\"PostCommentToPostCommentVote\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"CommentReplies\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"CommentReplies\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostCommentToUser\"}],\"dbName\":\"post_comments\"},\"PostCommentVote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"comment_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"voteType\",\"kind\":\"enum\",\"type\":\"VoteType\",\"dbName\":\"vote_type\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostCommentToPostCommentVote\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostCommentVoteToUser\"}],\"dbName\":\"post_comment_votes\"},\"PostShare\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"post_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shareType\",\"kind\":\"enum\",\"type\":\"ShareType\",\"dbName\":\"share_type\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostShare\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostShareToUser\"}],\"dbName\":\"post_shares\"},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"actorType\",\"kind\":\"enum\",\"type\":\"ActorType\",\"dbName\":\"actor_type\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"LogAction\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"LogCategory\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"LogSeverity\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_type\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"oldValue\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"old_value\"},{\"name\":\"newValue\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"new_value\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"LogVisibility\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ActivityLogToProject\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ActivityLogToTeam\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"}],\"dbName\":\"activity_logs\"},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"owner_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamType\",\"kind\":\"enum\",\"type\":\"TeamType\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TeamStatus\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isHiring\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_hiring\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_size\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRemote\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_remote\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToTeam\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"TeamAttachments\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToTeam\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToTeam\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"ProjectTeam\",\"relationName\":\"ProjectTeamToTeam\"},{\"name\":\"Requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToTeam\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToTeam\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberTeam\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamOwner\"}],\"dbName\":\"teams\"},\"TeamMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"MemberStatus\"},{\"name\":\"permissions\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"compensationType\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"salary_amount\"},{\"name\":\"equityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_percentage\"},{\"name\":\"hourlyRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"hourly_rate\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"left_at\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamMemberTeam\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberUser\"}],\"dbName\":\"team_members\"},\"ProjectTeam\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"assigned_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectTeam\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ProjectTeamToTeam\"}],\"dbName\":\"project_teams\"},\"Investment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investor_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"investmentType\",\"kind\":\"enum\",\"type\":\"InvestmentType\",\"dbName\":\"investment_type\"},{\"name\":\"equityPercent\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_percent\"},{\"name\":\"valuation\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"liquidationPref\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"liquidation_pref\"},{\"name\":\"antidilution\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"boardSeat\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"board_seat\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvestmentStatus\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"InvestmentStage\"},{\"name\":\"dueDiligenceCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"due_diligence_completed\"},{\"name\":\"legalDocsComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"legal_docs_complete\"},{\"name\":\"proposedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"proposed_at\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"accepted_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"InvestmentAttachments\"},{\"name\":\"investor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvestmentToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"InvestmentToProject\"}],\"dbName\":\"investments\"},\"Request\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"targetType\",\"kind\":\"enum\",\"type\":\"RequestTargetType\",\"dbName\":\"target_type\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposedTerms\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"proposed_terms\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RequestStatus\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"responded_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"roleApplied\",\"kind\":\"enum\",\"type\":\"RoleType\",\"dbName\":\"role_applied\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToRequest\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToRequest\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestReceiver\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestSender\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"RequestToTeam\"}],\"dbName\":\"requests\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terms\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"responded_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"targetType\",\"kind\":\"enum\",\"type\":\"RequestTargetType\",\"dbName\":\"target_type\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RequestStatus\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"InvitationToProject\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationReceiver\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationSender\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"InvitationToTeam\"}],\"dbName\":\"invitations\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"giverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"giver_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"contextType\",\"kind\":\"enum\",\"type\":\"ReviewContextType\",\"dbName\":\"context_type\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workQuality\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"work_quality\"},{\"name\":\"communication\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reliability\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leadership\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"technicalSkills\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"technical_skills\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"giver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewGiver\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToReview\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToReview\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewReceiver\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ReviewToTeam\"}],\"dbName\":\"reviews\"},\"VerificationRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"VerificationType\"},{\"name\":\"linkedinProfile\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"linkedin_profile\"},{\"name\":\"websiteUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"website_url\"},{\"name\":\"companyEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_email\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewed_by\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"reviewed_at\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"rejection_reason\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"VerificationAttachments\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVerificationRequest\"}],\"dbName\":\"verification_requests\"},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userSkills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"SkillToUserSkill\"}],\"dbName\":\"skills\"},\"UserSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"skill_id\"},{\"name\":\"proficiency\",\"kind\":\"enum\",\"type\":\"ProficiencyLevel\"},{\"name\":\"yearsOfExp\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"years_of_exp\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"endorsements\",\"kind\":\"object\",\"type\":\"SkillEndorsement\",\"relationName\":\"SkillEndorsementToUserSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToUserSkill\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSkill\"}],\"dbName\":\"user_skills\"},\"SkillEndorsement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userSkillId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_skill_id\"},{\"name\":\"endorserId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"endorser_id\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"endorser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillEndorser\"},{\"name\":\"userSkill\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"SkillEndorsementToUserSkill\"}],\"dbName\":\"skill_endorsements\"},\"Interest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userInterests\",\"kind\":\"object\",\"type\":\"UserInterest\",\"relationName\":\"InterestToUserInterest\"}],\"dbName\":\"interests\"},\"UserInterest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"interestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"interest_id\"},{\"name\":\"interest\",\"kind\":\"object\",\"type\":\"Interest\",\"relationName\":\"InterestToUserInterest\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserInterest\"}],\"dbName\":\"user_interests\"},\"Connection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requesterId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"requester_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ConnectionStatus\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"requested_at\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"accepted_at\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConnectionReceiver\"},{\"name\":\"requester\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConnectionRequester\"}],\"dbName\":\"connections\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"read_at\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageReceiver\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageSender\"}],\"dbName\":\"messages\"},\"ProjectLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectLikeToUser\"}],\"dbName\":\"project_likes\"},\"ProjectComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectCommentToUser\"}],\"dbName\":\"project_comments\"},\"ProposalComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToProposalComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProposalCommentToUser\"}],\"dbName\":\"proposal_comments\"},\"ProposalLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToProposalLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProposalLikeToUser\"}],\"dbName\":\"proposal_likes\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"related_id\"},{\"name\":\"relatedType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"related_type\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"read_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"UserSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"profileVisibility\",\"kind\":\"enum\",\"type\":\"ProfileVisibility\",\"dbName\":\"profile_visibility\"},{\"name\":\"showEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_email\"},{\"name\":\"showPhone\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_phone\"},{\"name\":\"allowMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"allow_messages\"},{\"name\":\"allowConnections\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"allow_connections\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_notifications\"},{\"name\":\"pushNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"push_notifications\"},{\"name\":\"newInvitationEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_invitation_email\"},{\"name\":\"newMessageEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_message_email\"},{\"name\":\"projectUpdateEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"project_update_email\"},{\"name\":\"investmentUpdateEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"investment_update_email\"},{\"name\":\"newConnectionEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_connection_email\"},{\"name\":\"weeklyDigestEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"weekly_digest_email\"},{\"name\":\"marketingEmails\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"marketing_emails\"},{\"name\":\"showInSearch\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_in_search\"},{\"name\":\"showInRecommendations\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_in_recommendations\"},{\"name\":\"theme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"newRequestEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_request_email\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSettings\"}],\"dbName\":\"user_settings\"},\"UserActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"ActivityType\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserActivity\"}],\"dbName\":\"user_activities\"},\"ProjectAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"uniqueViews\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"unique_views\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"commentCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"comment_count\"},{\"name\":\"shareCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"share_count\"},{\"name\":\"acceptedApps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"accepted_apps\"},{\"name\":\"investmentRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"investment_requests\"},{\"name\":\"totalFunding\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"total_funding\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"RequestCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"request_count\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectAnalytics\"}],\"dbName\":\"project_analytics\"},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification_tokens\"},\"Proposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ProposalType\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shortSummary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detailedDesc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keywords\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProposalStatus\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"Visibility\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookmarks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"intent\",\"kind\":\"enum\",\"type\":\"ProposalIntent\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToProposal\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToProposal\"},{\"name\":\"cofounder\",\"kind\":\"object\",\"type\":\"CoFounderProposal\",\"relationName\":\"CoFounderProposalToProposal\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToProposal\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"CustomerProposal\",\"relationName\":\"CustomerProposalToProposal\"},{\"name\":\"investor\",\"kind\":\"object\",\"type\":\"InvestorProposal\",\"relationName\":\"InvestorProposalToProposal\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToProposal\"},{\"name\":\"mentor\",\"kind\":\"object\",\"type\":\"MentorProposal\",\"relationName\":\"MentorProposalToProposal\"},{\"name\":\"partner\",\"kind\":\"object\",\"type\":\"PartnerProposal\",\"relationName\":\"PartnerProposalToProposal\"},{\"name\":\"membership\",\"kind\":\"object\",\"type\":\"MembershipProposal\",\"relationName\":\"MembershipProposalToProposal\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ProposalComment\",\"relationName\":\"ProposalToProposalComment\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"ProposalLike\",\"relationName\":\"ProposalToProposalLike\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProposal\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProposalToUser\"},{\"name\":\"Requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"ProposalToRequest\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProposalToReview\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"TeamProposal\",\"relationName\":\"ProposalToTeamProposal\"},{\"name\":\"timeline\",\"kind\":\"object\",\"type\":\"Timeline\",\"relationName\":\"ProposalToTimeline\"}],\"dbName\":\"proposals\"},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"investmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investment_id\"},{\"name\":\"verificationRequestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"verification_request_id\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"AttachmentType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"checksum\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"downloads\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"investment\",\"kind\":\"object\",\"type\":\"Investment\",\"relationName\":\"InvestmentAttachments\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectAttachments\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"AttachmentToProposal\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamAttachments\"},{\"name\":\"verificationRequest\",\"kind\":\"object\",\"type\":\"VerificationRequest\",\"relationName\":\"VerificationAttachments\"}],\"dbName\":\"attachments\"},\"Budget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"BudgetToProposal\"}],\"dbName\":\"budgets\"},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remote\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"hybrid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"willRelocate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timeZones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"LocationToProposal\"}],\"dbName\":\"locations\"},\"Timeline\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commitment\",\"kind\":\"enum\",\"type\":\"Commitment\"},{\"name\":\"availability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"urgency\",\"kind\":\"enum\",\"type\":\"Urgency\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToTimeline\"}],\"dbName\":\"timelines\"},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"github\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telegram\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discord\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferredContact\",\"kind\":\"enum\",\"type\":\"ContactMethod\",\"dbName\":\"preferred_contact\"},{\"name\":\"publicProfile\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"public_profile\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ContactToProposal\"}],\"dbName\":\"contacts\"},\"MembershipProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"MembershipDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"roleTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_title\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customRole\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"custom_role\"},{\"name\":\"keyResponsibilities\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"key_responsibilities\"},{\"name\":\"requiredSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"required_skills\"},{\"name\":\"preferredSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_skills\"},{\"name\":\"experienceLevel\",\"kind\":\"enum\",\"type\":\"SeniorityLevel\",\"dbName\":\"experience_level\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"years_experience\"},{\"name\":\"compensationType\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"salary_range\"},{\"name\":\"equityRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"equity_range\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeCommitment\",\"kind\":\"enum\",\"type\":\"Commitment\",\"dbName\":\"time_commitment\"},{\"name\":\"hoursPerWeek\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"hours_per_week\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workArrangement\",\"kind\":\"enum\",\"type\":\"WorkArrangement\",\"dbName\":\"work_arrangement\"},{\"name\":\"whatOffered\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"what_offered\"},{\"name\":\"whatExpected\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"what_expected\"},{\"name\":\"projectStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"project_stage\"},{\"name\":\"teamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"team_size\"},{\"name\":\"companyValues\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_values\"},{\"name\":\"teamCulture\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_culture\"},{\"name\":\"currentPosition\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"current_position\"},{\"name\":\"portfolioUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"portfolio_url\"},{\"name\":\"availability\",\"kind\":\"enum\",\"type\":\"Availability\"},{\"name\":\"permissions\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"decisionAuthority\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"decision_authority\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"MembershipProposalToProposal\"}],\"dbName\":\"membership_proposals\"},\"InvestorProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fundingNeeded\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"funding_needed\"},{\"name\":\"fundingType\",\"kind\":\"enum\",\"type\":\"FundingType\",\"dbName\":\"funding_type\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"startup_stage\"},{\"name\":\"currentRevenue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"current_revenue\"},{\"name\":\"projectedRevenue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"projected_revenue\"},{\"name\":\"customers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"monthlyUsers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"monthly_users\"},{\"name\":\"growthRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"growth_rate\"},{\"name\":\"useOfFunds\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"use_of_funds\"},{\"name\":\"keyMetrics\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"key_metrics\"},{\"name\":\"teamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"team_size\"},{\"name\":\"foundedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"founded_date\"},{\"name\":\"previousFunding\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"previous_funding\"},{\"name\":\"equityOffered\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_offered\"},{\"name\":\"boardSeat\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"board_seat\"},{\"name\":\"expectedROI\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"expected_roi\"},{\"name\":\"exitStrategy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"exit_strategy\"},{\"name\":\"minInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_investment\"},{\"name\":\"maxInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_investment\"},{\"name\":\"investorKind\",\"kind\":\"enum\",\"type\":\"InvestorKind\",\"dbName\":\"investor_kind\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"InvestorProposalToProposal\"}],\"dbName\":\"investor_proposals\"},\"MentorProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"MentorDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"guidanceAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"guidance_areas\"},{\"name\":\"specificChallenges\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"specific_challenges\"},{\"name\":\"currentStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"current_stage\"},{\"name\":\"preferredMentorBg\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_mentor_bg\"},{\"name\":\"expertiseAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"expertise_areas\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"years_experience\"},{\"name\":\"industriesServed\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"industries_served\"},{\"name\":\"successStories\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"success_stories\"},{\"name\":\"menteesCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mentees_criteria\"},{\"name\":\"preferredEngage\",\"kind\":\"enum\",\"type\":\"EngagementType\",\"dbName\":\"preferred_engage\"},{\"name\":\"sessionFrequency\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_frequency\"},{\"name\":\"compensationExp\",\"kind\":\"enum\",\"type\":\"MentorCompensation\",\"dbName\":\"compensation_exp\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"MentorProposalToProposal\"}],\"dbName\":\"mentor_proposals\"},\"TeamProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hiringOrSeeking\",\"kind\":\"enum\",\"type\":\"TeamDirection\",\"dbName\":\"hiring_or_seeking\"},{\"name\":\"roleTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_title\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seniority\",\"kind\":\"enum\",\"type\":\"SeniorityLevel\",\"dbName\":\"seniority_level\"},{\"name\":\"mustHaveSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"must_have_skills\"},{\"name\":\"niceToHaveSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"nice_to_have_skills\"},{\"name\":\"certifications\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languagesRequired\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"languages_required\"},{\"name\":\"workArrangement\",\"kind\":\"enum\",\"type\":\"WorkArrangement\",\"dbName\":\"work_arrangement\"},{\"name\":\"compensation\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"salary_range\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companySize\",\"kind\":\"enum\",\"type\":\"CompanySize\",\"dbName\":\"company_size\"},{\"name\":\"companyStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"company_stage\"},{\"name\":\"teamCulture\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_culture\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToTeamProposal\"}],\"dbName\":\"team_proposals\"},\"CoFounderProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"CofounderDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"roleTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_title\"},{\"name\":\"keyResponsibilities\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"key_responsibilities\"},{\"name\":\"decisionAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"decision_areas\"},{\"name\":\"equityOffered\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_offered\"},{\"name\":\"equityExpected\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_expected\"},{\"name\":\"vestingSchedule\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vesting_schedule\"},{\"name\":\"timeCommitment\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"time_commitment\"},{\"name\":\"requiredSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"required_skills\"},{\"name\":\"preferredBackground\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_background\"},{\"name\":\"mustHaveExperience\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"must_have_experience\"},{\"name\":\"personalityTraits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"personality_traits\"},{\"name\":\"businessStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"business_stage\"},{\"name\":\"currentTeamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_team_size\"},{\"name\":\"businessModel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"business_model\"},{\"name\":\"targetMarket\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"target_market\"},{\"name\":\"workStyle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"work_style\"},{\"name\":\"companyValues\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_values\"},{\"name\":\"conflictResolution\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"conflict_resolution\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"CoFounderProposalToProposal\"}],\"dbName\":\"cofounder_proposals\"},\"PartnerProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"PartnerDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"partnershipType\",\"kind\":\"enum\",\"type\":\"PartnershipType\",\"dbName\":\"partnership_type\"},{\"name\":\"valueOffered\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"value_offered\"},{\"name\":\"valueExpected\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"value_expected\"},{\"name\":\"mutualBenefits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mutual_benefits\"},{\"name\":\"partnershipModel\",\"kind\":\"enum\",\"type\":\"PartnershipModel\",\"dbName\":\"partnership_model\"},{\"name\":\"revenueSharing\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"revenue_sharing\"},{\"name\":\"exclusivity\",\"kind\":\"enum\",\"type\":\"ExclusivityType\"},{\"name\":\"duration\",\"kind\":\"enum\",\"type\":\"PartnershipDuration\",\"dbName\":\"partnership_duration\"},{\"name\":\"partnerCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"partner_criteria\"},{\"name\":\"minimumRequirements\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"minimum_requirements\"},{\"name\":\"idealPartnerProfile\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ideal_partner_profile\"},{\"name\":\"currentPartners\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_partners\"},{\"name\":\"marketReach\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"market_reach\"},{\"name\":\"customerBase\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"customer_base\"},{\"name\":\"annualRevenue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"annual_revenue\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"PartnerProposalToProposal\"}],\"dbName\":\"partner_proposals\"},\"CustomerProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sellingOrBuying\",\"kind\":\"enum\",\"type\":\"CustomerDirection\",\"dbName\":\"selling_or_buying\"},{\"name\":\"productService\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_service\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pricingModel\",\"kind\":\"enum\",\"type\":\"PricingModel\",\"dbName\":\"pricing_model\"},{\"name\":\"priceRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"price_range\"},{\"name\":\"availability\",\"kind\":\"enum\",\"type\":\"Availability\"},{\"name\":\"deliveryTime\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"delivery_time\"},{\"name\":\"targetAudience\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"target_audience\"},{\"name\":\"customerBenefits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"customer_benefits\"},{\"name\":\"uniqueSellingProp\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"unique_selling_prop\"},{\"name\":\"requirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budgetRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"budget_range\"},{\"name\":\"decisionCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"decision_criteria\"},{\"name\":\"timeframe\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marketSize\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"market_size\"},{\"name\":\"competitors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousClients\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"previous_clients\"},{\"name\":\"testimonials\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supportIncluded\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"support_included\"},{\"name\":\"warrantyTerms\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"warranty_terms\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_terms\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"CustomerProposalToProposal\"}],\"dbName\":\"customer_proposals\"},\"Plan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"display_name\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planType\",\"kind\":\"enum\",\"type\":\"PlanType\",\"dbName\":\"plan_type\"},{\"name\":\"billingPeriod\",\"kind\":\"enum\",\"type\":\"BillingPeriod\",\"dbName\":\"billing_period\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trialDays\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"trial_days\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sort_order\"},{\"name\":\"cappedAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"stripe_price_id\"},{\"name\":\"paypalPlanId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"paypal_plan_id\"},{\"name\":\"feature\",\"kind\":\"object\",\"type\":\"Feature\",\"relationName\":\"planFeature\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"planSubscriptions\"},{\"name\":\"discounts\",\"kind\":\"object\",\"type\":\"DiscountToPlan\",\"relationName\":\"planDiscounts\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"PromotionToPlan\",\"relationName\":\"planPromotions\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"plans\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"plan_id\"},{\"name\":\"subId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sub_id\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"current_period_start\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"current_period_end\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"cancel_at_period_end\"},{\"name\":\"cancelReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"canceled_at\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ended_at\"},{\"name\":\"trialStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"trial_start\"},{\"name\":\"trialEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"trial_end\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"userSubscriptions\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"planSubscriptions\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"subscriptionPayment\"},{\"name\":\"billingEvents\",\"kind\":\"object\",\"type\":\"BillingEvent\",\"relationName\":\"subscriptionBillingEvents\"},{\"name\":\"usage\",\"kind\":\"object\",\"type\":\"Usage\",\"relationName\":\"subscriptionUsage\"}],\"dbName\":\"subscriptions\"},\"CreditPackage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"display_name\"},{\"name\":\"packageType\",\"kind\":\"enum\",\"type\":\"PackageType\",\"dbName\":\"package_type\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditAmount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"credit_amount\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bonusCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bonus_credits\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sort_order\"},{\"name\":\"validityDays\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"validity_days\"},{\"name\":\"feature\",\"kind\":\"object\",\"type\":\"Feature\",\"relationName\":\"packageFeature\"},{\"name\":\"discounts\",\"kind\":\"object\",\"type\":\"DiscountToPackage\",\"relationName\":\"packageDiscounts\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"PromotionToPackage\",\"relationName\":\"packagePromotions\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"CreditPurchase\",\"relationName\":\"packagePurchases\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"credit_packages\"},\"CreditPurchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"package_id\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_id\"},{\"name\":\"creditAmount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"credit_amount\"},{\"name\":\"bonusCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bonus_credits\"},{\"name\":\"totalCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_credits\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PurchaseStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"purchasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"purchased_at\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"userCreditPurchases\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"CreditPackage\",\"relationName\":\"packagePurchases\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"purchasePayment\"},{\"name\":\"billingEvents\",\"kind\":\"object\",\"type\":\"BillingEvent\",\"relationName\":\"purchaseBillingEvents\"},{\"name\":\"usage\",\"kind\":\"object\",\"type\":\"Usage\",\"relationName\":\"purchaseUsage\"}],\"dbName\":\"credit_purchases\"},\"Feature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxProjects\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_projects\"},{\"name\":\"maxTeams\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_teams\"},{\"name\":\"maxProposals\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_proposals\"},{\"name\":\"maxRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_requests\"},{\"name\":\"maxStorageGB\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_storage_gb\"},{\"name\":\"maxCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_credits\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"plan_id\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"planFeature\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"package_id\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"CreditPackage\",\"relationName\":\"packageFeature\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"features\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"subscription_id\"},{\"name\":\"purchaseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"purchase_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"billingType\",\"kind\":\"enum\",\"type\":\"BillingType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"adjustedAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"billingPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"billingPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\",\"dbName\":\"payment_method\"},{\"name\":\"paymentGateway\",\"kind\":\"enum\",\"type\":\"PaymentGateway\",\"dbName\":\"payment_gateway\"},{\"name\":\"failureReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"failure_reason\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receipt_url\"},{\"name\":\"refundId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refundReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chargeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"processed_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"userPayments\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"subscriptionPayment\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"CreditPurchase\",\"relationName\":\"purchasePayment\"}],\"dbName\":\"payments\"},\"BillingEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditPurchaseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"BillingEventType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"promotionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BillingEventStatus\"},{\"name\":\"appliedAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"failureReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creditPurchase\",\"kind\":\"object\",\"type\":\"CreditPurchase\",\"relationName\":\"purchaseBillingEvents\"},{\"name\":\"discount\",\"kind\":\"object\",\"type\":\"Discount\",\"relationName\":\"discountBillingEvents\"},{\"name\":\"promotion\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"promotionBillingEvents\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"subscriptionBillingEvents\"}],\"dbName\":\"billing_events\"},\"Promotion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PromotionType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"enum\",\"type\":\"PromotionUnit\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maxUses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"appliedToAll\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"billingEvents\",\"kind\":\"object\",\"type\":\"BillingEvent\",\"relationName\":\"promotionBillingEvents\"},{\"name\":\"packages\",\"kind\":\"object\",\"type\":\"PromotionToPackage\",\"relationName\":\"promotionPackages\"},{\"name\":\"plans\",\"kind\":\"object\",\"type\":\"PromotionToPlan\",\"relationName\":\"promotionPlans\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"PromotionToUser\",\"relationName\":\"promotionUsers\"}],\"dbName\":\"promotion\"},\"Discount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"DiscountType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"enum\",\"type\":\"DiscountUnit\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maxUses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"appliedToAll\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"minimumAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maximumAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"billingEvents\",\"kind\":\"object\",\"type\":\"BillingEvent\",\"relationName\":\"discountBillingEvents\"},{\"name\":\"packages\",\"kind\":\"object\",\"type\":\"DiscountToPackage\",\"relationName\":\"discountPackages\"},{\"name\":\"plans\",\"kind\":\"object\",\"type\":\"DiscountToPlan\",\"relationName\":\"discountPlans\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"DiscountToUser\",\"relationName\":\"discountUsers\"}],\"dbName\":\"discount\"},\"DiscountToPlan\":{\"fields\":[{\"name\":\"discountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"object\",\"type\":\"Discount\",\"relationName\":\"discountPlans\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"planDiscounts\"}],\"dbName\":\"discount_to_plan\"},\"DiscountToPackage\":{\"fields\":[{\"name\":\"discountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"object\",\"type\":\"Discount\",\"relationName\":\"discountPackages\"},{\"name\":\"creditPackage\",\"kind\":\"object\",\"type\":\"CreditPackage\",\"relationName\":\"packageDiscounts\"}],\"dbName\":\"discount_to_package\"},\"DiscountToUser\":{\"fields\":[{\"name\":\"discountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"object\",\"type\":\"Discount\",\"relationName\":\"discountUsers\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"userDiscounts\"}],\"dbName\":\"discount_to_user\"},\"PromotionToUser\":{\"fields\":[{\"name\":\"promotionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promotion\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"promotionUsers\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"userPromotions\"}],\"dbName\":\"promotion_to_user\"},\"PromotionToPlan\":{\"fields\":[{\"name\":\"promotionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"planPromotions\"},{\"name\":\"promotion\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"promotionPlans\"}],\"dbName\":\"promotion_to_plan\"},\"PromotionToPackage\":{\"fields\":[{\"name\":\"promotionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditPackage\",\"kind\":\"object\",\"type\":\"CreditPackage\",\"relationName\":\"packagePromotions\"},{\"name\":\"promotion\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"promotionPackages\"}],\"dbName\":\"promotion_to_package\"},\"Usage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"subscription_id\"},{\"name\":\"creditPurchaseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"credit_purchase_id\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"maxProjects\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_projects\"},{\"name\":\"remainingProjects\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"remaining_projects\"},{\"name\":\"maxTeams\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_teams\"},{\"name\":\"remainingTeams\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"remaining_teams\"},{\"name\":\"maxProposals\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_proposals\"},{\"name\":\"remainingProposals\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"remaining_proposals\"},{\"name\":\"maxRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_requests\"},{\"name\":\"remainingRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"remaining_requests\"},{\"name\":\"maxStorageGB\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_storage_gb\"},{\"name\":\"remainingStorageGB\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"remaining_storage_gb\"},{\"name\":\"maxCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_credits\"},{\"name\":\"remainingCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"remaining_credits\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"userUsages\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"subscriptionUsage\"},{\"name\":\"creditPurchase\",\"kind\":\"object\",\"type\":\"CreditPurchase\",\"relationName\":\"purchaseUsage\"}],\"dbName\":\"usage\"},\"UserQuota\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"subscription_id\"},{\"name\":\"maxProjects\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_projects\"},{\"name\":\"maxTeams\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_teams\"},{\"name\":\"maxProposals\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_proposals\"},{\"name\":\"maxRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_requests\"},{\"name\":\"maxConnections\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_connections\"},{\"name\":\"maxMessages\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_messages\"},{\"name\":\"maxStorageGB\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_storage_gb\"},{\"name\":\"maxCredits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_credits\"},{\"name\":\"projectsOwned\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"projects_owned\"},{\"name\":\"teamsOwned\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"teams_owned\"},{\"name\":\"proposalsCreated\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"proposals_created\"},{\"name\":\"requestsSent\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"requests_sent\"},{\"name\":\"connectionsCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"connections_count\"},{\"name\":\"messagesSent\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"messages_sent\"},{\"name\":\"storageUsedGB\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"storage_used_gb\"},{\"name\":\"totalProjectsCreated\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_projects_created\"},{\"name\":\"totalTeamsCreated\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_teams_created\"},{\"name\":\"totalProposalsCreated\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_proposals_created\"},{\"name\":\"totalRequestsSent\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_requests_sent\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"current_period_start\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"current_period_end\"},{\"name\":\"lastResetAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_reset_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserQuota\"}],\"dbName\":\"user_quotas\"},\"WebhookLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"topic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"webhook_logs\"},\"WebhookQueue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"topic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextRetryAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"webhook_queue\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

