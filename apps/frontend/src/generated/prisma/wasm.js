
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  emailVerified: 'emailVerified',
  name: 'name',
  image: 'image',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  username: 'username',
  avatar: 'avatar',
  bio: 'bio',
  phone: 'phone',
  website: 'website',
  location: 'location',
  timezone: 'timezone',
  userType: 'userType',
  isActive: 'isActive',
  isVerified: 'isVerified',
  onboardingCompleted: 'onboardingCompleted',
  onboardingStep: 'onboardingStep',
  credibilityScore: 'credibilityScore',
  verificationLevel: 'verificationLevel',
  isKycVerified: 'isKycVerified',
  kycDocuments: 'kycDocuments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastActiveAt: 'lastActiveAt'
};

exports.Prisma.FounderProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyExperience: 'companyExperience',
  previousExits: 'previousExits',
  linkedinProfile: 'linkedinProfile',
  industryPreferences: 'industryPreferences',
  locationPreferences: 'locationPreferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvestorProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  investorType: 'investorType',
  firmName: 'firmName',
  investmentRange: 'investmentRange',
  minInvestment: 'minInvestment',
  maxInvestment: 'maxInvestment',
  preferredStages: 'preferredStages',
  preferredIndustries: 'preferredIndustries',
  geographicFocus: 'geographicFocus',
  investmentThesis: 'investmentThesis',
  valueAddServices: 'valueAddServices',
  portfolioSize: 'portfolioSize',
  successfulExits: 'successfulExits',
  averageCheckSize: 'averageCheckSize',
  isAccredited: 'isAccredited',
  accreditationProof: 'accreditationProof',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobTitle: 'jobTitle',
  experience: 'experience',
  currentSalary: 'currentSalary',
  salaryExpectation: 'salaryExpectation',
  availabilityType: 'availabilityType',
  hoursPerWeek: 'hoursPerWeek',
  startDate: 'startDate',
  acceptsEquity: 'acceptsEquity',
  acceptsCash: 'acceptsCash',
  acceptsDeferred: 'acceptsDeferred',
  minEquityPercentage: 'minEquityPercentage',
  remotePreference: 'remotePreference',
  rolePreferences: 'rolePreferences',
  industryPreferences: 'industryPreferences',
  portfolioUrl: 'portfolioUrl',
  linkedinUrl: 'linkedinUrl',
  githubUrl: 'githubUrl',
  achievements: 'achievements',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  name: 'name',
  description: 'description',
  tagline: 'tagline',
  logo: 'logo',
  website: 'website',
  stage: 'stage',
  industry: 'industry',
  tags: 'tags',
  revenueModel: 'revenueModel',
  targetMarket: 'targetMarket',
  competitiveEdge: 'competitiveEdge',
  fundingGoal: 'fundingGoal',
  fundingRaised: 'fundingRaised',
  valuationCap: 'valuationCap',
  teamSize: 'teamSize',
  isHiring: 'isHiring',
  status: 'status',
  isActive: 'isActive',
  isPublic: 'isPublic',
  isFeatured: 'isFeatured',
  location: 'location',
  isRemoteFriendly: 'isRemoteFriendly',
  viewCount: 'viewCount',
  likeCount: 'likeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  launchedAt: 'launchedAt'
};

exports.Prisma.ProjectMemberScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  userId: 'userId',
  role: 'role',
  title: 'title',
  permissions: 'permissions',
  isCoFounder: 'isCoFounder',
  isInvestor: 'isInvestor',
  isMember: 'isMember',
  compensationType: 'compensationType',
  salaryAmount: 'salaryAmount',
  equityPercentage: 'equityPercentage',
  profitSharePercent: 'profitSharePercent',
  status: 'status',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  name: 'name',
  description: 'description',
  avatar: 'avatar',
  teamType: 'teamType',
  industry: 'industry',
  skills: 'skills',
  status: 'status',
  isActive: 'isActive',
  isHiring: 'isHiring',
  size: 'size',
  maxSize: 'maxSize',
  location: 'location',
  isRemote: 'isRemote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  userId: 'userId',
  role: 'role',
  title: 'title',
  status: 'status',
  permissions: 'permissions',
  compensationType: 'compensationType',
  salaryAmount: 'salaryAmount',
  equityPercentage: 'equityPercentage',
  hourlyRate: 'hourlyRate',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt'
};

exports.Prisma.ProjectTeamScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  teamId: 'teamId',
  role: 'role',
  status: 'status',
  assignedAt: 'assignedAt'
};

exports.Prisma.InvestmentScalarFieldEnum = {
  id: 'id',
  investorId: 'investorId',
  projectId: 'projectId',
  amount: 'amount',
  investmentType: 'investmentType',
  equityPercent: 'equityPercent',
  valuation: 'valuation',
  liquidationPref: 'liquidationPref',
  antidilution: 'antidilution',
  boardSeat: 'boardSeat',
  status: 'status',
  stage: 'stage',
  dueDiligenceCompleted: 'dueDiligenceCompleted',
  legalDocsComplete: 'legalDocsComplete',
  proposedAt: 'proposedAt',
  acceptedAt: 'acceptedAt',
  completedAt: 'completedAt',
  notes: 'notes'
};

exports.Prisma.RequestScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  targetType: 'targetType',
  projectId: 'projectId',
  teamId: 'teamId',
  proposalId: 'proposalId',
  roleApplied: 'roleApplied',
  role: 'role',
  message: 'message',
  proposedTerms: 'proposedTerms',
  status: 'status',
  response: 'response',
  respondedAt: 'respondedAt',
  createdAt: 'createdAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  targetType: 'targetType',
  projectId: 'projectId',
  teamId: 'teamId',
  role: 'role',
  message: 'message',
  terms: 'terms',
  status: 'status',
  expiresAt: 'expiresAt',
  response: 'response',
  respondedAt: 'respondedAt',
  createdAt: 'createdAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  giverId: 'giverId',
  receiverId: 'receiverId',
  contextType: 'contextType',
  projectId: 'projectId',
  teamId: 'teamId',
  proposalId: 'proposalId',
  rating: 'rating',
  title: 'title',
  content: 'content',
  workQuality: 'workQuality',
  communication: 'communication',
  reliability: 'reliability',
  leadership: 'leadership',
  technicalSkills: 'technicalSkills',
  isVerified: 'isVerified',
  isPublic: 'isPublic',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  linkedinProfile: 'linkedinProfile',
  websiteUrl: 'websiteUrl',
  companyEmail: 'companyEmail',
  status: 'status',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description'
};

exports.Prisma.UserSkillScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  skillId: 'skillId',
  proficiency: 'proficiency',
  yearsOfExp: 'yearsOfExp',
  isVerified: 'isVerified'
};

exports.Prisma.SkillEndorsementScalarFieldEnum = {
  id: 'id',
  userSkillId: 'userSkillId',
  endorserId: 'endorserId',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.InterestScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description'
};

exports.Prisma.UserInterestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  interestId: 'interestId'
};

exports.Prisma.ConnectionScalarFieldEnum = {
  id: 'id',
  requesterId: 'requesterId',
  receiverId: 'receiverId',
  status: 'status',
  message: 'message',
  requestedAt: 'requestedAt',
  acceptedAt: 'acceptedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  content: 'content',
  isRead: 'isRead',
  readAt: 'readAt',
  attachments: 'attachments',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  projectId: 'projectId',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectCommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  projectId: 'projectId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProposalCommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  proposalId: 'proposalId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProposalLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  proposalId: 'proposalId',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  content: 'content',
  relatedId: 'relatedId',
  relatedType: 'relatedType',
  isRead: 'isRead',
  readAt: 'readAt',
  createdAt: 'createdAt'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profileVisibility: 'profileVisibility',
  showEmail: 'showEmail',
  showPhone: 'showPhone',
  allowMessages: 'allowMessages',
  allowConnections: 'allowConnections',
  emailNotifications: 'emailNotifications',
  pushNotifications: 'pushNotifications',
  newRequestEmail: 'newRequestEmail',
  newInvitationEmail: 'newInvitationEmail',
  newMessageEmail: 'newMessageEmail',
  projectUpdateEmail: 'projectUpdateEmail',
  investmentUpdateEmail: 'investmentUpdateEmail',
  newConnectionEmail: 'newConnectionEmail',
  weeklyDigestEmail: 'weeklyDigestEmail',
  marketingEmails: 'marketingEmails',
  showInSearch: 'showInSearch',
  showInRecommendations: 'showInRecommendations',
  theme: 'theme',
  language: 'language',
  timezone: 'timezone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectAnalyticsScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  viewCount: 'viewCount',
  uniqueViews: 'uniqueViews',
  likeCount: 'likeCount',
  commentCount: 'commentCount',
  shareCount: 'shareCount',
  RequestCount: 'RequestCount',
  acceptedApps: 'acceptedApps',
  investmentRequests: 'investmentRequests',
  totalFunding: 'totalFunding',
  date: 'date'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.ProposalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdBy: 'createdBy',
  category: 'category',
  intent: 'intent',
  projectId: 'projectId',
  teamId: 'teamId',
  title: 'title',
  shortSummary: 'shortSummary',
  detailedDesc: 'detailedDesc',
  industry: 'industry',
  keywords: 'keywords',
  status: 'status',
  visibility: 'visibility',
  featured: 'featured',
  views: 'views',
  bookmarks: 'bookmarks',
  slug: 'slug',
  metaDescription: 'metaDescription',
  tags: 'tags',
  language: 'language',
  currency: 'currency',
  timezone: 'timezone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  expiresAt: 'expiresAt',
  metadata: 'metadata'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  proposalId: 'proposalId',
  projectId: 'projectId',
  teamId: 'teamId',
  investmentId: 'investmentId',
  verificationRequestId: 'verificationRequestId',
  filename: 'filename',
  url: 'url',
  mimeType: 'mimeType',
  size: 'size',
  type: 'type',
  description: 'description',
  language: 'language',
  version: 'version',
  isPrimary: 'isPrimary',
  checksum: 'checksum',
  views: 'views',
  downloads: 'downloads',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BudgetScalarFieldEnum = {
  id: 'id',
  minAmount: 'minAmount',
  maxAmount: 'maxAmount',
  currency: 'currency',
  description: 'description',
  proposalId: 'proposalId'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  country: 'country',
  countryCode: 'countryCode',
  region: 'region',
  city: 'city',
  remote: 'remote',
  hybrid: 'hybrid',
  willRelocate: 'willRelocate',
  timeZones: 'timeZones',
  proposalId: 'proposalId'
};

exports.Prisma.TimelineScalarFieldEnum = {
  id: 'id',
  startDate: 'startDate',
  endDate: 'endDate',
  duration: 'duration',
  commitment: 'commitment',
  availability: 'availability',
  urgency: 'urgency',
  proposalId: 'proposalId'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  website: 'website',
  linkedin: 'linkedin',
  twitter: 'twitter',
  github: 'github',
  telegram: 'telegram',
  discord: 'discord',
  preferredContact: 'preferredContact',
  publicProfile: 'publicProfile',
  proposalId: 'proposalId'
};

exports.Prisma.InvestorProposalScalarFieldEnum = {
  id: 'id',
  fundingNeeded: 'fundingNeeded',
  fundingType: 'fundingType',
  stage: 'stage',
  currentRevenue: 'currentRevenue',
  projectedRevenue: 'projectedRevenue',
  customers: 'customers',
  monthlyUsers: 'monthlyUsers',
  growthRate: 'growthRate',
  useOfFunds: 'useOfFunds',
  keyMetrics: 'keyMetrics',
  teamSize: 'teamSize',
  foundedDate: 'foundedDate',
  previousFunding: 'previousFunding',
  equityOffered: 'equityOffered',
  boardSeat: 'boardSeat',
  expectedROI: 'expectedROI',
  exitStrategy: 'exitStrategy',
  minInvestment: 'minInvestment',
  maxInvestment: 'maxInvestment',
  investorKind: 'investorKind',
  proposalId: 'proposalId'
};

exports.Prisma.MentorProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  guidanceAreas: 'guidanceAreas',
  specificChallenges: 'specificChallenges',
  currentStage: 'currentStage',
  preferredMentorBg: 'preferredMentorBg',
  expertiseAreas: 'expertiseAreas',
  yearsExperience: 'yearsExperience',
  industriesServed: 'industriesServed',
  successStories: 'successStories',
  menteesCriteria: 'menteesCriteria',
  preferredEngage: 'preferredEngage',
  sessionFrequency: 'sessionFrequency',
  compensationExp: 'compensationExp',
  proposalId: 'proposalId'
};

exports.Prisma.TeamProposalScalarFieldEnum = {
  id: 'id',
  hiringOrSeeking: 'hiringOrSeeking',
  roleTitle: 'roleTitle',
  department: 'department',
  seniority: 'seniority',
  mustHaveSkills: 'mustHaveSkills',
  niceToHaveSkills: 'niceToHaveSkills',
  certifications: 'certifications',
  languagesRequired: 'languagesRequired',
  workArrangement: 'workArrangement',
  compensation: 'compensation',
  salaryRange: 'salaryRange',
  benefits: 'benefits',
  companySize: 'companySize',
  companyStage: 'companyStage',
  teamCulture: 'teamCulture',
  proposalId: 'proposalId'
};

exports.Prisma.CoFounderProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  roleTitle: 'roleTitle',
  keyResponsibilities: 'keyResponsibilities',
  decisionAreas: 'decisionAreas',
  equityOffered: 'equityOffered',
  equityExpected: 'equityExpected',
  vestingSchedule: 'vestingSchedule',
  timeCommitment: 'timeCommitment',
  requiredSkills: 'requiredSkills',
  preferredBackground: 'preferredBackground',
  mustHaveExperience: 'mustHaveExperience',
  personalityTraits: 'personalityTraits',
  businessStage: 'businessStage',
  currentTeamSize: 'currentTeamSize',
  businessModel: 'businessModel',
  targetMarket: 'targetMarket',
  workStyle: 'workStyle',
  companyValues: 'companyValues',
  conflictResolution: 'conflictResolution',
  proposalId: 'proposalId'
};

exports.Prisma.PartnerProposalScalarFieldEnum = {
  id: 'id',
  seekingOrOffering: 'seekingOrOffering',
  partnershipType: 'partnershipType',
  valueOffered: 'valueOffered',
  valueExpected: 'valueExpected',
  mutualBenefits: 'mutualBenefits',
  partnershipModel: 'partnershipModel',
  revenueSharing: 'revenueSharing',
  exclusivity: 'exclusivity',
  duration: 'duration',
  partnerCriteria: 'partnerCriteria',
  minimumRequirements: 'minimumRequirements',
  idealPartnerProfile: 'idealPartnerProfile',
  currentPartners: 'currentPartners',
  marketReach: 'marketReach',
  customerBase: 'customerBase',
  annualRevenue: 'annualRevenue',
  proposalId: 'proposalId'
};

exports.Prisma.CustomerProposalScalarFieldEnum = {
  id: 'id',
  sellingOrBuying: 'sellingOrBuying',
  productService: 'productService',
  category: 'category',
  description: 'description',
  pricingModel: 'pricingModel',
  priceRange: 'priceRange',
  availability: 'availability',
  deliveryTime: 'deliveryTime',
  targetAudience: 'targetAudience',
  customerBenefits: 'customerBenefits',
  uniqueSellingProp: 'uniqueSellingProp',
  requirements: 'requirements',
  budgetRange: 'budgetRange',
  decisionCriteria: 'decisionCriteria',
  timeframe: 'timeframe',
  marketSize: 'marketSize',
  competitors: 'competitors',
  previousClients: 'previousClients',
  testimonials: 'testimonials',
  supportIncluded: 'supportIncluded',
  warrantyTerms: 'warrantyTerms',
  paymentTerms: 'paymentTerms',
  proposalId: 'proposalId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.AttachmentType = exports.$Enums.AttachmentType = {
  DOCUMENT: 'DOCUMENT',
  IMAGE: 'IMAGE',
  VIDEO: 'VIDEO',
  AUDIO: 'AUDIO',
  LINK: 'LINK',
  OTHER: 'OTHER'
};

exports.Visibility = exports.$Enums.Visibility = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  MEMBERS_ONLY: 'MEMBERS_ONLY'
};

exports.Urgency = exports.$Enums.Urgency = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.ContactMethod = exports.$Enums.ContactMethod = {
  EMAIL: 'EMAIL',
  PHONE: 'PHONE',
  LINKEDIN: 'LINKEDIN',
  TELEGRAM: 'TELEGRAM',
  DISCORD: 'DISCORD'
};

exports.InvestorKind = exports.$Enums.InvestorKind = {
  ANGEL: 'ANGEL',
  VC: 'VC',
  STRATEGIC: 'STRATEGIC',
  CROWDFUNDING: 'CROWDFUNDING',
  GOVERNMENT: 'GOVERNMENT',
  FAMILY_OFFICE: 'FAMILY_OFFICE'
};

exports.MentorDirection = exports.$Enums.MentorDirection = {
  SEEKING_MENTOR: 'SEEKING_MENTOR',
  OFFERING_MENTORSHIP: 'OFFERING_MENTORSHIP'
};

exports.MentorCompensation = exports.$Enums.MentorCompensation = {
  FREE: 'FREE',
  EQUITY: 'EQUITY',
  ADVISORY_SHARES: 'ADVISORY_SHARES',
  PAID: 'PAID',
  BARTER: 'BARTER'
};

exports.TeamDirection = exports.$Enums.TeamDirection = {
  HIRING: 'HIRING',
  SEEKING_POSITION: 'SEEKING_POSITION'
};

exports.WorkArrangement = exports.$Enums.WorkArrangement = {
  REMOTE: 'REMOTE',
  ONSITE: 'ONSITE',
  HYBRID: 'HYBRID'
};

exports.SeniorityLevel = exports.$Enums.SeniorityLevel = {
  INTERN: 'INTERN',
  JUNIOR: 'JUNIOR',
  MID_LEVEL: 'MID_LEVEL',
  SENIOR: 'SENIOR',
  LEAD: 'LEAD',
  PRINCIPAL: 'PRINCIPAL',
  DIRECTOR: 'DIRECTOR',
  VP: 'VP',
  C_LEVEL: 'C_LEVEL'
};

exports.CompanySize = exports.$Enums.CompanySize = {
  STARTUP_1_10: 'STARTUP_1_10',
  SMALL_11_50: 'SMALL_11_50',
  MEDIUM_51_200: 'MEDIUM_51_200',
  LARGE_201_1000: 'LARGE_201_1000',
  ENTERPRISE_1000_PLUS: 'ENTERPRISE_1000_PLUS'
};

exports.CofounderDirection = exports.$Enums.CofounderDirection = {
  SEEKING_COFOUNDER: 'SEEKING_COFOUNDER',
  OFFERING_COFOUNDING: 'OFFERING_COFOUNDING'
};

exports.PartnerDirection = exports.$Enums.PartnerDirection = {
  SEEKING_PARTNER: 'SEEKING_PARTNER',
  OFFERING_PARTNERSHIP: 'OFFERING_PARTNERSHIP'
};

exports.PartnershipModel = exports.$Enums.PartnershipModel = {
  REVENUE_SHARE: 'REVENUE_SHARE',
  FIXED_FEE: 'FIXED_FEE',
  COMMISSION_BASED: 'COMMISSION_BASED',
  EQUITY_BASED: 'EQUITY_BASED',
  BARTER: 'BARTER',
  JOINT_VENTURE: 'JOINT_VENTURE'
};

exports.ExclusivityType = exports.$Enums.ExclusivityType = {
  EXCLUSIVE: 'EXCLUSIVE',
  NON_EXCLUSIVE: 'NON_EXCLUSIVE',
  SEMI_EXCLUSIVE: 'SEMI_EXCLUSIVE'
};

exports.CustomerDirection = exports.$Enums.CustomerDirection = {
  SELLING: 'SELLING',
  BUYING: 'BUYING'
};

exports.UserType = exports.$Enums.UserType = {
  FOUNDER: 'FOUNDER',
  INVESTOR: 'INVESTOR',
  MEMBER: 'MEMBER',
  HYBRID: 'HYBRID'
};

exports.VerificationLevel = exports.$Enums.VerificationLevel = {
  UNVERIFIED: 'UNVERIFIED',
  EMAIL_VERIFIED: 'EMAIL_VERIFIED',
  PHONE_VERIFIED: 'PHONE_VERIFIED',
  IDENTITY_VERIFIED: 'IDENTITY_VERIFIED',
  BUSINESS_VERIFIED: 'BUSINESS_VERIFIED',
  PREMIUM_VERIFIED: 'PREMIUM_VERIFIED'
};

exports.InvestorType = exports.$Enums.InvestorType = {
  ANGEL: 'ANGEL',
  VC_FUND: 'VC_FUND',
  FAMILY_OFFICE: 'FAMILY_OFFICE',
  CORPORATE_VC: 'CORPORATE_VC',
  CROWDFUNDING: 'CROWDFUNDING',
  GOVERNMENT: 'GOVERNMENT',
  OTHER: 'OTHER'
};

exports.Commitment = exports.$Enums.Commitment = {
  PART_TIME: 'PART_TIME',
  FULL_TIME: 'FULL_TIME',
  CONTRACT: 'CONTRACT',
  FLEXIBLE: 'FLEXIBLE'
};

exports.FundingType = exports.$Enums.FundingType = {
  EQUITY: 'EQUITY',
  DEBT: 'DEBT',
  GRANT: 'GRANT',
  SAFE: 'SAFE',
  CONVERTIBLE_NOTE: 'CONVERTIBLE_NOTE',
  REVENUE_SHARE: 'REVENUE_SHARE'
};

exports.StartupStage = exports.$Enums.StartupStage = {
  IDEA: 'IDEA',
  MVP: 'MVP',
  BETA: 'BETA',
  LAUNCHED: 'LAUNCHED',
  GROWTH: 'GROWTH',
  SCALE: 'SCALE'
};

exports.EngagementType = exports.$Enums.EngagementType = {
  ONE_OFF: 'ONE_OFF',
  ONGOING: 'ONGOING',
  MENTORSHIP: 'MENTORSHIP',
  CONSULTING: 'CONSULTING'
};

exports.PartnershipType = exports.$Enums.PartnershipType = {
  STRATEGIC: 'STRATEGIC',
  TECHNOLOGY: 'TECHNOLOGY',
  DISTRIBUTION: 'DISTRIBUTION',
  MARKETING: 'MARKETING',
  JOINT_VENTURE: 'JOINT_VENTURE'
};

exports.PartnershipDuration = exports.$Enums.PartnershipDuration = {
  SHORT_TERM: 'SHORT_TERM',
  MID_TERM: 'MID_TERM',
  LONG_TERM: 'LONG_TERM'
};

exports.PricingModel = exports.$Enums.PricingModel = {
  FIXED: 'FIXED',
  HOURLY: 'HOURLY',
  SUBSCRIPTION: 'SUBSCRIPTION',
  TIERED: 'TIERED',
  USAGE_BASED: 'USAGE_BASED'
};

exports.Availability = exports.$Enums.Availability = {
  IMMEDIATE: 'IMMEDIATE',
  WITHIN_WEEK: 'WITHIN_WEEK',
  WITHIN_MONTH: 'WITHIN_MONTH',
  NEGOTIABLE: 'NEGOTIABLE'
};

exports.ProjectStage = exports.$Enums.ProjectStage = {
  IDEA: 'IDEA',
  MVP: 'MVP',
  BETA: 'BETA',
  LAUNCHED: 'LAUNCHED',
  GROWTH: 'GROWTH',
  SCALE: 'SCALE',
  EXIT: 'EXIT'
};

exports.TeamType = exports.$Enums.TeamType = {
  DEVELOPMENT: 'DEVELOPMENT',
  MARKETING: 'MARKETING',
  SALES: 'SALES',
  DESIGN: 'DESIGN',
  ADVISORY: 'ADVISORY',
  GENERAL: 'GENERAL'
};

exports.CompensationType = exports.$Enums.CompensationType = {
  CASH_ONLY: 'CASH_ONLY',
  EQUITY_ONLY: 'EQUITY_ONLY',
  CASH_AND_EQUITY: 'CASH_AND_EQUITY',
  DEFERRED_CASH: 'DEFERRED_CASH',
  PROFIT_SHARING: 'PROFIT_SHARING',
  HOURLY_RATE: 'HOURLY_RATE',
  PROJECT_BASED: 'PROJECT_BASED',
  REVENUE_SHARE: 'REVENUE_SHARE'
};

exports.MemberStatus = exports.$Enums.MemberStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  ON_LEAVE: 'ON_LEAVE',
  TERMINATED: 'TERMINATED'
};

exports.AvailabilityType = exports.$Enums.AvailabilityType = {
  FULL_TIME: 'FULL_TIME',
  PART_TIME: 'PART_TIME',
  CONTRACT: 'CONTRACT',
  CONSULTANT: 'CONSULTANT',
  INTERN: 'INTERN'
};

exports.RemotePreference = exports.$Enums.RemotePreference = {
  REMOTE_ONLY: 'REMOTE_ONLY',
  HYBRID: 'HYBRID',
  ON_SITE: 'ON_SITE',
  FLEXIBLE: 'FLEXIBLE'
};

exports.InvestmentType = exports.$Enums.InvestmentType = {
  EQUITY: 'EQUITY',
  CONVERTIBLE_NOTE: 'CONVERTIBLE_NOTE',
  SAFE: 'SAFE',
  DEBT: 'DEBT',
  REVENUE_SHARE: 'REVENUE_SHARE',
  GRANT: 'GRANT'
};

exports.InvestmentStatus = exports.$Enums.InvestmentStatus = {
  PROPOSED: 'PROPOSED',
  UNDER_REVIEW: 'UNDER_REVIEW',
  DUE_DILIGENCE: 'DUE_DILIGENCE',
  ACCEPTED: 'ACCEPTED',
  COMPLETED: 'COMPLETED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED'
};

exports.InvestmentStage = exports.$Enums.InvestmentStage = {
  INITIAL: 'INITIAL',
  SERIES_A: 'SERIES_A',
  SERIES_B: 'SERIES_B',
  SERIES_C: 'SERIES_C',
  BRIDGE: 'BRIDGE',
  MEZZANINE: 'MEZZANINE'
};

exports.ProposalType = exports.$Enums.ProposalType = {
  INVESTMENT: 'INVESTMENT',
  MENTORSHIP: 'MENTORSHIP',
  TEAM: 'TEAM',
  COFOUNDER: 'COFOUNDER',
  PARTNERSHIP: 'PARTNERSHIP',
  CUSTOMER: 'CUSTOMER'
};

exports.RoleType = exports.$Enums.RoleType = {
  INVESTOR: 'INVESTOR',
  MENTOR: 'MENTOR',
  TEAM: 'TEAM',
  COFOUNDER: 'COFOUNDER',
  PARTNER: 'PARTNER',
  CUSTOMER: 'CUSTOMER'
};

exports.ProposalStatus = exports.$Enums.ProposalStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.ProjectStatus = exports.$Enums.ProjectStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.TeamStatus = exports.$Enums.TeamStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.RequestTargetType = exports.$Enums.RequestTargetType = {
  PROJECT: 'PROJECT',
  TEAM: 'TEAM',
  INVESTMENT: 'INVESTMENT',
  COLLABORATION: 'COLLABORATION'
};

exports.RequestStatus = exports.$Enums.RequestStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  WITHDRAWN: 'WITHDRAWN',
  EXPIRED: 'EXPIRED'
};

exports.ReviewContextType = exports.$Enums.ReviewContextType = {
  PROJECT: 'PROJECT',
  TEAM: 'TEAM',
  INVESTMENT: 'INVESTMENT',
  GENERAL: 'GENERAL',
  PROPOSAL: 'PROPOSAL'
};

exports.VerificationType = exports.$Enums.VerificationType = {
  IDENTITY: 'IDENTITY',
  EDUCATION: 'EDUCATION',
  WORK_EXPERIENCE: 'WORK_EXPERIENCE',
  COMPANY: 'COMPANY',
  INVESTOR_ACCREDITATION: 'INVESTOR_ACCREDITATION',
  TECHNICAL_SKILLS: 'TECHNICAL_SKILLS'
};

exports.VerificationStatus = exports.$Enums.VerificationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED'
};

exports.ProficiencyLevel = exports.$Enums.ProficiencyLevel = {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED',
  EXPERT: 'EXPERT'
};

exports.ConnectionStatus = exports.$Enums.ConnectionStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  BLOCKED: 'BLOCKED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  REQUEST_RECEIVED: 'REQUEST_RECEIVED',
  REQUEST_STATUS: 'REQUEST_STATUS',
  INVITATION_RECEIVED: 'INVITATION_RECEIVED',
  INVITATION_STATUS: 'INVITATION_STATUS',
  MESSAGE_RECEIVED: 'MESSAGE_RECEIVED',
  CONNECTION_REQUEST: 'CONNECTION_REQUEST',
  PROJECT_UPDATE: 'PROJECT_UPDATE',
  INVESTMENT_UPDATE: 'INVESTMENT_UPDATE',
  MILESTONE_COMPLETED: 'MILESTONE_COMPLETED',
  TEAM_INVITATION: 'TEAM_INVITATION',
  REVIEW_RECEIVED: 'REVIEW_RECEIVED',
  VERIFICATION_STATUS: 'VERIFICATION_STATUS',
  SYSTEM_ANNOUNCEMENT: 'SYSTEM_ANNOUNCEMENT'
};

exports.ProfileVisibility = exports.$Enums.ProfileVisibility = {
  PUBLIC: 'PUBLIC',
  CONNECTIONS_ONLY: 'CONNECTIONS_ONLY',
  PRIVATE: 'PRIVATE'
};

exports.ActivityType = exports.$Enums.ActivityType = {
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  PROFILE_UPDATE: 'PROFILE_UPDATE',
  PROJECT_CREATE: 'PROJECT_CREATE',
  PROJECT_UPDATE: 'PROJECT_UPDATE',
  REQUEST_SEND: 'REQUEST_SEND',
  INVESTMENT_PROPOSE: 'INVESTMENT_PROPOSE',
  MESSAGE_SEND: 'MESSAGE_SEND',
  CONNECTION_REQUEST: 'CONNECTION_REQUEST',
  REVIEW_GIVE: 'REVIEW_GIVE'
};

exports.Permission = exports.$Enums.Permission = {
  VIEW_PROJECT: 'VIEW_PROJECT',
  EDIT_PROJECT: 'EDIT_PROJECT',
  DELETE_PROJECT: 'DELETE_PROJECT',
  MANAGE_MEMBERS: 'MANAGE_MEMBERS',
  MANAGE_FINANCES: 'MANAGE_FINANCES',
  MANAGE_INVESTORS: 'MANAGE_INVESTORS',
  VIEW_ANALYTICS: 'VIEW_ANALYTICS',
  EDIT_PROFILE: 'EDIT_PROFILE',
  MANAGE_REQUESTS: 'MANAGE_REQUESTS',
  MANAGE_INVITATIONS: 'MANAGE_INVITATIONS',
  CREATE_UPDATES: 'CREATE_UPDATES',
  MANAGE_MILESTONES: 'MANAGE_MILESTONES',
  ADMIN_ACCESS: 'ADMIN_ACCESS'
};

exports.ProposalIntent = exports.$Enums.ProposalIntent = {
  SEEKING: 'SEEKING',
  OFFERING: 'OFFERING'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  Session: 'Session',
  User: 'User',
  FounderProfile: 'FounderProfile',
  InvestorProfile: 'InvestorProfile',
  MemberProfile: 'MemberProfile',
  Project: 'Project',
  ProjectMember: 'ProjectMember',
  Team: 'Team',
  TeamMember: 'TeamMember',
  ProjectTeam: 'ProjectTeam',
  Investment: 'Investment',
  Request: 'Request',
  Invitation: 'Invitation',
  Review: 'Review',
  VerificationRequest: 'VerificationRequest',
  Skill: 'Skill',
  UserSkill: 'UserSkill',
  SkillEndorsement: 'SkillEndorsement',
  Interest: 'Interest',
  UserInterest: 'UserInterest',
  Connection: 'Connection',
  Message: 'Message',
  ProjectLike: 'ProjectLike',
  ProjectComment: 'ProjectComment',
  ProposalComment: 'ProposalComment',
  ProposalLike: 'ProposalLike',
  Notification: 'Notification',
  UserSettings: 'UserSettings',
  UserActivity: 'UserActivity',
  ProjectAnalytics: 'ProjectAnalytics',
  VerificationToken: 'VerificationToken',
  Proposal: 'Proposal',
  Attachment: 'Attachment',
  Budget: 'Budget',
  Location: 'Location',
  Timeline: 'Timeline',
  Contact: 'Contact',
  InvestorProposal: 'InvestorProposal',
  MentorProposal: 'MentorProposal',
  TeamProposal: 'TeamProposal',
  CoFounderProposal: 'CoFounderProposal',
  PartnerProposal: 'PartnerProposal',
  CustomerProposal: 'CustomerProposal'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\DELL\\Omnibus\\xovira\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\DELL\\Omnibus\\xovira\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\n// ================================\n// AUTHENTICATION & USER MANAGEMENT\n// ================================\n\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            String  @map(\"user_id\")\n  type              String\n  provider          String\n  providerAccountId String  @map(\"provider_account_id\")\n  refresh_token     String? @db.Text\n  access_token      String? @db.Text\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String? @db.Text\n  session_state     String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@map(\"accounts\")\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique @map(\"session_token\")\n  userId       String   @map(\"user_id\")\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  email         String    @unique\n  emailVerified DateTime? @map(\"email_verified\")\n  name          String?\n  image         String?\n  password      String?\n\n  // Basic Info\n  firstName String? @map(\"first_name\")\n  lastName  String? @map(\"last_name\")\n  username  String? @unique\n  avatar    String?\n  bio       String? @db.Text\n\n  // Contact Info\n  phone    String?\n  website  String?\n  location String?\n  timezone String? @default(\"UTC\")\n\n  // Platform Status\n  userType            UserType @default(FOUNDER) @map(\"user_type\")\n  isActive            Boolean  @default(true) @map(\"is_active\")\n  isVerified          Boolean  @default(false) @map(\"is_verified\")\n  onboardingCompleted Boolean  @default(false) @map(\"onboarding_completed\")\n  onboardingStep      Int      @default(0) @map(\"onboarding_step\")\n\n  // Credibility System\n  credibilityScore  Float             @default(0) @map(\"credibility_score\")\n  verificationLevel VerificationLevel @default(UNVERIFIED) @map(\"verification_level\")\n\n  // KYC/Identity Verification\n  isKycVerified Boolean  @default(false) @map(\"is_kyc_verified\")\n  kycDocuments  String[] @map(\"kyc_documents\")\n\n  // Timestamps\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n  updatedAt    DateTime  @updatedAt @map(\"updated_at\")\n  lastActiveAt DateTime? @map(\"last_active_at\")\n\n  // Relationships\n  accounts        Account[]\n  sessions        Session[]\n  founderProfile  FounderProfile?\n  investorProfile InvestorProfile?\n  memberProfile   MemberProfile?\n\n  // Projects & Teams\n  ownedProjects        Project[]       @relation(\"ProjectOwner\")\n  participatedProjects ProjectMember[]\n  ownedTeams           Team[]          @relation(\"TeamOwner\")\n  teamMemberships      TeamMember[]    @relation(\"TeamMemberUser\")\n\n  // Requests & Invitations\n  sentRequests        Request[]    @relation(\"RequestSender\")\n  receivedRequests    Request[]    @relation(\"RequestReceiver\")\n  sentInvitations     Invitation[] @relation(\"InvitationSender\")\n  receivedInvitations Invitation[] @relation(\"InvitationReceiver\")\n\n  // Investments\n  investments Investment[]\n\n  // Reviews & Ratings\n  givenReviews    Review[] @relation(\"ReviewGiver\")\n  receivedReviews Review[] @relation(\"ReviewReceiver\")\n\n  // Messages & Connections\n  sentMessages        Message[]    @relation(\"MessageSender\")\n  receivedMessages    Message[]    @relation(\"MessageReceiver\")\n  connections         Connection[] @relation(\"ConnectionRequester\")\n  receivedConnections Connection[] @relation(\"ConnectionReceiver\")\n\n  // Skills & Interests\n  skills    UserSkill[]\n  interests UserInterest[]\n\n  // Notifications & Settings\n  notifications Notification[]\n  settings      UserSettings?\n\n  // Fixed missing relations\n  verificationRequests VerificationRequest[]\n  projectLikes         ProjectLike[]\n  projectComments      ProjectComment[]\n  activities           UserActivity[]\n  proposals            Proposal[]\n  skillEndorsements    SkillEndorsement[]    @relation(\"SkillEndorser\")\n  proposalComments     ProposalComment[]\n  proposalLikes        ProposalLike[]\n\n  @@map(\"users\")\n}\n\nmodel FounderProfile {\n  id     String @id @default(cuid())\n  userId String @unique @map(\"user_id\")\n\n  // Founder Specific Info\n  companyExperience Int?     @map(\"company_experience\") // years\n  previousExits     String[] @map(\"previous_exits\")\n  linkedinProfile   String?  @map(\"linkedin_profile\")\n\n  // Preferences\n  industryPreferences String[] @map(\"industry_preferences\")\n  locationPreferences String[] @map(\"location_preferences\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"founder_profiles\")\n}\n\nmodel InvestorProfile {\n  id     String @id @default(cuid())\n  userId String @unique @map(\"user_id\")\n\n  // Investor Type & Info\n  investorType    InvestorType @map(\"investor_type\")\n  firmName        String?      @map(\"firm_name\")\n  investmentRange String?      @map(\"investment_range\") // e.g., \"$10K-$100K\"\n  minInvestment   Float?       @map(\"min_investment\")\n  maxInvestment   Float?       @map(\"max_investment\")\n\n  // Investment Preferences\n  preferredStages     ProjectStage[] @map(\"preferred_stages\")\n  preferredIndustries String[]       @map(\"preferred_industries\")\n  geographicFocus     String[]       @map(\"geographic_focus\")\n\n  // Investment Philosophy\n  investmentThesis String?  @map(\"investment_thesis\") @db.Text\n  valueAddServices String[] @map(\"value_add_services\") // mentoring, connections, etc.\n\n  // Track Record\n  portfolioSize    Int?   @default(0) @map(\"portfolio_size\")\n  successfulExits  Int?   @default(0) @map(\"successful_exits\")\n  averageCheckSize Float? @map(\"average_check_size\")\n\n  // Accreditation\n  isAccredited       Boolean @default(false) @map(\"is_accredited\")\n  accreditationProof String? @map(\"accreditation_proof\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"investor_profiles\")\n}\n\nmodel MemberProfile {\n  id     String @id @default(cuid())\n  userId String @unique @map(\"user_id\")\n\n  // Professional Info\n  jobTitle          String? @map(\"job_title\")\n  experience        Int? // years of experience\n  currentSalary     Float?  @map(\"current_salary\")\n  salaryExpectation Float?  @map(\"salary_expectation\")\n\n  // Availability\n  availabilityType AvailabilityType @default(FULL_TIME) @map(\"availability_type\")\n  hoursPerWeek     Int?             @map(\"hours_per_week\")\n  startDate        DateTime?        @map(\"start_date\")\n\n  // Compensation Preferences\n  acceptsEquity       Boolean @default(true) @map(\"accepts_equity\")\n  acceptsCash         Boolean @default(true) @map(\"accepts_cash\")\n  acceptsDeferred     Boolean @default(false) @map(\"accepts_deferred\")\n  minEquityPercentage Float?  @map(\"min_equity_percentage\")\n\n  // Work Preferences\n  remotePreference    RemotePreference @default(HYBRID) @map(\"remote_preference\")\n  rolePreferences     String[]         @map(\"role_preferences\")\n  industryPreferences String[]         @map(\"industry_preferences\")\n\n  // Portfolio & Achievements\n  portfolioUrl String?  @map(\"portfolio_url\")\n  linkedinUrl  String?  @map(\"linkedin_url\")\n  githubUrl    String?  @map(\"github_url\")\n  achievements String[] @db.Text\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"member_profiles\")\n}\n\n// ================================\n// PROJECTS & STARTUPS\n// ================================\n\nmodel Project {\n  id      String @id @default(cuid())\n  ownerId String @map(\"owner_id\")\n\n  // Basic Info\n  name        String\n  description String  @db.Text\n  tagline     String?\n  logo        String?\n  website     String?\n\n  // Project Details\n  stage    ProjectStage?\n  industry String[]\n  tags     String[]\n\n  // Business Model\n  revenueModel    String[] @map(\"revenue_model\")\n  targetMarket    String?  @map(\"target_market\") @db.Text\n  competitiveEdge String?  @map(\"competitive_edge\") @db.Text\n\n  // Funding Info\n  fundingGoal   Float? @map(\"funding_goal\")\n  fundingRaised Float? @default(0) @map(\"funding_raised\")\n  valuationCap  Float? @map(\"valuation_cap\")\n\n  // Team & Hiring\n  teamSize Int     @default(1) @map(\"team_size\")\n  isHiring Boolean @default(false) @map(\"is_hiring\")\n\n  // Project Status\n  status     ProjectStatus @default(DRAFT)\n  isActive   Boolean       @default(true) @map(\"is_active\")\n  isPublic   Boolean       @default(true) @map(\"is_public\")\n  isFeatured Boolean       @default(false) @map(\"is_featured\")\n\n  // Location & Remote\n  location         String?\n  isRemoteFriendly Boolean @default(true) @map(\"is_remote_friendly\")\n\n  // Media & Documents\n  attachments Attachment[] @relation(\"ProjectAttachments\")\n\n  // Metrics\n  viewCount Int @default(0) @map(\"view_count\")\n  likeCount Int @default(0) @map(\"like_count\")\n\n  // Timestamps\n  createdAt  DateTime  @default(now()) @map(\"created_at\")\n  updatedAt  DateTime  @updatedAt @map(\"updated_at\")\n  launchedAt DateTime? @map(\"launched_at\")\n\n  // Relationships\n  owner       User               @relation(\"ProjectOwner\", fields: [ownerId], references: [id], onDelete: Cascade)\n  members     ProjectMember[]\n  teams       ProjectTeam[]\n  investments Investment[]\n  requests    Request[]\n  invitations Invitation[]\n  likes       ProjectLike[]\n  comments    ProjectComment[]\n  analytics   ProjectAnalytics[]\n  reviews     Review[]\n  proposals   Proposal[]\n\n  @@map(\"projects\")\n}\n\nmodel ProjectMember {\n  id        String @id @default(cuid())\n  projectId String @map(\"project_id\")\n  userId    String @map(\"user_id\")\n\n  // Role & Permissions\n  role        String\n  title       String?\n  permissions Permission[]\n  isCoFounder Boolean      @default(false) @map(\"is_cofounder\")\n  isInvestor  Boolean      @default(false) @map(\"is_investor\")\n  isMember    Boolean      @default(false) @map(\"is_member\")\n\n  // Compensation\n  compensationType   CompensationType @map(\"compensation_type\")\n  salaryAmount       Float?           @map(\"salary_amount\")\n  equityPercentage   Float?           @map(\"equity_percentage\")\n  profitSharePercent Float?           @map(\"profit_share_percent\")\n\n  // Status\n  status   MemberStatus @default(ACTIVE)\n  joinedAt DateTime     @default(now()) @map(\"joined_at\")\n  leftAt   DateTime?    @map(\"left_at\")\n\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, userId])\n  @@map(\"project_members\")\n}\n\nmodel Team {\n  id      String @id @default(cuid())\n  ownerId String @map(\"owner_id\")\n\n  // Basic Info\n  name        String\n  description String  @db.Text\n  avatar      String?\n\n  // Team Details\n  teamType TeamType\n  industry String[]\n  skills   String[]\n\n  // Team Status\n  status   TeamStatus @default(DRAFT)\n  isActive Boolean    @default(true) @map(\"is_active\")\n  isHiring Boolean    @default(false) @map(\"is_hiring\")\n  size     Int        @default(1)\n  maxSize  Int?       @map(\"max_size\")\n\n  // Location\n  location String?\n  isRemote Boolean @default(true) @map(\"is_remote\")\n\n  // Timestamps\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relationships\n  owner       User          @relation(\"TeamOwner\", fields: [ownerId], references: [id], onDelete: Cascade)\n  members     TeamMember[]  @relation(\"TeamMemberTeam\")\n  projects    ProjectTeam[]\n  Requests    Request[]\n  invitations Invitation[]\n  attachments Attachment[]  @relation(\"TeamAttachments\")\n  reviews     Review[]\n\n  @@map(\"teams\")\n}\n\nmodel TeamMember {\n  id     String @id @default(cuid())\n  teamId String @map(\"team_id\")\n  userId String @map(\"user_id\")\n\n  // Role & Status\n  role        String\n  title       String?\n  status      MemberStatus @default(ACTIVE)\n  permissions Permission[]\n\n  // Compensation (for team-based work)\n  compensationType CompensationType? @map(\"compensation_type\")\n  salaryAmount     Float?            @map(\"salary_amount\")\n  equityPercentage Float?            @map(\"equity_percentage\")\n  hourlyRate       Float?            @map(\"hourly_rate\")\n\n  // Timestamps\n  joinedAt DateTime  @default(now()) @map(\"joined_at\")\n  leftAt   DateTime? @map(\"left_at\")\n\n  team Team @relation(\"TeamMemberTeam\", fields: [teamId], references: [id], onDelete: Cascade)\n  user User @relation(\"TeamMemberUser\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([teamId, userId])\n  @@map(\"team_members\")\n}\n\nmodel ProjectTeam {\n  id        String @id @default(cuid())\n  projectId String @map(\"project_id\")\n  teamId    String @map(\"team_id\")\n\n  role       String\n  status     String   @default(\"active\")\n  assignedAt DateTime @default(now()) @map(\"assigned_at\")\n\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  team    Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, teamId])\n  @@map(\"project_teams\")\n}\n\n// ================================\n// INVESTMENTS & FUNDING\n// ================================\n\nmodel Investment {\n  id         String @id @default(cuid())\n  investorId String @map(\"investor_id\")\n  projectId  String @map(\"project_id\")\n\n  // Investment Details\n  amount         Float\n  investmentType InvestmentType @map(\"investment_type\")\n  equityPercent  Float?         @map(\"equity_percent\")\n  valuation      Float?\n\n  // Terms\n  liquidationPref Float?  @default(1) @map(\"liquidation_pref\")\n  antidilution    Boolean @default(false)\n  boardSeat       Boolean @default(false) @map(\"board_seat\")\n\n  // Status & Stages\n  status InvestmentStatus @default(PROPOSED)\n  stage  InvestmentStage  @default(INITIAL)\n\n  // Due Diligence\n  dueDiligenceCompleted Boolean @default(false) @map(\"due_diligence_completed\")\n  legalDocsComplete     Boolean @default(false) @map(\"legal_docs_complete\")\n\n  // Timeline\n  proposedAt  DateTime  @default(now()) @map(\"proposed_at\")\n  acceptedAt  DateTime? @map(\"accepted_at\")\n  completedAt DateTime? @map(\"completed_at\")\n\n  // Documents\n  attachments Attachment[] @relation(\"InvestmentAttachments\")\n\n  // Notes\n  notes String? @db.Text\n\n  investor User    @relation(fields: [investorId], references: [id], onDelete: Cascade)\n  project  Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@map(\"investments\")\n}\n\n// ================================\n// Request & INVITATION SYSTEM\n// ================================\n\nmodel Request {\n  id         String @id @default(cuid())\n  senderId   String @map(\"sender_id\")\n  receiverId String @map(\"receiver_id\")\n\n  // Request Target\n  targetType  RequestTargetType @map(\"target_type\")\n  projectId   String?           @map(\"project_id\")\n  teamId      String?           @map(\"team_id\")\n  proposalId  String?           @map(\"proposal_id\")\n  roleApplied RoleType?         @map(\"role_applied\")\n\n  // Request Details\n  role          String?\n  message       String  @db.Text\n  proposedTerms Json?   @map(\"proposed_terms\")\n\n  // Status\n  status RequestStatus @default(PENDING)\n\n  // Response\n  response    String?   @db.Text\n  respondedAt DateTime? @map(\"responded_at\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  sender   User      @relation(\"RequestSender\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiver User      @relation(\"RequestReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  project  Project?  @relation(fields: [projectId], references: [id])\n  team     Team?     @relation(fields: [teamId], references: [id])\n  proposal Proposal? @relation(fields: [proposalId], references: [id])\n\n  @@map(\"requests\")\n}\n\nmodel Invitation {\n  id         String @id @default(cuid())\n  senderId   String @map(\"sender_id\")\n  receiverId String @map(\"receiver_id\")\n\n  // Invitation Target\n  targetType RequestTargetType @map(\"target_type\")\n  projectId  String?           @map(\"project_id\")\n  teamId     String?           @map(\"team_id\")\n\n  // Invitation Details\n  role    String?\n  message String  @db.Text\n  terms   Json?\n\n  // Status\n  status    RequestStatus @default(PENDING)\n  expiresAt DateTime?     @map(\"expires_at\")\n\n  // Response\n  response    String?   @db.Text\n  respondedAt DateTime? @map(\"responded_at\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  sender   User     @relation(\"InvitationSender\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiver User     @relation(\"InvitationReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  project  Project? @relation(fields: [projectId], references: [id])\n  team     Team?    @relation(fields: [teamId], references: [id])\n\n  @@map(\"invitations\")\n}\n\n// ================================\n// CREDIBILITY & REVIEW SYSTEM\n// ================================\n\nmodel Review {\n  id         String @id @default(cuid())\n  giverId    String @map(\"giver_id\")\n  receiverId String @map(\"receiver_id\")\n\n  // Review Context\n  contextType ReviewContextType @map(\"context_type\")\n  projectId   String?           @map(\"project_id\")\n  teamId      String?           @map(\"team_id\")\n  proposalId  String?           @map(\"proposal_id\")\n\n  // Review Content\n  rating  Int // 1-5 stars\n  title   String?\n  content String  @db.Text\n\n  // Review Categories\n  workQuality     Int? @map(\"work_quality\") // 1-5\n  communication   Int? // 1-5\n  reliability     Int? // 1-5\n  leadership      Int? // 1-5\n  technicalSkills Int? @map(\"technical_skills\") // 1-5\n\n  // Status\n  isVerified Boolean @default(false) @map(\"is_verified\")\n  isPublic   Boolean @default(true) @map(\"is_public\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  giver    User      @relation(\"ReviewGiver\", fields: [giverId], references: [id], onDelete: Cascade)\n  receiver User      @relation(\"ReviewReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n  project  Project?  @relation(fields: [projectId], references: [id])\n  team     Team?     @relation(fields: [teamId], references: [id])\n  proposal Proposal? @relation(fields: [proposalId], references: [id])\n\n  @@unique([giverId, receiverId, contextType, projectId, teamId, proposalId])\n  @@map(\"reviews\")\n}\n\nmodel VerificationRequest {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  // Verification Type\n  type VerificationType\n\n  // Documents & Proof\n  attachments     Attachment[] @relation(\"VerificationAttachments\")\n  linkedinProfile String?      @map(\"linkedin_profile\")\n  websiteUrl      String?      @map(\"website_url\")\n  companyEmail    String?      @map(\"company_email\")\n\n  // Status\n  status          VerificationStatus @default(PENDING)\n  reviewedBy      String?            @map(\"reviewed_by\")\n  reviewedAt      DateTime?          @map(\"reviewed_at\")\n  rejectionReason String?            @map(\"rejection_reason\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"verification_requests\")\n}\n\n// ================================\n// SKILLS & INTERESTS\n// ================================\n\nmodel Skill {\n  id          String  @id @default(cuid())\n  name        String  @unique\n  category    String\n  description String?\n\n  userSkills UserSkill[]\n\n  @@map(\"skills\")\n}\n\nmodel UserSkill {\n  id      String @id @default(cuid())\n  userId  String @map(\"user_id\")\n  skillId String @map(\"skill_id\")\n\n  proficiency ProficiencyLevel\n  yearsOfExp  Int?             @map(\"years_of_exp\")\n  isVerified  Boolean          @default(false) @map(\"is_verified\")\n\n  endorsements SkillEndorsement[]\n\n  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  skill Skill @relation(fields: [skillId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, skillId])\n  @@map(\"user_skills\")\n}\n\nmodel SkillEndorsement {\n  id          String @id @default(cuid())\n  userSkillId String @map(\"user_skill_id\")\n  endorserId  String @map(\"endorser_id\")\n\n  comment   String?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  userSkill UserSkill @relation(fields: [userSkillId], references: [id], onDelete: Cascade)\n  endorser  User      @relation(\"SkillEndorser\", fields: [endorserId], references: [id], onDelete: Cascade)\n\n  @@unique([userSkillId, endorserId])\n  @@map(\"skill_endorsements\")\n}\n\nmodel Interest {\n  id          String  @id @default(cuid())\n  name        String  @unique\n  category    String\n  description String?\n\n  userInterests UserInterest[]\n\n  @@map(\"interests\")\n}\n\nmodel UserInterest {\n  id         String @id @default(cuid())\n  userId     String @map(\"user_id\")\n  interestId String @map(\"interest_id\")\n\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  interest Interest @relation(fields: [interestId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, interestId])\n  @@map(\"user_interests\")\n}\n\n// ================================\n// COMMUNICATION & NETWORKING\n// ================================\n\nmodel Connection {\n  id          String @id @default(cuid())\n  requesterId String @map(\"requester_id\")\n  receiverId  String @map(\"receiver_id\")\n\n  status  ConnectionStatus @default(PENDING)\n  message String?          @db.Text\n\n  requestedAt DateTime  @default(now()) @map(\"requested_at\")\n  acceptedAt  DateTime? @map(\"accepted_at\")\n\n  requester User @relation(\"ConnectionRequester\", fields: [requesterId], references: [id], onDelete: Cascade)\n  receiver  User @relation(\"ConnectionReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  @@unique([requesterId, receiverId])\n  @@map(\"connections\")\n}\n\nmodel Message {\n  id         String @id @default(cuid())\n  senderId   String @map(\"sender_id\")\n  receiverId String @map(\"receiver_id\")\n\n  content String    @db.Text\n  isRead  Boolean   @default(false) @map(\"is_read\")\n  readAt  DateTime? @map(\"read_at\")\n\n  // Attachments\n  attachments String[]\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  sender   User @relation(\"MessageSender\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiver User @relation(\"MessageReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  @@map(\"messages\")\n}\n\n// ================================\n// ENGAGEMENT & SOCIAL FEATURES\n// ================================\n\nmodel ProjectLike {\n  id        String @id @default(cuid())\n  userId    String @map(\"user_id\")\n  projectId String @map(\"project_id\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, projectId])\n  @@map(\"project_likes\")\n}\n\nmodel ProjectComment {\n  id        String @id @default(cuid())\n  userId    String @map(\"user_id\")\n  projectId String @map(\"project_id\")\n\n  content   String   @db.Text\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@map(\"project_comments\")\n}\n\nmodel ProposalComment {\n  id         String   @id @default(cuid())\n  userId     String   @map(\"user_id\")\n  proposalId String   @map(\"proposal_id\")\n  content    String   @db.Text\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  proposal Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@map(\"proposal_comments\")\n}\n\nmodel ProposalLike {\n  id         String   @id @default(cuid())\n  userId     String   @map(\"user_id\")\n  proposalId String   @map(\"proposal_id\")\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  proposal Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, proposalId])\n  @@map(\"proposal_likes\")\n}\n\n// ================================\n// NOTIFICATIONS & SETTINGS\n// ================================\n\nmodel Notification {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  type    NotificationType\n  title   String\n  content String           @db.Text\n\n  // Related entities\n  relatedId   String? @map(\"related_id\") // ID of related entity (project, team, etc.)\n  relatedType String? @map(\"related_type\") // Type of related entity\n\n  isRead Boolean   @default(false) @map(\"is_read\")\n  readAt DateTime? @map(\"read_at\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notifications\")\n}\n\nmodel UserSettings {\n  id     String @id @default(cuid())\n  userId String @unique @map(\"user_id\")\n\n  // Privacy Settings\n  profileVisibility ProfileVisibility @default(PUBLIC) @map(\"profile_visibility\")\n  showEmail         Boolean           @default(false) @map(\"show_email\")\n  showPhone         Boolean           @default(false) @map(\"show_phone\")\n  allowMessages     Boolean           @default(true) @map(\"allow_messages\")\n  allowConnections  Boolean           @default(true) @map(\"allow_connections\")\n\n  // Notification Preferences\n  emailNotifications Boolean @default(true) @map(\"email_notifications\")\n  pushNotifications  Boolean @default(true) @map(\"push_notifications\")\n\n  // Specific Email Notifications\n  newRequestEmail       Boolean @default(true) @map(\"new_request_email\")\n  newInvitationEmail    Boolean @default(true) @map(\"new_invitation_email\")\n  newMessageEmail       Boolean @default(true) @map(\"new_message_email\")\n  projectUpdateEmail    Boolean @default(true) @map(\"project_update_email\")\n  investmentUpdateEmail Boolean @default(true) @map(\"investment_update_email\")\n  newConnectionEmail    Boolean @default(true) @map(\"new_connection_email\")\n  weeklyDigestEmail     Boolean @default(true) @map(\"weekly_digest_email\")\n  marketingEmails       Boolean @default(false) @map(\"marketing_emails\")\n\n  // Discovery Settings\n  showInSearch          Boolean @default(true) @map(\"show_in_search\")\n  showInRecommendations Boolean @default(true) @map(\"show_in_recommendations\")\n\n  // Theme & Display\n  theme    String @default(\"system\") // light, dark, system\n  language String @default(\"en\")\n  timezone String @default(\"UTC\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_settings\")\n}\n\n// ================================\n// ANALYTICS & TRACKING\n// ================================\n\nmodel UserActivity {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  action    ActivityType\n  details   Json?\n  ipAddress String?      @map(\"ip_address\")\n  userAgent String?      @map(\"user_agent\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_activities\")\n}\n\nmodel ProjectAnalytics {\n  id        String @id @default(cuid())\n  projectId String @map(\"project_id\")\n\n  // View metrics\n  viewCount   Int @default(0) @map(\"view_count\")\n  uniqueViews Int @default(0) @map(\"unique_views\")\n\n  // Engagement metrics\n  likeCount    Int @default(0) @map(\"like_count\")\n  commentCount Int @default(0) @map(\"comment_count\")\n  shareCount   Int @default(0) @map(\"share_count\")\n\n  // Request metrics\n  RequestCount Int @default(0) @map(\"request_count\")\n  acceptedApps Int @default(0) @map(\"accepted_apps\")\n\n  // Investment metrics\n  investmentRequests Int   @default(0) @map(\"investment_requests\")\n  totalFunding       Float @default(0) @map(\"total_funding\")\n\n  // Time-based metrics\n  date DateTime @default(now())\n\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, date])\n  @@map(\"project_analytics\")\n}\n\n// ================================\n// VERIFICATION\n// ================================\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n  @@map(\"verification_tokens\")\n}\n\n// ================================\n// PROPOSALS\n// ================================\n\nmodel Proposal {\n  id        String @id @default(cuid())\n  userId    String @map(\"user_id\")\n  createdBy String @db.VarChar(255)\n\n  category ProposalType\n  intent   ProposalIntent // NEW field\n\n  projectId String? @map(\"project_id\")\n  teamId    String? @map(\"team_id\")\n\n  title        String @db.VarChar(200)\n  shortSummary String @db.VarChar(500)\n  detailedDesc String @db.Text\n\n  industry String[]\n  keywords String[]\n\n  location    Location?\n  timeline    Timeline?\n  attachments Attachment[]\n  contact     Contact?\n\n  status ProposalStatus @default(DRAFT)\n\n  // New fields for better discovery and filtering\n  budget     Budget?\n  visibility Visibility @default(PUBLIC)\n  featured   Boolean    @default(false)\n  views      Int        @default(0)\n  bookmarks  Int        @default(0)\n\n  // SEO and searchability\n  slug            String?\n  metaDescription String?  @db.VarChar(160)\n  tags            String[]\n\n  // Internationalization\n  language String  @default(\"en\") @db.VarChar(5)\n  currency String  @default(\"USD\") @db.VarChar(3)\n  timezone String? @db.VarChar(50)\n\n  // Relations to category-specific models\n  investor  InvestorProposal?\n  mentor    MentorProposal?\n  team      TeamProposal?\n  cofounder CoFounderProposal?\n  partner   PartnerProposal?\n  customer  CustomerProposal?\n\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  updatedAt DateTime  @updatedAt @map(\"updated_at\")\n  expiresAt DateTime?\n\n  metadata Json?\n\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  project Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  Requests Request[]\n  reviews  Review[]\n  comments ProposalComment[]\n  likes    ProposalLike[]\n\n  searchVector Unsupported(\"tsvector\")?\n\n  @@index([userId])\n  @@index([projectId])\n  @@index([teamId])\n  @@index([category, intent, status, createdAt]) // <- added intent to index\n  @@index([industry])\n  @@index([slug])\n  @@map(\"proposals\")\n}\n\nmodel Attachment {\n  id String @id @default(cuid())\n\n  // Relations - one attachment can belong to different entities\n  proposalId            String? @map(\"proposal_id\")\n  projectId             String? @map(\"project_id\")\n  teamId                String? @map(\"team_id\")\n  investmentId          String? @map(\"investment_id\")\n  verificationRequestId String? @map(\"verification_request_id\")\n\n  filename String @db.VarChar(255)\n  url      String @db.Text\n  mimeType String @db.VarChar(100)\n  size     Int\n\n  // File classification\n  type        AttachmentType\n  description String?        @db.VarChar(500)\n  language    String?        @db.VarChar(5)\n\n  // Versioning & metadata\n  version   Int     @default(1)\n  isPrimary Boolean @default(false)\n  checksum  String? @db.VarChar(64)\n\n  // Tracking\n  views     Int @default(0)\n  downloads Int @default(0)\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  proposal            Proposal?            @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  project             Project?             @relation(\"ProjectAttachments\", fields: [projectId], references: [id], onDelete: Cascade)\n  team                Team?                @relation(\"TeamAttachments\", fields: [teamId], references: [id], onDelete: Cascade)\n  investment          Investment?          @relation(\"InvestmentAttachments\", fields: [investmentId], references: [id], onDelete: Cascade)\n  verificationRequest VerificationRequest? @relation(\"VerificationAttachments\", fields: [verificationRequestId], references: [id], onDelete: Cascade)\n\n  @@index([proposalId])\n  @@index([type])\n  @@map(\"attachments\")\n}\n\nenum AttachmentType {\n  DOCUMENT\n  IMAGE\n  VIDEO\n  AUDIO\n  LINK\n  OTHER\n}\n\nenum Visibility {\n  PUBLIC\n  PRIVATE\n  MEMBERS_ONLY\n}\n\nmodel Budget {\n  id          String   @id @default(cuid())\n  minAmount   Float?\n  maxAmount   Float?\n  currency    String   @default(\"USD\") @db.VarChar(3)\n  description String?  @db.Text\n  proposal    Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId  String   @unique @map(\"proposal_id\")\n\n  @@map(\"budgets\")\n}\n\nmodel Location {\n  id           String   @id @default(cuid())\n  country      String   @db.VarChar(100)\n  countryCode  String   @db.VarChar(2)\n  region       String?  @db.VarChar(100)\n  city         String?  @db.VarChar(100)\n  remote       Boolean  @default(false)\n  hybrid       Boolean  @default(false)\n  willRelocate Boolean  @default(false)\n  timeZones    String[]\n  proposal     Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId   String   @unique @map(\"proposal_id\")\n\n  @@map(\"locations\")\n}\n\nmodel Timeline {\n  id           String     @id @default(cuid())\n  startDate    DateTime?\n  endDate      DateTime?\n  duration     String?\n  commitment   Commitment\n  availability String?\n  urgency      Urgency    @default(MEDIUM)\n  proposal     Proposal   @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId   String     @unique @map(\"proposal_id\")\n\n  @@map(\"timelines\")\n}\n\nenum Urgency {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nmodel Contact {\n  id               String        @id @default(cuid())\n  name             String        @db.VarChar(100)\n  email            String        @db.VarChar(255)\n  phone            String?       @db.VarChar(20)\n  website          String?       @db.VarChar(255)\n  linkedin         String?       @db.VarChar(255)\n  twitter          String?       @db.VarChar(255)\n  github           String?       @db.VarChar(255)\n  telegram         String?       @db.VarChar(100)\n  discord          String?       @db.VarChar(100)\n  preferredContact ContactMethod @default(EMAIL) @map(\"preferred_contact\")\n  publicProfile    Boolean       @default(true) @map(\"public_profile\")\n  proposal         Proposal      @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId       String        @unique @map(\"proposal_id\")\n\n  @@map(\"contacts\")\n}\n\nenum ContactMethod {\n  EMAIL\n  PHONE\n  LINKEDIN\n  TELEGRAM\n  DISCORD\n}\n\n// INVESTOR PROPOSALS\nmodel InvestorProposal {\n  id               String        @id @default(cuid())\n  fundingNeeded    Float?        @map(\"funding_needed\")\n  fundingType      FundingType?  @map(\"funding_type\")\n  stage            StartupStage? @map(\"startup_stage\")\n  currentRevenue   Float?        @map(\"current_revenue\")\n  projectedRevenue Float?        @map(\"projected_revenue\")\n  customers        Int?\n  monthlyUsers     Int?          @map(\"monthly_users\")\n  growthRate       Float?        @map(\"growth_rate\")\n  useOfFunds       String?       @map(\"use_of_funds\") @db.Text\n\n  // Traction metrics\n  keyMetrics      Json?     @map(\"key_metrics\")\n  teamSize        Int?      @map(\"team_size\")\n  foundedDate     DateTime? @map(\"founded_date\")\n  previousFunding Float?    @map(\"previous_funding\")\n\n  // What they offer to investors\n  equityOffered Float?  @map(\"equity_offered\")\n  boardSeat     Boolean @default(false) @map(\"board_seat\")\n  expectedROI   Float?  @map(\"expected_roi\")\n  exitStrategy  String? @map(\"exit_strategy\") @db.Text\n\n  // Requirements\n  minInvestment Float?         @map(\"min_investment\")\n  maxInvestment Float?         @map(\"max_investment\")\n  investorKind  InvestorKind[] @map(\"investor_kind\")\n\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId String   @unique @map(\"proposal_id\")\n\n  @@map(\"investor_proposals\")\n}\n\nenum InvestorKind {\n  ANGEL\n  VC\n  STRATEGIC\n  CROWDFUNDING\n  GOVERNMENT\n  FAMILY_OFFICE\n}\n\n// MENTOR PROPOSALS\nmodel MentorProposal {\n  id                String          @id @default(cuid())\n  seekingOrOffering MentorDirection @map(\"seeking_or_offering\")\n\n  // For those seeking mentors\n  guidanceAreas      String[]      @map(\"guidance_areas\")\n  specificChallenges String?       @map(\"specific_challenges\") @db.Text\n  currentStage       StartupStage? @map(\"current_stage\")\n  preferredMentorBg  String[]      @map(\"preferred_mentor_bg\")\n\n  // For those offering mentoring\n  expertiseAreas   String[] @map(\"expertise_areas\")\n  yearsExperience  Int?     @map(\"years_experience\")\n  industriesServed String[] @map(\"industries_served\")\n  successStories   String?  @map(\"success_stories\") @db.Text\n  menteesCriteria  String?  @map(\"mentees_criteria\") @db.Text\n\n  // Common fields\n  preferredEngage  EngagementType?    @map(\"preferred_engage\")\n  sessionFrequency String?            @map(\"session_frequency\")\n  compensationExp  MentorCompensation @default(FREE) @map(\"compensation_exp\")\n\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId String   @unique @map(\"proposal_id\")\n\n  @@map(\"mentor_proposals\")\n}\n\nenum MentorDirection {\n  SEEKING_MENTOR\n  OFFERING_MENTORSHIP\n}\n\nenum MentorCompensation {\n  FREE\n  EQUITY\n  ADVISORY_SHARES\n  PAID\n  BARTER\n}\n\n// TEAM PROPOSALS\nmodel TeamProposal {\n  id              String        @id @default(cuid())\n  hiringOrSeeking TeamDirection @map(\"hiring_or_seeking\")\n\n  // Job/Role details\n  roleTitle  String          @map(\"role_title\") @db.VarChar(100)\n  department String?         @db.VarChar(50)\n  seniority  SeniorityLevel? @map(\"seniority_level\")\n\n  // Skills and requirements\n  mustHaveSkills    String[] @map(\"must_have_skills\")\n  niceToHaveSkills  String[] @map(\"nice_to_have_skills\")\n  certifications    String[]\n  languagesRequired String[] @map(\"languages_required\")\n\n  // Work arrangement\n  workArrangement WorkArrangement   @default(HYBRID) @map(\"work_arrangement\")\n  compensation    CompensationType? @map(\"compensation_type\")\n  salaryRange     Json?             @map(\"salary_range\")\n  benefits        String[]\n\n  // Company/Team info\n  companySize  CompanySize?  @map(\"company_size\")\n  companyStage StartupStage? @map(\"company_stage\")\n  teamCulture  String?       @map(\"team_culture\") @db.Text\n\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId String   @unique @map(\"proposal_id\")\n\n  @@map(\"team_proposals\")\n}\n\nenum TeamDirection {\n  HIRING\n  SEEKING_POSITION\n}\n\nenum WorkArrangement {\n  REMOTE\n  ONSITE\n  HYBRID\n}\n\nenum SeniorityLevel {\n  INTERN\n  JUNIOR\n  MID_LEVEL\n  SENIOR\n  LEAD\n  PRINCIPAL\n  DIRECTOR\n  VP\n  C_LEVEL\n}\n\nenum CompanySize {\n  STARTUP_1_10\n  SMALL_11_50\n  MEDIUM_51_200\n  LARGE_201_1000\n  ENTERPRISE_1000_PLUS\n}\n\n// COFOUNDER PROPOSALS\nmodel CoFounderProposal {\n  id                String             @id @default(cuid())\n  seekingOrOffering CofounderDirection @map(\"seeking_or_offering\")\n\n  // Role and responsibilities\n  roleTitle           String   @map(\"role_title\") @db.VarChar(100)\n  keyResponsibilities String[] @map(\"key_responsibilities\")\n  decisionAreas       String[] @map(\"decision_areas\")\n\n  // Equity and commitment\n  equityOffered   Float?  @map(\"equity_offered\")\n  equityExpected  Float?  @map(\"equity_expected\")\n  vestingSchedule String? @map(\"vesting_schedule\")\n  timeCommitment  String  @map(\"time_commitment\")\n\n  // Requirements and preferences\n  requiredSkills      String[] @map(\"required_skills\")\n  preferredBackground String[] @map(\"preferred_background\")\n  mustHaveExperience  String[] @map(\"must_have_experience\")\n  personalityTraits   String[] @map(\"personality_traits\")\n\n  // Business details\n  businessStage   StartupStage? @map(\"business_stage\")\n  currentTeamSize Int?          @map(\"current_team_size\")\n  businessModel   String?       @map(\"business_model\") @db.Text\n  targetMarket    String?       @map(\"target_market\") @db.Text\n\n  // Culture and values\n  workStyle          String?  @map(\"work_style\") @db.Text\n  companyValues      String[] @map(\"company_values\")\n  conflictResolution String?  @map(\"conflict_resolution\") @db.Text\n\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId String   @unique @map(\"proposal_id\")\n\n  @@map(\"cofounder_proposals\")\n}\n\nenum CofounderDirection {\n  SEEKING_COFOUNDER\n  OFFERING_COFOUNDING\n}\n\n// PARTNER PROPOSALS  \nmodel PartnerProposal {\n  id                String           @id @default(cuid())\n  seekingOrOffering PartnerDirection @map(\"seeking_or_offering\")\n  partnershipType   PartnershipType  @map(\"partnership_type\")\n\n  // Value proposition\n  valueOffered   String   @map(\"value_offered\") @db.Text\n  valueExpected  String   @map(\"value_expected\") @db.Text\n  mutualBenefits String[] @map(\"mutual_benefits\")\n\n  // Partnership details\n  partnershipModel PartnershipModel?    @map(\"partnership_model\")\n  revenueSharing   Float?               @map(\"revenue_sharing\")\n  exclusivity      ExclusivityType      @default(NON_EXCLUSIVE)\n  duration         PartnershipDuration? @map(\"partnership_duration\")\n\n  // Requirements\n  partnerCriteria     String?  @map(\"partner_criteria\") @db.Text\n  minimumRequirements String[] @map(\"minimum_requirements\")\n  idealPartnerProfile String?  @map(\"ideal_partner_profile\") @db.Text\n\n  // Business context\n  currentPartners Int?     @map(\"current_partners\")\n  marketReach     String[] @map(\"market_reach\")\n  customerBase    Int?     @map(\"customer_base\")\n  annualRevenue   Float?   @map(\"annual_revenue\")\n\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId String   @unique @map(\"proposal_id\")\n\n  @@map(\"partner_proposals\")\n}\n\nenum PartnerDirection {\n  SEEKING_PARTNER\n  OFFERING_PARTNERSHIP\n}\n\nenum PartnershipModel {\n  REVENUE_SHARE\n  FIXED_FEE\n  COMMISSION_BASED\n  EQUITY_BASED\n  BARTER\n  JOINT_VENTURE\n}\n\nenum ExclusivityType {\n  EXCLUSIVE\n  NON_EXCLUSIVE\n  SEMI_EXCLUSIVE\n}\n\n// CUSTOMER PROPOSALS\nmodel CustomerProposal {\n  id              String            @id @default(cuid())\n  sellingOrBuying CustomerDirection @map(\"selling_or_buying\")\n\n  // Product/Service details\n  productService String  @map(\"product_service\") @db.VarChar(200)\n  category       String? @db.VarChar(100)\n  description    String  @db.Text\n\n  // Pricing and availability\n  pricingModel PricingModel? @map(\"pricing_model\")\n  priceRange   Json?         @map(\"price_range\")\n  availability Availability?\n  deliveryTime String?       @map(\"delivery_time\")\n\n  // Target market (for sellers) or requirements (for buyers)\n  targetAudience    String?  @map(\"target_audience\") @db.Text\n  customerBenefits  String[] @map(\"customer_benefits\")\n  uniqueSellingProp String?  @map(\"unique_selling_prop\") @db.Text\n\n  // For buyers\n  requirements     String[]\n  budgetRange      Json?    @map(\"budget_range\")\n  decisionCriteria String[] @map(\"decision_criteria\")\n  timeframe        String?\n\n  // Business context\n  marketSize      String?  @map(\"market_size\")\n  competitors     String[]\n  previousClients Int?     @map(\"previous_clients\")\n  testimonials    String?  @db.Text\n\n  // Support and terms\n  supportIncluded String[] @map(\"support_included\")\n  warrantyTerms   String?  @map(\"warranty_terms\") @db.Text\n  paymentTerms    String?  @map(\"payment_terms\") @db.VarChar(100)\n\n  proposal   Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)\n  proposalId String   @unique @map(\"proposal_id\")\n\n  @@map(\"customer_proposals\")\n}\n\nenum CustomerDirection {\n  SELLING\n  BUYING\n}\n\n// ================================\n// ENUMS\n// ================================\n\nenum UserType {\n  FOUNDER\n  INVESTOR\n  MEMBER\n  HYBRID\n}\n\nenum VerificationLevel {\n  UNVERIFIED\n  EMAIL_VERIFIED\n  PHONE_VERIFIED\n  IDENTITY_VERIFIED\n  BUSINESS_VERIFIED\n  PREMIUM_VERIFIED\n}\n\nenum InvestorType {\n  ANGEL\n  VC_FUND\n  FAMILY_OFFICE\n  CORPORATE_VC\n  CROWDFUNDING\n  GOVERNMENT\n  OTHER\n}\n\nenum Commitment {\n  PART_TIME\n  FULL_TIME\n  CONTRACT\n  FLEXIBLE\n}\n\nenum FundingType {\n  EQUITY\n  DEBT\n  GRANT\n  SAFE\n  CONVERTIBLE_NOTE\n  REVENUE_SHARE\n}\n\nenum StartupStage {\n  IDEA\n  MVP\n  BETA\n  LAUNCHED\n  GROWTH\n  SCALE\n}\n\nenum EngagementType {\n  ONE_OFF\n  ONGOING\n  MENTORSHIP\n  CONSULTING\n}\n\nenum PartnershipType {\n  STRATEGIC\n  TECHNOLOGY\n  DISTRIBUTION\n  MARKETING\n  JOINT_VENTURE\n}\n\nenum PartnershipDuration {\n  SHORT_TERM\n  MID_TERM\n  LONG_TERM\n}\n\nenum PricingModel {\n  FIXED\n  HOURLY\n  SUBSCRIPTION\n  TIERED\n  USAGE_BASED\n}\n\nenum Availability {\n  IMMEDIATE\n  WITHIN_WEEK\n  WITHIN_MONTH\n  NEGOTIABLE\n}\n\nenum ProjectStage {\n  IDEA\n  MVP\n  BETA\n  LAUNCHED\n  GROWTH\n  SCALE\n  EXIT\n}\n\nenum TeamType {\n  DEVELOPMENT\n  MARKETING\n  SALES\n  DESIGN\n  ADVISORY\n  GENERAL\n}\n\nenum CompensationType {\n  CASH_ONLY\n  EQUITY_ONLY\n  CASH_AND_EQUITY\n  DEFERRED_CASH\n  PROFIT_SHARING\n  HOURLY_RATE\n  PROJECT_BASED\n  REVENUE_SHARE\n}\n\nenum MemberStatus {\n  ACTIVE\n  INACTIVE\n  ON_LEAVE\n  TERMINATED\n}\n\nenum AvailabilityType {\n  FULL_TIME\n  PART_TIME\n  CONTRACT\n  CONSULTANT\n  INTERN\n}\n\nenum RemotePreference {\n  REMOTE_ONLY\n  HYBRID\n  ON_SITE\n  FLEXIBLE\n}\n\nenum InvestmentType {\n  EQUITY\n  CONVERTIBLE_NOTE\n  SAFE\n  DEBT\n  REVENUE_SHARE\n  GRANT\n}\n\nenum InvestmentStatus {\n  PROPOSED\n  UNDER_REVIEW\n  DUE_DILIGENCE\n  ACCEPTED\n  COMPLETED\n  REJECTED\n  CANCELLED\n}\n\nenum InvestmentStage {\n  INITIAL\n  SERIES_A\n  SERIES_B\n  SERIES_C\n  BRIDGE\n  MEZZANINE\n}\n\nenum ProposalType {\n  INVESTMENT\n  MENTORSHIP\n  TEAM\n  COFOUNDER\n  PARTNERSHIP\n  CUSTOMER\n}\n\nenum RoleType {\n  INVESTOR\n  MENTOR\n  TEAM\n  COFOUNDER\n  PARTNER\n  CUSTOMER\n}\n\nenum ProposalStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum ProjectStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum TeamStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum RequestTargetType {\n  PROJECT\n  TEAM\n  INVESTMENT\n  COLLABORATION\n}\n\nenum RequestStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n  WITHDRAWN\n  EXPIRED\n}\n\nenum ReviewContextType {\n  PROJECT\n  TEAM\n  INVESTMENT\n  GENERAL\n  PROPOSAL\n}\n\nenum VerificationType {\n  IDENTITY\n  EDUCATION\n  WORK_EXPERIENCE\n  COMPANY\n  INVESTOR_ACCREDITATION\n  TECHNICAL_SKILLS\n}\n\nenum VerificationStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  EXPIRED\n}\n\nenum ProficiencyLevel {\n  BEGINNER\n  INTERMEDIATE\n  ADVANCED\n  EXPERT\n}\n\nenum ConnectionStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n  BLOCKED\n}\n\nenum NotificationType {\n  REQUEST_RECEIVED\n  REQUEST_STATUS\n  INVITATION_RECEIVED\n  INVITATION_STATUS\n  MESSAGE_RECEIVED\n  CONNECTION_REQUEST\n  PROJECT_UPDATE\n  INVESTMENT_UPDATE\n  MILESTONE_COMPLETED\n  TEAM_INVITATION\n  REVIEW_RECEIVED\n  VERIFICATION_STATUS\n  SYSTEM_ANNOUNCEMENT\n}\n\nenum ProfileVisibility {\n  PUBLIC\n  CONNECTIONS_ONLY\n  PRIVATE\n}\n\nenum ActivityType {\n  LOGIN\n  LOGOUT\n  PROFILE_UPDATE\n  PROJECT_CREATE\n  PROJECT_UPDATE\n  REQUEST_SEND\n  INVESTMENT_PROPOSE\n  MESSAGE_SEND\n  CONNECTION_REQUEST\n  REVIEW_GIVE\n}\n\nenum Permission {\n  VIEW_PROJECT\n  EDIT_PROJECT\n  DELETE_PROJECT\n  MANAGE_MEMBERS\n  MANAGE_FINANCES\n  MANAGE_INVESTORS\n  VIEW_ANALYTICS\n  EDIT_PROFILE\n  MANAGE_REQUESTS\n  MANAGE_INVITATIONS\n  CREATE_UPDATES\n  MANAGE_MILESTONES\n  ADMIN_ACCESS\n}\n\nenum ProposalIntent {\n  SEEKING\n  OFFERING\n}\n",
  "inlineSchemaHash": "c9f7cfe1251573f837493a8aeabbb7f3fce8693c5ea2db28b387477a041bb375",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_account_id\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"accounts\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_token\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"email_verified\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userType\",\"kind\":\"enum\",\"type\":\"UserType\",\"dbName\":\"user_type\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"onboardingCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"onboarding_completed\"},{\"name\":\"onboardingStep\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"onboarding_step\"},{\"name\":\"credibilityScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"credibility_score\"},{\"name\":\"verificationLevel\",\"kind\":\"enum\",\"type\":\"VerificationLevel\",\"dbName\":\"verification_level\"},{\"name\":\"isKycVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_kyc_verified\"},{\"name\":\"kycDocuments\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"kyc_documents\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"lastActiveAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_active_at\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"founderProfile\",\"kind\":\"object\",\"type\":\"FounderProfile\",\"relationName\":\"FounderProfileToUser\"},{\"name\":\"investorProfile\",\"kind\":\"object\",\"type\":\"InvestorProfile\",\"relationName\":\"InvestorProfileToUser\"},{\"name\":\"memberProfile\",\"kind\":\"object\",\"type\":\"MemberProfile\",\"relationName\":\"MemberProfileToUser\"},{\"name\":\"ownedProjects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectOwner\"},{\"name\":\"participatedProjects\",\"kind\":\"object\",\"type\":\"ProjectMember\",\"relationName\":\"ProjectMemberToUser\"},{\"name\":\"ownedTeams\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamOwner\"},{\"name\":\"teamMemberships\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberUser\"},{\"name\":\"sentRequests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestSender\"},{\"name\":\"receivedRequests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestReceiver\"},{\"name\":\"sentInvitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationSender\"},{\"name\":\"receivedInvitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationReceiver\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"Investment\",\"relationName\":\"InvestmentToUser\"},{\"name\":\"givenReviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewGiver\"},{\"name\":\"receivedReviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewReceiver\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageSender\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReceiver\"},{\"name\":\"connections\",\"kind\":\"object\",\"type\":\"Connection\",\"relationName\":\"ConnectionRequester\"},{\"name\":\"receivedConnections\",\"kind\":\"object\",\"type\":\"Connection\",\"relationName\":\"ConnectionReceiver\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"interests\",\"kind\":\"object\",\"type\":\"UserInterest\",\"relationName\":\"UserToUserInterest\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSettings\",\"relationName\":\"UserToUserSettings\"},{\"name\":\"verificationRequests\",\"kind\":\"object\",\"type\":\"VerificationRequest\",\"relationName\":\"UserToVerificationRequest\"},{\"name\":\"projectLikes\",\"kind\":\"object\",\"type\":\"ProjectLike\",\"relationName\":\"ProjectLikeToUser\"},{\"name\":\"projectComments\",\"kind\":\"object\",\"type\":\"ProjectComment\",\"relationName\":\"ProjectCommentToUser\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"UserActivity\",\"relationName\":\"UserToUserActivity\"},{\"name\":\"proposals\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToUser\"},{\"name\":\"skillEndorsements\",\"kind\":\"object\",\"type\":\"SkillEndorsement\",\"relationName\":\"SkillEndorser\"},{\"name\":\"proposalComments\",\"kind\":\"object\",\"type\":\"ProposalComment\",\"relationName\":\"ProposalCommentToUser\"},{\"name\":\"proposalLikes\",\"kind\":\"object\",\"type\":\"ProposalLike\",\"relationName\":\"ProposalLikeToUser\"}],\"dbName\":\"users\"},\"FounderProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"companyExperience\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"company_experience\"},{\"name\":\"previousExits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"previous_exits\"},{\"name\":\"linkedinProfile\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"linkedin_profile\"},{\"name\":\"industryPreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"industry_preferences\"},{\"name\":\"locationPreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"location_preferences\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FounderProfileToUser\"}],\"dbName\":\"founder_profiles\"},\"InvestorProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"investorType\",\"kind\":\"enum\",\"type\":\"InvestorType\",\"dbName\":\"investor_type\"},{\"name\":\"firmName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"firm_name\"},{\"name\":\"investmentRange\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investment_range\"},{\"name\":\"minInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_investment\"},{\"name\":\"maxInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_investment\"},{\"name\":\"preferredStages\",\"kind\":\"enum\",\"type\":\"ProjectStage\",\"dbName\":\"preferred_stages\"},{\"name\":\"preferredIndustries\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_industries\"},{\"name\":\"geographicFocus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"geographic_focus\"},{\"name\":\"investmentThesis\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investment_thesis\"},{\"name\":\"valueAddServices\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"value_add_services\"},{\"name\":\"portfolioSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"portfolio_size\"},{\"name\":\"successfulExits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"successful_exits\"},{\"name\":\"averageCheckSize\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"average_check_size\"},{\"name\":\"isAccredited\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_accredited\"},{\"name\":\"accreditationProof\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"accreditation_proof\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvestorProfileToUser\"}],\"dbName\":\"investor_profiles\"},\"MemberProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"jobTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"job_title\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentSalary\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"current_salary\"},{\"name\":\"salaryExpectation\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"salary_expectation\"},{\"name\":\"availabilityType\",\"kind\":\"enum\",\"type\":\"AvailabilityType\",\"dbName\":\"availability_type\"},{\"name\":\"hoursPerWeek\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"hours_per_week\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"acceptsEquity\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"accepts_equity\"},{\"name\":\"acceptsCash\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"accepts_cash\"},{\"name\":\"acceptsDeferred\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"accepts_deferred\"},{\"name\":\"minEquityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_equity_percentage\"},{\"name\":\"remotePreference\",\"kind\":\"enum\",\"type\":\"RemotePreference\",\"dbName\":\"remote_preference\"},{\"name\":\"rolePreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_preferences\"},{\"name\":\"industryPreferences\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"industry_preferences\"},{\"name\":\"portfolioUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"portfolio_url\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"linkedin_url\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"github_url\"},{\"name\":\"achievements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberProfileToUser\"}],\"dbName\":\"member_profiles\"},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"owner_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"ProjectStage\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revenueModel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"revenue_model\"},{\"name\":\"targetMarket\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"target_market\"},{\"name\":\"competitiveEdge\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"competitive_edge\"},{\"name\":\"fundingGoal\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"funding_goal\"},{\"name\":\"fundingRaised\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"funding_raised\"},{\"name\":\"valuationCap\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"valuation_cap\"},{\"name\":\"teamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"team_size\"},{\"name\":\"isHiring\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_hiring\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProjectStatus\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRemoteFriendly\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_remote_friendly\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"ProjectAttachments\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"launchedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"launched_at\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectOwner\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"ProjectMember\",\"relationName\":\"ProjectToProjectMember\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"ProjectTeam\",\"relationName\":\"ProjectToProjectTeam\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"Investment\",\"relationName\":\"InvestmentToProject\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"ProjectToRequest\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToProject\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"ProjectLike\",\"relationName\":\"ProjectToProjectLike\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ProjectComment\",\"relationName\":\"ProjectToProjectComment\"},{\"name\":\"analytics\",\"kind\":\"object\",\"type\":\"ProjectAnalytics\",\"relationName\":\"ProjectToProjectAnalytics\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProjectToReview\"},{\"name\":\"proposals\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProjectToProposal\"}],\"dbName\":\"projects\"},\"ProjectMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"isCoFounder\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_cofounder\"},{\"name\":\"isInvestor\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_investor\"},{\"name\":\"isMember\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_member\"},{\"name\":\"compensationType\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"salary_amount\"},{\"name\":\"equityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_percentage\"},{\"name\":\"profitSharePercent\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"profit_share_percent\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"MemberStatus\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"left_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectMemberToUser\"}],\"dbName\":\"project_members\"},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"owner_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamType\",\"kind\":\"enum\",\"type\":\"TeamType\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TeamStatus\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isHiring\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_hiring\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_size\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRemote\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_remote\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamOwner\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberTeam\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"ProjectTeam\",\"relationName\":\"ProjectTeamToTeam\"},{\"name\":\"Requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToTeam\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToTeam\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"TeamAttachments\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToTeam\"}],\"dbName\":\"teams\"},\"TeamMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"MemberStatus\"},{\"name\":\"permissions\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"compensationType\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"salary_amount\"},{\"name\":\"equityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_percentage\"},{\"name\":\"hourlyRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"hourly_rate\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"left_at\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamMemberTeam\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberUser\"}],\"dbName\":\"team_members\"},\"ProjectTeam\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"assigned_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectTeam\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ProjectTeamToTeam\"}],\"dbName\":\"project_teams\"},\"Investment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investor_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"investmentType\",\"kind\":\"enum\",\"type\":\"InvestmentType\",\"dbName\":\"investment_type\"},{\"name\":\"equityPercent\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_percent\"},{\"name\":\"valuation\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"liquidationPref\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"liquidation_pref\"},{\"name\":\"antidilution\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"boardSeat\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"board_seat\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvestmentStatus\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"InvestmentStage\"},{\"name\":\"dueDiligenceCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"due_diligence_completed\"},{\"name\":\"legalDocsComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"legal_docs_complete\"},{\"name\":\"proposedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"proposed_at\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"accepted_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"InvestmentAttachments\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvestmentToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"InvestmentToProject\"}],\"dbName\":\"investments\"},\"Request\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"targetType\",\"kind\":\"enum\",\"type\":\"RequestTargetType\",\"dbName\":\"target_type\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"roleApplied\",\"kind\":\"enum\",\"type\":\"RoleType\",\"dbName\":\"role_applied\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposedTerms\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"proposed_terms\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RequestStatus\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"responded_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestSender\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestReceiver\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToRequest\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"RequestToTeam\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToRequest\"}],\"dbName\":\"requests\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"targetType\",\"kind\":\"enum\",\"type\":\"RequestTargetType\",\"dbName\":\"target_type\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terms\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RequestStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"responded_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationSender\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationReceiver\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"InvitationToProject\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"InvitationToTeam\"}],\"dbName\":\"invitations\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"giverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"giver_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"contextType\",\"kind\":\"enum\",\"type\":\"ReviewContextType\",\"dbName\":\"context_type\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workQuality\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"work_quality\"},{\"name\":\"communication\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reliability\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leadership\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"technicalSkills\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"technical_skills\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"giver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewGiver\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewReceiver\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToReview\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ReviewToTeam\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToReview\"}],\"dbName\":\"reviews\"},\"VerificationRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"VerificationType\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"VerificationAttachments\"},{\"name\":\"linkedinProfile\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"linkedin_profile\"},{\"name\":\"websiteUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"website_url\"},{\"name\":\"companyEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_email\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewed_by\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"reviewed_at\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"rejection_reason\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVerificationRequest\"}],\"dbName\":\"verification_requests\"},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userSkills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"SkillToUserSkill\"}],\"dbName\":\"skills\"},\"UserSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"skill_id\"},{\"name\":\"proficiency\",\"kind\":\"enum\",\"type\":\"ProficiencyLevel\"},{\"name\":\"yearsOfExp\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"years_of_exp\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"endorsements\",\"kind\":\"object\",\"type\":\"SkillEndorsement\",\"relationName\":\"SkillEndorsementToUserSkill\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToUserSkill\"}],\"dbName\":\"user_skills\"},\"SkillEndorsement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userSkillId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_skill_id\"},{\"name\":\"endorserId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"endorser_id\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"userSkill\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"SkillEndorsementToUserSkill\"},{\"name\":\"endorser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillEndorser\"}],\"dbName\":\"skill_endorsements\"},\"Interest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userInterests\",\"kind\":\"object\",\"type\":\"UserInterest\",\"relationName\":\"InterestToUserInterest\"}],\"dbName\":\"interests\"},\"UserInterest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"interestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"interest_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserInterest\"},{\"name\":\"interest\",\"kind\":\"object\",\"type\":\"Interest\",\"relationName\":\"InterestToUserInterest\"}],\"dbName\":\"user_interests\"},\"Connection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requesterId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"requester_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ConnectionStatus\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"requested_at\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"accepted_at\"},{\"name\":\"requester\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConnectionRequester\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConnectionReceiver\"}],\"dbName\":\"connections\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"read_at\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageSender\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageReceiver\"}],\"dbName\":\"messages\"},\"ProjectLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectLikeToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectLike\"}],\"dbName\":\"project_likes\"},\"ProjectComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectCommentToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectComment\"}],\"dbName\":\"project_comments\"},\"ProposalComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProposalCommentToUser\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToProposalComment\"}],\"dbName\":\"proposal_comments\"},\"ProposalLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProposalLikeToUser\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToProposalLike\"}],\"dbName\":\"proposal_likes\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"related_id\"},{\"name\":\"relatedType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"related_type\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"read_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"UserSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"profileVisibility\",\"kind\":\"enum\",\"type\":\"ProfileVisibility\",\"dbName\":\"profile_visibility\"},{\"name\":\"showEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_email\"},{\"name\":\"showPhone\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_phone\"},{\"name\":\"allowMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"allow_messages\"},{\"name\":\"allowConnections\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"allow_connections\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_notifications\"},{\"name\":\"pushNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"push_notifications\"},{\"name\":\"newRequestEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_request_email\"},{\"name\":\"newInvitationEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_invitation_email\"},{\"name\":\"newMessageEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_message_email\"},{\"name\":\"projectUpdateEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"project_update_email\"},{\"name\":\"investmentUpdateEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"investment_update_email\"},{\"name\":\"newConnectionEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"new_connection_email\"},{\"name\":\"weeklyDigestEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"weekly_digest_email\"},{\"name\":\"marketingEmails\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"marketing_emails\"},{\"name\":\"showInSearch\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_in_search\"},{\"name\":\"showInRecommendations\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_in_recommendations\"},{\"name\":\"theme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSettings\"}],\"dbName\":\"user_settings\"},\"UserActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"ActivityType\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserActivity\"}],\"dbName\":\"user_activities\"},\"ProjectAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"uniqueViews\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"unique_views\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"commentCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"comment_count\"},{\"name\":\"shareCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"share_count\"},{\"name\":\"RequestCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"request_count\"},{\"name\":\"acceptedApps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"accepted_apps\"},{\"name\":\"investmentRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"investment_requests\"},{\"name\":\"totalFunding\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"total_funding\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectAnalytics\"}],\"dbName\":\"project_analytics\"},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification_tokens\"},\"Proposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ProposalType\"},{\"name\":\"intent\",\"kind\":\"enum\",\"type\":\"ProposalIntent\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shortSummary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detailedDesc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keywords\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToProposal\"},{\"name\":\"timeline\",\"kind\":\"object\",\"type\":\"Timeline\",\"relationName\":\"ProposalToTimeline\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToProposal\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToProposal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProposalStatus\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToProposal\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"Visibility\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookmarks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investor\",\"kind\":\"object\",\"type\":\"InvestorProposal\",\"relationName\":\"InvestorProposalToProposal\"},{\"name\":\"mentor\",\"kind\":\"object\",\"type\":\"MentorProposal\",\"relationName\":\"MentorProposalToProposal\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"TeamProposal\",\"relationName\":\"ProposalToTeamProposal\"},{\"name\":\"cofounder\",\"kind\":\"object\",\"type\":\"CoFounderProposal\",\"relationName\":\"CoFounderProposalToProposal\"},{\"name\":\"partner\",\"kind\":\"object\",\"type\":\"PartnerProposal\",\"relationName\":\"PartnerProposalToProposal\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"CustomerProposal\",\"relationName\":\"CustomerProposalToProposal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProposalToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProposal\"},{\"name\":\"Requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"ProposalToRequest\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProposalToReview\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ProposalComment\",\"relationName\":\"ProposalToProposalComment\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"ProposalLike\",\"relationName\":\"ProposalToProposalLike\"}],\"dbName\":\"proposals\"},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_id\"},{\"name\":\"investmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"investment_id\"},{\"name\":\"verificationRequestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"verification_request_id\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"AttachmentType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"checksum\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"downloads\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"AttachmentToProposal\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectAttachments\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamAttachments\"},{\"name\":\"investment\",\"kind\":\"object\",\"type\":\"Investment\",\"relationName\":\"InvestmentAttachments\"},{\"name\":\"verificationRequest\",\"kind\":\"object\",\"type\":\"VerificationRequest\",\"relationName\":\"VerificationAttachments\"}],\"dbName\":\"attachments\"},\"Budget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"BudgetToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"budgets\"},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remote\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"hybrid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"willRelocate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timeZones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"LocationToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"locations\"},\"Timeline\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commitment\",\"kind\":\"enum\",\"type\":\"Commitment\"},{\"name\":\"availability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"urgency\",\"kind\":\"enum\",\"type\":\"Urgency\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToTimeline\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"timelines\"},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"github\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telegram\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discord\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferredContact\",\"kind\":\"enum\",\"type\":\"ContactMethod\",\"dbName\":\"preferred_contact\"},{\"name\":\"publicProfile\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"public_profile\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ContactToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"contacts\"},\"InvestorProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fundingNeeded\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"funding_needed\"},{\"name\":\"fundingType\",\"kind\":\"enum\",\"type\":\"FundingType\",\"dbName\":\"funding_type\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"startup_stage\"},{\"name\":\"currentRevenue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"current_revenue\"},{\"name\":\"projectedRevenue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"projected_revenue\"},{\"name\":\"customers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"monthlyUsers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"monthly_users\"},{\"name\":\"growthRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"growth_rate\"},{\"name\":\"useOfFunds\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"use_of_funds\"},{\"name\":\"keyMetrics\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"key_metrics\"},{\"name\":\"teamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"team_size\"},{\"name\":\"foundedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"founded_date\"},{\"name\":\"previousFunding\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"previous_funding\"},{\"name\":\"equityOffered\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_offered\"},{\"name\":\"boardSeat\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"board_seat\"},{\"name\":\"expectedROI\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"expected_roi\"},{\"name\":\"exitStrategy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"exit_strategy\"},{\"name\":\"minInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_investment\"},{\"name\":\"maxInvestment\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"max_investment\"},{\"name\":\"investorKind\",\"kind\":\"enum\",\"type\":\"InvestorKind\",\"dbName\":\"investor_kind\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"InvestorProposalToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"investor_proposals\"},\"MentorProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"MentorDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"guidanceAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"guidance_areas\"},{\"name\":\"specificChallenges\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"specific_challenges\"},{\"name\":\"currentStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"current_stage\"},{\"name\":\"preferredMentorBg\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_mentor_bg\"},{\"name\":\"expertiseAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"expertise_areas\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"years_experience\"},{\"name\":\"industriesServed\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"industries_served\"},{\"name\":\"successStories\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"success_stories\"},{\"name\":\"menteesCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mentees_criteria\"},{\"name\":\"preferredEngage\",\"kind\":\"enum\",\"type\":\"EngagementType\",\"dbName\":\"preferred_engage\"},{\"name\":\"sessionFrequency\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_frequency\"},{\"name\":\"compensationExp\",\"kind\":\"enum\",\"type\":\"MentorCompensation\",\"dbName\":\"compensation_exp\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"MentorProposalToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"mentor_proposals\"},\"TeamProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hiringOrSeeking\",\"kind\":\"enum\",\"type\":\"TeamDirection\",\"dbName\":\"hiring_or_seeking\"},{\"name\":\"roleTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_title\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seniority\",\"kind\":\"enum\",\"type\":\"SeniorityLevel\",\"dbName\":\"seniority_level\"},{\"name\":\"mustHaveSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"must_have_skills\"},{\"name\":\"niceToHaveSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"nice_to_have_skills\"},{\"name\":\"certifications\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languagesRequired\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"languages_required\"},{\"name\":\"workArrangement\",\"kind\":\"enum\",\"type\":\"WorkArrangement\",\"dbName\":\"work_arrangement\"},{\"name\":\"compensation\",\"kind\":\"enum\",\"type\":\"CompensationType\",\"dbName\":\"compensation_type\"},{\"name\":\"salaryRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"salary_range\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companySize\",\"kind\":\"enum\",\"type\":\"CompanySize\",\"dbName\":\"company_size\"},{\"name\":\"companyStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"company_stage\"},{\"name\":\"teamCulture\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"team_culture\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"ProposalToTeamProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"team_proposals\"},\"CoFounderProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"CofounderDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"roleTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_title\"},{\"name\":\"keyResponsibilities\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"key_responsibilities\"},{\"name\":\"decisionAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"decision_areas\"},{\"name\":\"equityOffered\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_offered\"},{\"name\":\"equityExpected\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"equity_expected\"},{\"name\":\"vestingSchedule\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vesting_schedule\"},{\"name\":\"timeCommitment\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"time_commitment\"},{\"name\":\"requiredSkills\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"required_skills\"},{\"name\":\"preferredBackground\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_background\"},{\"name\":\"mustHaveExperience\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"must_have_experience\"},{\"name\":\"personalityTraits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"personality_traits\"},{\"name\":\"businessStage\",\"kind\":\"enum\",\"type\":\"StartupStage\",\"dbName\":\"business_stage\"},{\"name\":\"currentTeamSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_team_size\"},{\"name\":\"businessModel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"business_model\"},{\"name\":\"targetMarket\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"target_market\"},{\"name\":\"workStyle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"work_style\"},{\"name\":\"companyValues\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_values\"},{\"name\":\"conflictResolution\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"conflict_resolution\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"CoFounderProposalToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"cofounder_proposals\"},\"PartnerProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seekingOrOffering\",\"kind\":\"enum\",\"type\":\"PartnerDirection\",\"dbName\":\"seeking_or_offering\"},{\"name\":\"partnershipType\",\"kind\":\"enum\",\"type\":\"PartnershipType\",\"dbName\":\"partnership_type\"},{\"name\":\"valueOffered\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"value_offered\"},{\"name\":\"valueExpected\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"value_expected\"},{\"name\":\"mutualBenefits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mutual_benefits\"},{\"name\":\"partnershipModel\",\"kind\":\"enum\",\"type\":\"PartnershipModel\",\"dbName\":\"partnership_model\"},{\"name\":\"revenueSharing\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"revenue_sharing\"},{\"name\":\"exclusivity\",\"kind\":\"enum\",\"type\":\"ExclusivityType\"},{\"name\":\"duration\",\"kind\":\"enum\",\"type\":\"PartnershipDuration\",\"dbName\":\"partnership_duration\"},{\"name\":\"partnerCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"partner_criteria\"},{\"name\":\"minimumRequirements\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"minimum_requirements\"},{\"name\":\"idealPartnerProfile\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ideal_partner_profile\"},{\"name\":\"currentPartners\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_partners\"},{\"name\":\"marketReach\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"market_reach\"},{\"name\":\"customerBase\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"customer_base\"},{\"name\":\"annualRevenue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"annual_revenue\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"PartnerProposalToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"partner_proposals\"},\"CustomerProposal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sellingOrBuying\",\"kind\":\"enum\",\"type\":\"CustomerDirection\",\"dbName\":\"selling_or_buying\"},{\"name\":\"productService\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_service\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pricingModel\",\"kind\":\"enum\",\"type\":\"PricingModel\",\"dbName\":\"pricing_model\"},{\"name\":\"priceRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"price_range\"},{\"name\":\"availability\",\"kind\":\"enum\",\"type\":\"Availability\"},{\"name\":\"deliveryTime\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"delivery_time\"},{\"name\":\"targetAudience\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"target_audience\"},{\"name\":\"customerBenefits\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"customer_benefits\"},{\"name\":\"uniqueSellingProp\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"unique_selling_prop\"},{\"name\":\"requirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budgetRange\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"budget_range\"},{\"name\":\"decisionCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"decision_criteria\"},{\"name\":\"timeframe\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marketSize\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"market_size\"},{\"name\":\"competitors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousClients\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"previous_clients\"},{\"name\":\"testimonials\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supportIncluded\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"support_included\"},{\"name\":\"warrantyTerms\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"warranty_terms\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_terms\"},{\"name\":\"proposal\",\"kind\":\"object\",\"type\":\"Proposal\",\"relationName\":\"CustomerProposalToProposal\"},{\"name\":\"proposalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"proposal_id\"}],\"dbName\":\"customer_proposals\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

